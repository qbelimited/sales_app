{"version":3,"file":"static/js/893.292f4a79.chunk.js","mappings":"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","sources":["pages/AuditTrailPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, Spinner, Row, Col, Button, Form, Modal } from 'react-bootstrap';\r\nimport { FaSearch, FaInfoCircle, FaArrowLeft, FaArrowRight, FaAngleDoubleLeft, FaAngleDoubleRight } from 'react-icons/fa';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport api from '../services/api';\r\n\r\nconst AuditTrailPage = ({ showToast }) => {\r\n  const [auditLogs, setAuditLogs] = useState([]);\r\n  const [users, setUsers] = useState({});\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filter, setFilter] = useState({\r\n    resourceType: '',\r\n    action: '',\r\n    startDate: null,\r\n    endDate: null,\r\n  });\r\n  const [showDetailsModal, setShowDetailsModal] = useState(false);\r\n  const [selectedLog, setSelectedLog] = useState(null);\r\n  const [resourceTypes, setResourceTypes] = useState([]);\r\n  const [actions, setActions] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(50);\r\n  const [archiveView, setArchiveView] = useState('current'); // 'current', 'previous', 'older'\r\n\r\n  // Fetch all audit logs\r\n  const fetchAuditLogs = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.get('/audit_trail/');\r\n      const logs = response.data || [];\r\n      setAuditLogs(logs);\r\n      extractUniqueResourceTypesAndActions(logs);\r\n    } catch (error) {\r\n      console.error('Error fetching audit logs:', error);\r\n      setError('Failed to fetch audit logs. Please try again later.');\r\n      showToast('danger', 'Failed to fetch audit logs. Please try again later.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showToast]);\r\n\r\n  // Extract unique resource types and actions from the audit logs\r\n  const extractUniqueResourceTypesAndActions = (logs) => {\r\n    const uniqueResourceTypes = [...new Set(logs.map((log) => log.resource_type))];\r\n    const uniqueActions = [...new Set(logs.map((log) => log.action.replace('AuditAction.', '')))];\r\n    setResourceTypes(uniqueResourceTypes);\r\n    setActions(uniqueActions);\r\n  };\r\n\r\n  // Fetch all users to map user IDs to names\r\n  const fetchUsers = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/users/');\r\n      const usersMap = {};\r\n      response.data.users.forEach((user) => {\r\n        usersMap[user.id] = user.name;\r\n      });\r\n      setUsers(usersMap);\r\n    } catch (error) {\r\n      console.error('Error fetching users:', error);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchAuditLogs();\r\n    fetchUsers();\r\n  }, [fetchAuditLogs, fetchUsers]);\r\n\r\n  // Handle filtering\r\n  const handleFilter = async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.post('/audit_trail/filter', filter);\r\n      const logs = response.data || [];\r\n      setAuditLogs(logs);\r\n      extractUniqueResourceTypesAndActions(logs);\r\n      setCurrentPage(1); // Reset to the first page after filtering\r\n    } catch (error) {\r\n      console.error('Error filtering audit logs:', error);\r\n      setError('Failed to filter audit logs. Please try again later.');\r\n      showToast('danger', 'Failed to filter audit logs. Please try again later.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Handle viewing details of a specific log\r\n  const handleViewDetails = async (logId) => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.get(`/audit_trail/${logId}`);\r\n      setSelectedLog(response.data);\r\n      setShowDetailsModal(true);\r\n    } catch (error) {\r\n      console.error('Error fetching log details:', error);\r\n      showToast('danger', 'Failed to fetch log details. Please try again later.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Calculate the current logs to display based on pagination and archive view\r\n  const filteredLogs = auditLogs.filter((log) => {\r\n    const logDate = new Date(log.timestamp);\r\n    const today = new Date();\r\n    if (archiveView === 'current') {\r\n      return logDate >= new Date(today.setDate(today.getDate() - today.getDay())); // Current week\r\n    } else if (archiveView === 'previous') {\r\n      return (\r\n        logDate < new Date(today.setDate(today.getDate() - today.getDay())) &&\r\n        logDate >= new Date(today.setDate(today.getDate() - 7))\r\n      ); // Previous week\r\n    } else {\r\n      return logDate < new Date(today.setDate(today.getDate() - 7)); // Older than previous week\r\n    }\r\n  });\r\n\r\n  const indexOfLastLog = currentPage * itemsPerPage;\r\n  const indexOfFirstLog = indexOfLastLog - itemsPerPage;\r\n  const currentLogs = filteredLogs.slice(indexOfFirstLog, indexOfLastLog);\r\n\r\n  // Handle page change\r\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Calculate the number of pages to show in pagination\r\n  const totalPages = Math.ceil(filteredLogs.length / itemsPerPage);\r\n  const maxPageNumbers = 5;\r\n  const startPage = Math.max(1, currentPage - Math.floor(maxPageNumbers / 2));\r\n  const endPage = Math.min(totalPages, startPage + maxPageNumbers - 1);\r\n\r\n  if (loading) return <Spinner animation=\"border\" />;\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px', padding: '20px' }}>\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h2>Audit Trail</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Filter Section */}\r\n      <Form className=\"mb-4\">\r\n        <Row className=\"align-items-end\">\r\n          <Col md={2}>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={filter.resourceType}\r\n              onChange={(e) => setFilter({ ...filter, resourceType: e.target.value })}\r\n            >\r\n              <option value=\"\">Resource Type</option>\r\n              {resourceTypes.map((type) => (\r\n                <option key={type} value={type}>{type}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n          <Col md={2}>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={filter.action}\r\n              onChange={(e) => setFilter({ ...filter, action: e.target.value })}\r\n            >\r\n              <option value=\"\">Action</option>\r\n              {actions.map((action) => (\r\n                <option key={action} value={action}>{action}</option>\r\n              ))}\r\n            </Form.Control>\r\n          </Col>\r\n          <Col md={2}>\r\n            <DatePicker\r\n              selected={filter.startDate}\r\n              onChange={(date) => setFilter({ ...filter, startDate: date })}\r\n              placeholderText=\"Start Date\"\r\n              className=\"form-control\"\r\n            />\r\n          </Col>\r\n          <Col md={2}>\r\n            <DatePicker\r\n              selected={filter.endDate}\r\n              onChange={(date) => setFilter({ ...filter, endDate: date })}\r\n              placeholderText=\"End Date\"\r\n              className=\"form-control\"\r\n            />\r\n          </Col>\r\n          <Col md={2}>\r\n            <Button variant=\"primary\" onClick={handleFilter}>\r\n              <FaSearch /> Filter\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\r\n      {error && <p className=\"text-center text-danger\">{error}</p>}\r\n\r\n      {/* Archive Toggle */}\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <Button variant={archiveView === 'current' ? 'primary' : 'secondary'} onClick={() => setArchiveView('current')}>\r\n            Current Week\r\n          </Button>{' '}\r\n          <Button variant={archiveView === 'previous' ? 'primary' : 'secondary'} onClick={() => setArchiveView('previous')}>\r\n            Previous Week\r\n          </Button>{' '}\r\n          <Button variant={archiveView === 'older' ? 'primary' : 'secondary'} onClick={() => setArchiveView('older')}>\r\n            Older\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Audit Logs Table */}\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Resource Type</th>\r\n            <th>Action</th>\r\n            <th>User</th>\r\n            <th>Resource ID</th>\r\n            <th>Details</th>\r\n            <th>Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {currentLogs.length > 0 ? (\r\n            currentLogs.map((log, index) => (\r\n              <tr key={log.id}>\r\n                <td>{indexOfFirstLog + index + 1}</td>\r\n                <td>{log.resource_type}</td>\r\n                <td>{log.action.replace('AuditAction.', '')}</td>\r\n                <td>{users[log.user_id] || 'Unknown User'}</td>\r\n                <td>{log.resource_id || 'N/A'}</td>\r\n                <td>{log.details}</td>\r\n                <td>{new Date(log.timestamp).toLocaleString()}</td>\r\n                <td>\r\n                  <Button variant=\"link\" size=\"sm\" onClick={() => handleViewDetails(log.id)}>\r\n                    <FaInfoCircle /> Details\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"8\" className=\"text-center\">No audit logs found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Pagination Controls */}\r\n      <Row className=\"mt-3\">\r\n        <Col className=\"text-center\">\r\n          {currentPage > 1 && (\r\n            <>\r\n              <Button variant=\"secondary\" onClick={() => handlePageChange(1)} className=\"mx-1\">\r\n                <FaAngleDoubleLeft />\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={() => handlePageChange(currentPage - 1)} className=\"mx-1\">\r\n                <FaArrowLeft />\r\n              </Button>\r\n            </>\r\n          )}\r\n          {[...Array(endPage - startPage + 1).keys()].map((number) => (\r\n            <Button\r\n              key={startPage + number}\r\n              variant={currentPage === startPage + number ? 'primary' : 'secondary'}\r\n              onClick={() => handlePageChange(startPage + number)}\r\n              className=\"mx-1\"\r\n            >\r\n              {startPage + number}\r\n            </Button>\r\n          ))}\r\n          {currentPage < totalPages && (\r\n            <>\r\n              <Button variant=\"secondary\" onClick={() => handlePageChange(currentPage + 1)} className=\"mx-1\">\r\n                <FaArrowRight />\r\n              </Button>\r\n              <Button variant=\"secondary\" onClick={() => handlePageChange(totalPages)} className=\"mx-1\">\r\n                <FaAngleDoubleRight />\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* View Details Modal */}\r\n      <Modal show={showDetailsModal} onHide={() => setShowDetailsModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Audit Log Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {selectedLog ? (\r\n            <>\r\n              <p><strong>ID:</strong> {selectedLog.id}</p>\r\n              <p><strong>Resource Type:</strong> {selectedLog.resource_type}</p>\r\n              <p><strong>Action:</strong> {selectedLog.action.replace('AuditAction.', '')}</p>\r\n              <p><strong>User:</strong> {users[selectedLog.user_id] || 'Unknown User'}</p>\r\n              <p><strong>Resource ID:</strong> {selectedLog.resource_id || 'N/A'}</p>\r\n              <p><strong>Date:</strong> {new Date(selectedLog.timestamp).toLocaleString()}</p>\r\n              <p><strong>Details:</strong> {selectedLog.details}</p>\r\n              <p><strong>IP Address:</strong> {selectedLog.ip_address || 'N/A'}</p>\r\n              <p><strong>User Agent:</strong> {selectedLog.user_agent || 'N/A'}</p>\r\n            </>\r\n          ) : (\r\n            <p>No details available.</p>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDetailsModal(false)}>\r\n            Close\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AuditTrailPage;\r\n"],"names":["_ref","showToast","auditLogs","setAuditLogs","useState","users","setUsers","loading","setLoading","error","setError","filter","setFilter","resourceType","action","startDate","endDate","showDetailsModal","setShowDetailsModal","selectedLog","setSelectedLog","resourceTypes","setResourceTypes","actions","setActions","currentPage","setCurrentPage","itemsPerPage","archiveView","setArchiveView","fetchAuditLogs","useCallback","async","logs","api","get","data","extractUniqueResourceTypesAndActions","console","uniqueResourceTypes","Set","map","log","resource_type","uniqueActions","replace","fetchUsers","response","usersMap","forEach","user","id","name","useEffect","filteredLogs","logDate","Date","timestamp","today","setDate","getDate","getDay","indexOfLastLog","indexOfFirstLog","currentLogs","slice","handlePageChange","pageNumber","totalPages","Math","ceil","length","startPage","max","floor","maxPageNumbers","endPage","min","_jsx","Spinner","animation","_jsxs","style","marginTop","padding","children","Row","className","Col","Form","md","Control","as","value","onChange","e","target","type","DatePicker","selected","date","placeholderText","Button","variant","onClick","post","FaSearch","Table","striped","bordered","hover","responsive","index","user_id","resource_id","details","toLocaleString","size","logId","handleViewDetails","FaInfoCircle","colSpan","_Fragment","FaAngleDoubleLeft","FaArrowLeft","Array","keys","number","FaArrowRight","FaAngleDoubleRight","Modal","show","onHide","Header","closeButton","Title","Body","ip_address","user_agent","Footer"],"sourceRoot":""}