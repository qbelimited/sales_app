{"version":3,"file":"static/js/453.48d5a42a.chunk.js","mappings":"2UAIA,MAwwBA,EAxwBkBA,IAAuC,IAAtC,SAAEC,EAAQ,SAAEC,EAAQ,SAAEC,GAAUH,EACjD,MAAOI,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,gBAAiB,GACjBC,mBAAoB,GACpBC,YAAa,GACbC,aAAc,GACdC,aAAc,GACdC,cAAe,GACfC,oBAAqB,GACrBC,YAAa,GACbC,sBAAuB,GACvBC,oBAAqB,GACrBC,qBAAqB,EACrBC,2BAA4B,GAC5BC,QAAS,GACTC,eAAgB,GAChBC,gBAAiB,GACjBC,YAAa,GACbC,gBAAiB,GACjBC,SAAU,GACVC,eAAgB,GAChBC,OAAQ,GACRC,iBAAiB,EACjBC,qBAAsB,GACtBC,sBAAuB,GACvBC,oBAAoB,EACpBC,YAAY,EACZC,OAAQ,eAGHC,EAAQC,IAAa5B,EAAAA,EAAAA,UAAS,CAAC,IAC/B6B,EAAiBC,IAAsB9B,EAAAA,EAAAA,UAAS,KAChD+B,EAAgBC,IAAqBhC,EAAAA,EAAAA,UAAS,KAC9CiC,EAAOC,IAAYlC,EAAAA,EAAAA,UAAS,KAC5BmC,EAAUC,IAAepC,EAAAA,EAAAA,UAAS,KAClCqC,EAAWC,IAAgBtC,EAAAA,EAAAA,UAAS,KACpCuC,EAAeC,IAAoBxC,EAAAA,EAAAA,UAAS,KAC5CyC,EAAsBC,IAA2B1C,EAAAA,EAAAA,WAAS,IAEjE2C,EAAAA,EAAAA,YAAU,KACRC,IACAC,IACAC,IACAC,IAEIpD,GACFI,EAAYJ,GAIdqD,UAAUC,YAAYC,oBACnBC,IACCT,GAAwB,GACxB3C,GAAaqD,IAAQ,IAChBA,EACH9B,qBAAsB6B,EAASE,OAAOC,SACtC/B,sBAAuB4B,EAASE,OAAOE,aACtC,IAEL,KACEC,EAAAA,GAAMC,MAAM,+CACZf,GAAwB,EAAM,GAEjC,GACA,CAAC/C,IAGJ,MA0BMmD,EAAqBY,UACzB,IACE,MAAMC,QAAiBC,EAAAA,EAAIC,IAAI,aAAc,CAC3CC,OAAQ,CAAEC,KAAM,mBAAoBC,QAAS,KAE/CxB,EAAiBmB,EAASM,KAC5B,CAAE,MAAOR,GACPD,EAAAA,GAAMC,MAAM,iCACd,GAGIV,EAAiBW,UACrB,IACE,MAAMC,QAAiBC,EAAAA,EAAIC,IAAI,aAAc,CAC3CC,OAAQ,CAAEC,KAAM,cAElBzB,EAAaqB,EAASM,KACxB,CAAE,MAAOR,GACPD,EAAAA,GAAMC,MAAM,4BACd,GAGIb,EAAac,UACjB,IACE,MAAMC,QAAiBC,EAAAA,EAAIC,IAAI,UAC/BK,QAAQC,IAAI,iBAAkBR,EAASM,MACvC/B,EAASyB,EAASM,KACpB,CAAE,MAAOR,GACPD,EAAAA,GAAMC,MAAM,wBACd,GAGIZ,EAAsBa,UAC1B,IACE,MAAMC,QAAiBC,EAAAA,EAAIC,IAAI,qBAC/B7B,EAAkB2B,EAASM,KAAKG,SAClC,CAAE,MAAOX,GACPD,EAAAA,GAAMC,MAAM,kCACd,GAeIY,EAAoBX,UACxB,MAAM,KAAEY,EAAI,MAAEC,EAAK,KAAER,EAAI,QAAES,GAAYC,EAAEC,OAMzC,GALA3E,GAAaqD,IAAQ,IAChBA,EACH,CAACkB,GAAgB,aAATP,EAAsBS,EAAUD,MAG7B,kBAATD,EAA0B,MAnBAZ,WAC9B,IAIE,aAHuBE,EAAAA,EAAIC,IAAI,sBAAuB,CACpDC,OAAQ,CAAExD,cAAeqE,MAEXV,KAAKW,MACvB,CAAE,MAAOnB,GAEP,OADAD,EAAAA,GAAMC,MAAM,kCACL,CACT,GAWuBoB,CAAwBN,IAE3Cf,EAAAA,GAAMC,MAAM,qCACZ7B,GAAWkD,IAAU,IAChBA,EACHxE,cAAe,yCAGjBsB,GAAWkD,IAAU,IAChBA,EACHxE,mBAAeyE,KAGrB,CAUA,GARa,oBAATT,GAvFuBZ,WAC3B,IACE,MAAMC,QAAiBC,EAAAA,EAAIC,IAAI,aAAc,CAC3CC,OAAQ,CAAEC,KAAM,kBAAmBiB,WAAYC,KAEjDnD,EAAmB6B,EAASM,KAC9B,CAAE,MAAOR,GACPD,EAAAA,GAAMC,MAAM,mCACd,GAgFEyB,CAAqBX,GAGV,YAATD,GA1GgBZ,WACpB,IACE,GAAIyB,EAAQ,CACV,MAAMxB,QAAiBC,EAAAA,EAAIC,IAAI,aAAc,CAC3CC,OAAQ,CAAEC,KAAM,SAAUlD,QAASsE,KAErC/C,EAAYuB,EAASM,KACvB,MACE7B,EAAY,GAEhB,CAAE,MAAOqB,GACPD,EAAAA,GAAMC,MAAM,2BACd,GA+FE2B,CAAcb,GAGH,gBAATD,EAAwB,CAC1B,MAAMe,EAAmB,SAAVd,EACfxE,GAAaqD,IAAQ,IAChBA,EACH3C,sBAAuB4E,EAASjC,EAAS3C,sBAAwB,GACjEC,oBAAqB2E,EAASjC,EAAS1C,oBAAsB,GAC7DG,QAAUwE,EAA4B,GAAnBjC,EAASvC,QAC5BC,eAAiBuE,EAAmC,GAA1BjC,EAAStC,eACnCC,gBAAkBsE,EAAoC,GAA3BjC,EAASrC,gBACpCC,YAAuB,aAAVuD,EAAuBnB,EAASpC,YAAc,GAC3DC,gBAA2B,aAAVsD,EAAuBnB,EAASnC,gBAAkB,GACnEC,SAAWmE,EAA6B,GAApBjC,EAASlC,SAC7BN,2BAA6ByE,EAAcjC,EAASxC,2BAAd,MAE1C,GAmHF,OACE0E,EAAAA,EAAAA,MAAA,QAAM1F,SAvDa8D,UAInB,GAHAe,EAAEc,iBA3DiBC,MACnB,MAAMC,EAAY,CAAC,EAyBnB,GAvBK3F,EAASG,kBAAiBwF,EAAUxF,gBAAkB,4BACtDH,EAASI,qBAAoBuF,EAAUvF,mBAAqB,+BAC5DJ,EAASK,cAAasF,EAAUtF,YAAc,2BAC9CL,EAASM,eAAcqF,EAAUrF,aAAe,gCAChDN,EAASqB,iBAAgBsE,EAAUtE,eAAiB,2BACpDrB,EAASO,cAAiD,KAAjCP,EAASO,aAAaqF,SAAeD,EAAUpF,aAAe,yCACvFP,EAASQ,cACLqB,EAAOrB,gBAAemF,EAAUnF,cAAgBqB,EAAOrB,eADnCmF,EAAUnF,cAAgB,4BAElDR,EAASsB,SAAQqE,EAAUrE,OAAS,sBAGZ,SAAzBtB,EAASU,cACNV,EAASW,wBAAuBgF,EAAUhF,sBAAwB,qCAClEX,EAASY,sBAAqB+E,EAAU/E,oBAAsB,oCAIxC,aAAzBZ,EAASU,aAAsE,aAAxCV,EAASc,6BAC7Cd,EAASkB,cAAayE,EAAUzE,YAAc,6BAC9ClB,EAASoB,WAAUuE,EAAUvE,SAAW,yBAIlB,SAAzBpB,EAASU,aAAkE,SAAxCV,EAASc,2BAAuC,CAChFd,EAASe,UAAS4E,EAAU5E,QAAU,oBACtCf,EAASgB,iBAAgB2E,EAAU3E,eAAiB,2BAEzD,MAAM6E,EAAuB7F,EAASiB,gBAAgB6E,OACtD,GAAKD,EAEE,CACL,MAAMD,EAASC,EAAqBD,OACpCxB,QAAQC,IAAI,kBAAmBwB,GAC/BzB,QAAQC,IAAI,yBAA0BuB,GAEtC,MAAMG,EAAe5D,EAAM6D,MAAKC,GAAQA,EAAKC,KAAOC,SAASnG,EAASe,QAAS,MAEzEqF,GADWL,EAAeA,EAAavB,KAAO,IACjB6B,cAE/BD,EAAkBE,SAAS,QAAqB,KAAXV,EACvCD,EAAU1E,gBAAkB,wCAClBmF,EAAkBE,SAAS,WAAaF,EAAkBE,SAAS,UAAuB,KAAXV,EACzFD,EAAU1E,gBAAkB,kDACnBmF,EAAkBE,SAAS,OAAoB,KAAXV,GAA4B,KAAXA,EAC9DD,EAAU1E,gBAAkB,4CACR,KAAX2E,GAA4B,KAAXA,GAA4B,KAAXA,GAA4B,KAAXA,GAA4B,KAAXA,IAC7ED,EAAU1E,gBAAkB,qDAEhC,MAnBE0E,EAAU1E,gBAAkB,iCAoBhC,CAGA,OADAa,EAAU6D,GAC+B,IAAlCY,OAAOC,KAAKb,GAAWC,MAAY,EAOrCF,GAEL,IAEE,MAAMe,EAAgB,IACjBzG,EACHG,gBAAiBgG,SAASnG,EAASG,gBAAiB,IACpDC,mBAAoB+F,SAASnG,EAASI,mBAAoB,IAC1DiB,eAAgB8E,SAASnG,EAASqB,eAAgB,IAClDC,OAAQoF,WAAW1G,EAASsB,QAG5BP,QAASf,EAASe,QAAUoF,SAASnG,EAASe,QAAS,SAAMkE,EAC7DjE,eAAgBhB,EAASgB,eAAiBmF,SAASnG,EAASgB,eAAgB,SAAMiE,EAClF/D,YAAalB,EAASkB,YAAciF,SAASnG,EAASkB,YAAa,SAAM+D,EAGzE9B,YAAa,CACXK,SAAUkD,WAAW1G,EAASwB,sBAC9BiC,UAAWiD,WAAW1G,EAASyB,yBAKnC8E,OAAOC,KAAKC,GAAeE,SAAQC,SACN3B,IAAvBwB,EAAcG,WACTH,EAAcG,EACvB,IAIF,MAAM/C,QAAiBC,EAAAA,EAAI+C,KAAK,UAAWJ,EAAe,CACxDK,QAAS,CACP,eAAgB,sBAKI,MAApBjD,EAASjC,QAAsC,MAApBiC,EAASjC,QAAsC,MAApBiC,EAASjC,QAAsC,MAApBiC,EAASjC,QAC5F8B,EAAAA,GAAMqD,QAAQ,gCACdjH,KAEA4D,EAAAA,GAAMC,MAAM,+CAEhB,CAAE,MAAOA,GACPS,QAAQT,MAAM,yBAA0BA,GACxCD,EAAAA,GAAMC,MAAM,4BACd,GAI8BqD,UAAWrE,EAAuB,GAAK,WAAWsE,SAAA,EAC5EtE,IACAuE,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,SAAC,iDAIpCzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASG,gBAChBgH,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,wBAChBxE,EAAc4E,KAAKC,IAClBJ,EAAAA,EAAAA,KAAA,UAAoBzC,MAAO6C,EAAGpB,GAAGe,SAC9BK,EAAG9C,MADO8C,EAAGpB,SAKnBrE,EAAO1B,kBAAmB+G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAO1B,sBAIlEqF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,qBACLC,MAAOzE,EAASI,mBAChB+G,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,2BAChBlF,EAAgBsF,KAAKE,IACpBL,EAAAA,EAAAA,KAAA,UAAoBzC,MAAO8C,EAAGrB,GAAGe,SAC9BM,EAAG/C,MADO+C,EAAGrB,SAKnBrE,EAAOzB,qBAAsB8G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOzB,yBAIrEoF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,cACLC,MAAOzE,EAASK,YAChB8G,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOxB,cAAe6G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOxB,kBAG9DmF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,eACLC,MAAOzE,EAASO,aAChB4G,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOtB,eAAgB2G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOtB,mBAG/DiF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qEACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,eACLC,MAAOzE,EAASM,aAChB6G,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOvB,eAAgB4G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOvB,mBAI/DkF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,cACLC,MAAOzE,EAASU,YAChByG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,mBACjBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,OAAMwC,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,OAAMwC,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,WAAUwC,SAAC,gBAE1BpF,EAAOnB,cAAewG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOnB,iBAIpC,SAAzBV,EAASU,cACR8E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,2BACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,wBACLC,MAAOzE,EAASW,sBAChBwG,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOlB,wBAAyBuG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOlB,4BAGxE6E,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,sBACLC,MAAOzE,EAASY,oBAChBuG,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOjB,sBAAuBsG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOjB,0BAItE4E,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,sBACLC,MAAOzE,EAASS,oBAChB0G,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,mBACjBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,YAAWwC,SAAC,eAC1BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,SAAQwC,SAAC,YACvBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,sBAAqBwC,SAAC,2BAErCpF,EAAOpB,sBAAuByG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOpB,0BAGtE+E,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,WACL+C,UAAU,mBACVd,GAAG,sBACH1B,KAAK,sBACLE,QAAS1E,EAASa,oBAClBsG,SAAU5C,EACV6C,UAAWzE,KAEbuE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mBAAmBS,QAAQ,sBAAqBR,SAAC,mCAQ9C,aAAzBjH,EAASU,cACR8E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPzB,EAAAA,EAAAA,MAAA,UACEvB,KAAK,OACL+C,UAAU,eACVxC,KAAK,cACLC,MAAOzE,EAASkB,YAChBiG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,oBAChB1E,EAAU8E,KAAKK,IACdR,EAAAA,EAAAA,KAAA,UAAqBzC,MAAOiD,EAAIxB,GAAGe,SAChCS,EAAIlD,MADMkD,EAAIxB,SAKpBrE,EAAOX,cAAegG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOX,kBAG9DsE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASmB,gBAChBgG,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOV,kBAAmB+F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOV,wBAM5C,SAAzBnB,EAASU,cACR8E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,UACLC,MAAOzE,EAASe,QAChBoG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,gBAChB9E,EAAMkF,KAAKpB,IACViB,EAAAA,EAAAA,KAAA,UAAsBzC,MAAOwB,EAAKC,GAAGe,SAClChB,EAAKzB,MADKyB,EAAKC,SAKrBrE,EAAOd,UAAWmG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOd,cAI1DyE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,iBACLC,MAAOzE,EAASgB,eAChBmG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,kBAChB5E,EAASgF,KAAKM,IACbT,EAAAA,EAAAA,KAAA,UAAwBzC,MAAOkD,EAAOzB,GAAGe,SACtCU,EAAOnD,MADGmD,EAAOzB,SAKvBrE,EAAOb,iBAAkBkG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOb,qBAGjEwE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASiB,gBAChBkG,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOZ,kBAAmBiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOZ,yBAMtEuE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kCACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,iBACLC,MAAOzE,EAASqB,eAChB8F,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,mBAChBhF,EAAeoF,KAAKO,IACnBV,EAAAA,EAAAA,KAAA,UAAyBzC,MAAOmD,EAAQ1B,GAAGe,SACxCW,EAAQpD,MADEoD,EAAQ1B,SAKxBrE,EAAOR,iBAAkB6F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOR,qBAIjEmE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,+BACPC,EAAAA,EAAAA,KAAA,SACEF,UAAU,eACVxC,KAAK,gBACLC,MAAOzE,EAASQ,cAChB2G,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOrB,gBAAiB0G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOrB,mBAI/DR,EAASa,sBACR2E,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,+BACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,6BACLC,MAAOzE,EAASc,2BAChBqG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,UAASwC,SAAC,mBACxBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,WAAUwC,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,OAAMwC,SAAC,YAEtBpF,EAAOf,6BAA8BoG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOf,gCAKtC,aAAxCd,EAASc,6BACR0E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,mBACPzB,EAAAA,EAAAA,MAAA,UACEvB,KAAK,OACL+C,UAAU,eACVxC,KAAK,cACLC,MAAOzE,EAASkB,YAChBiG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,oBAChB1E,EAAU8E,KAAKK,IACdR,EAAAA,EAAAA,KAAA,UAAqBzC,MAAOiD,EAAIxB,GAAGe,SAChCS,EAAIlD,MADMkD,EAAIxB,SAKpBrE,EAAOX,cAAegG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOX,kBAG9DsE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASmB,gBAChBgG,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOV,kBAAmB+F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOV,wBAM7B,SAAxCnB,EAASc,6BACR0E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,UACLC,MAAOzE,EAASe,QAChBoG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,gBAChB9E,EAAMkF,KAAKpB,IACViB,EAAAA,EAAAA,KAAA,UAAsBzC,MAAOwB,EAAKC,GAAGe,SAClChB,EAAKzB,MADKyB,EAAKC,SAKrBrE,EAAOd,UAAWmG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOd,cAI1DyE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,iBACLC,MAAOzE,EAASgB,eAChBmG,SAAU5C,EACV6C,UAAWzE,EAAqBsE,SAAA,EAEhCC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,kBAChB5E,EAASgF,KAAKM,IACbT,EAAAA,EAAAA,KAAA,UAAwBzC,MAAOkD,EAAOzB,GAAGe,SACtCU,EAAOnD,MADGmD,EAAOzB,SAKvBrE,EAAOb,iBAAkBkG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOb,qBAGjEwE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASiB,gBAChBkG,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOZ,kBAAmBiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOZ,yBAM3C,aAAzBjB,EAASU,aAAsE,aAAxCV,EAASc,8BAChD0E,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,WACLC,MAAOzE,EAASoB,SAChB+F,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOT,WAAY8F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOT,eAK7DoE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,WACL+C,UAAU,mBACVd,GAAG,kBACH1B,KAAK,kBACLE,QAAS1E,EAASuB,gBAClB4F,SAAU5C,EACV6C,UAAWzE,KAEbuE,EAAAA,EAAAA,KAAA,SAAOF,UAAU,mBAAmBS,QAAQ,kBAAiBR,SAAC,sCAMhEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,SACL+C,UAAU,eACVxC,KAAK,SACLC,MAAOzE,EAASsB,OAChB6F,SAAU5C,EACV6C,UAAWzE,IAEZd,EAAOP,SAAU4F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOP,aAGzD4F,EAAAA,EAAAA,KAAA,OAAKW,MAAO,CAAEC,MAAO,MAAOC,SAAU,QAASd,UAC7CC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,yDAGNC,EAAAA,EAAAA,KAAA,UAAQjD,KAAK,SAAS+C,UAAU,uBAAsBC,SAAC,iBAGvDC,EAAAA,EAAAA,KAAA,UAAQjD,KAAK,SAAS+C,UAAU,8BAA8BgB,QAASjI,EAASkH,SAAC,aAG5E,ECpUX,EAhcsBrH,IAAuC,IAADqI,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,IAArC,SAAExI,EAAQ,SAAEC,EAAQ,SAAEC,GAAUH,EACrD,MAAOI,EAAUC,IAAeC,EAAAA,EAAAA,UAAS,CACvCC,iBAAyB,OAARN,QAAQ,IAARA,GAAsB,QAAdoI,EAARpI,EAAUyI,oBAAY,IAAAL,OAAd,EAARA,EAAwB/B,KAAM,GAC/C9F,oBAA4B,OAARP,QAAQ,IAARA,OAAQ,EAARA,EAAUO,qBAAsB,GACpDC,aAAqB,OAARR,QAAQ,IAARA,OAAQ,EAARA,EAAUQ,cAAe,GACtCC,cAAsB,OAART,QAAQ,IAARA,OAAQ,EAARA,EAAUS,eAAgB,GACxCC,cAAsB,OAARV,QAAQ,IAARA,OAAQ,EAARA,EAAUU,eAAgB,GACxCC,eAAuB,OAARX,QAAQ,IAARA,OAAQ,EAARA,EAAUW,gBAAiB,GAC1CC,qBAA6B,OAARZ,QAAQ,IAARA,OAAQ,EAARA,EAAUY,sBAAuB,GACtDC,aAAqB,OAARb,QAAQ,IAARA,OAAQ,EAARA,EAAUa,cAAe,GACtCC,uBAA+B,OAARd,QAAQ,IAARA,OAAQ,EAARA,EAAUc,wBAAyB,GAC1DC,qBAA6B,OAARf,QAAQ,IAARA,OAAQ,EAARA,EAAUe,sBAAuB,GACtDC,qBAA6B,OAARhB,QAAQ,IAARA,OAAQ,EAARA,EAAUgB,uBAAuB,EACtDC,4BAAoC,OAARjB,QAAQ,IAARA,OAAQ,EAARA,EAAUiB,6BAA8B,GACpEC,SAAiB,OAARlB,QAAQ,IAARA,GAAc,QAANqI,EAARrI,EAAUoG,YAAI,IAAAiC,OAAN,EAARA,EAAgBhC,KAAM,GAC/BlF,gBAAwB,OAARnB,QAAQ,IAARA,GAAqB,QAAbsI,EAARtI,EAAU0I,mBAAW,IAAAJ,OAAb,EAARA,EAAuBjC,KAAM,GAC7CjF,iBAAyB,OAARpB,QAAQ,IAARA,OAAQ,EAARA,EAAUoB,kBAAmB,GAC9CC,aAAqB,OAARrB,QAAQ,IAARA,GAAkB,QAAVuI,EAARvI,EAAU2I,gBAAQ,IAAAJ,OAAV,EAARA,EAAoBlC,KAAM,GACvC/E,iBAAyB,OAARtB,QAAQ,IAARA,OAAQ,EAARA,EAAUsB,kBAAmB,GAC9CC,UAAkB,OAARvB,QAAQ,IAARA,OAAQ,EAARA,EAAUuB,WAAY,GAChCC,gBAAwB,OAARxB,QAAQ,IAARA,GAAqB,QAAbwI,EAARxI,EAAU4I,mBAAW,IAAAJ,OAAb,EAARA,EAAuBnC,KAAM,GAC7C5E,QAAgB,OAARzB,QAAQ,IAARA,OAAQ,EAARA,EAAUyB,SAAU,GAC5BC,iBAAyB,OAAR1B,QAAQ,IAARA,OAAQ,EAARA,EAAU0B,mBAAmB,EAC9CC,sBAA8B,OAAR3B,QAAQ,IAARA,OAAQ,EAARA,EAAU2B,uBAAwB,GACxDC,uBAA+B,OAAR5B,QAAQ,IAARA,OAAQ,EAARA,EAAU4B,wBAAyB,GAC1DG,QAAgB,OAAR/B,QAAQ,IAARA,OAAQ,EAARA,EAAU+B,SAAU,eAGvBC,EAAQC,IAAa5B,EAAAA,EAAAA,UAAS,CAAC,IAC/B6B,EAAiBC,IAAsB9B,EAAAA,EAAAA,UAAS,KAChDuC,EAAeC,IAAoBxC,EAAAA,EAAAA,UAAS,KAC5CmC,EAAUC,IAAepC,EAAAA,EAAAA,UAAS,KAClCiC,EAAOC,IAAYlC,EAAAA,EAAAA,UAAS,KAC5BqC,EAAWC,IAAgBtC,EAAAA,EAAAA,UAAS,KACpCwI,EAAaC,IAAkBzI,EAAAA,EAAAA,UAAS,KAE/C2C,EAAAA,EAAAA,YAAU,KACR+F,IACI/I,EAASkB,SAASuE,EAAczF,EAASkB,SACzClB,EAASM,iBAAiBiF,EAAqBvF,EAASM,gBAAgB,GAC3E,CAACN,IAEJ,MAAM+I,EAAoBhF,UACxB,IACE,MAAOiF,EAAiBC,EAAcC,EAAkBC,SAAwBC,QAAQC,IAAI,CAC1FpF,EAAAA,EAAIC,IAAI,aAAc,CAAEC,OAAQ,CAAEC,KAAM,mBAAoBC,QAAS,KACrEJ,EAAAA,EAAIC,IAAI,UACRD,EAAAA,EAAIC,IAAI,aAAc,CAAEC,OAAQ,CAAEC,KAAM,cACxCH,EAAAA,EAAIC,IAAI,uBAGVrB,EAAiBmG,EAAgB1E,MACjC/B,EAAS0G,EAAa3E,MACtB3B,EAAauG,EAAiB5E,MAC9BwE,EAAeK,EAAe7E,KAAKG,SACrC,CAAE,MAAOX,GACPD,EAAAA,GAAMC,MAAM,gCACd,GAGI2B,EAAgB1B,UACpB,IACE,MAAMC,QAAiBC,EAAAA,EAAIC,IAAI,aAAc,CAC3CC,OAAQ,CAAEC,KAAM,SAAUlD,QAASsE,KAErC/C,EAAYuB,EAASM,KACvB,CAAE,MAAOR,GACPD,EAAAA,GAAMC,MAAM,2BACd,GAGIyB,EAAuBxB,UAC3B,IACE,MAAMC,QAAiBC,EAAAA,EAAIC,IAAI,aAAc,CAC3CC,OAAQ,CAAEC,KAAM,kBAAmBiB,WAAYC,KAEjDnD,EAAmB6B,EAASM,KAC9B,CAAE,MAAOR,GACPD,EAAAA,GAAMC,MAAM,mCACd,GAGIY,EAAqBI,IACzB,MAAM,KAAEH,EAAI,MAAEC,EAAK,KAAER,EAAI,QAAES,GAAYC,EAAEC,OAczC,GAbA3E,GAAaqD,IAAQ,IAChBA,EACH,CAACkB,GAAgB,aAATP,EAAsBS,EAAUD,MAG7B,oBAATD,GACFY,EAAqBX,GAGV,YAATD,GACFc,EAAcb,GAGH,gBAATD,EAAwB,CAC1B,MAAMe,EAAmB,SAAVd,EACfxE,GAAaqD,IAAQ,IAChBA,EACH3C,sBAAuB4E,EAASjC,EAAS3C,sBAAwB,GACjEC,oBAAqB2E,EAASjC,EAAS1C,oBAAsB,GAC7DG,QAAUwE,EAA4B,GAAnBjC,EAASvC,QAC5BC,eAAiBuE,EAAmC,GAA1BjC,EAAStC,eACnCC,gBAAkBsE,EAAoC,GAA3BjC,EAASrC,gBACpCC,YAAuB,aAAVuD,EAAuBnB,EAASpC,YAAc,GAC3DC,gBAA2B,aAAVsD,EAAuBnB,EAASnC,gBAAkB,GACnEC,SAAWmE,EAA6B,GAApBjC,EAASlC,SAC7BN,2BAA6ByE,EAAcjC,EAASxC,2BAAd,MAE1C,GAgEF,OACE0E,EAAAA,EAAAA,MAAA,QAAM1F,SAxCa8D,UAGnB,GAFAe,EAAEc,iBAvBiBC,MACnB,MAAMC,EAAY,CAAC,EAkBnB,OAhBK3F,EAASG,kBAAiBwF,EAAUxF,gBAAkB,4BACtDH,EAASI,qBAAoBuF,EAAUvF,mBAAqB,+BAC5DJ,EAASK,cAAasF,EAAUtF,YAAc,2BAC9CL,EAASM,eAAcqF,EAAUrF,aAAe,gCAChDN,EAASqB,iBAAgBsE,EAAUtE,eAAiB,2BACpDrB,EAASO,cAAiD,KAAjCP,EAASO,aAAaqF,SAAeD,EAAUpF,aAAe,yCACvFP,EAASQ,gBAAemF,EAAUnF,cAAgB,6BAClDR,EAASsB,SAAQqE,EAAUrE,OAAS,sBAGZ,SAAzBtB,EAASU,cACNV,EAASW,wBAAuBgF,EAAUhF,sBAAwB,qCAClEX,EAASY,sBAAqB+E,EAAU/E,oBAAsB,oCAGrEkB,EAAU6D,GAC+B,IAAlCY,OAAOC,KAAKb,GAAWC,MAAY,EAMrCF,GAEL,IACE,MAAMe,EAAgB,IACjBzG,EACHG,gBAAiBgG,SAASnG,EAASG,gBAAiB,IACpDC,mBAAoB+F,SAASnG,EAASI,mBAAoB,IAC1DiB,eAAgB8E,SAASnG,EAASqB,eAAgB,IAClDC,OAAQoF,WAAW1G,EAASsB,QAC5BP,QAASf,EAASe,QAAUoF,SAASnG,EAASe,QAAS,SAAMkE,EAC7DjE,eAAgBhB,EAASgB,eAAiBmF,SAASnG,EAASgB,eAAgB,SAAMiE,EAClF/D,YAAalB,EAASkB,YAAciF,SAASnG,EAASkB,YAAa,SAAM+D,EACzEzD,qBAAsBkF,WAAW1G,EAASwB,sBAC1CC,sBAAuBiF,WAAW1G,EAASyB,wBAG7C8E,OAAOC,KAAKC,GAAeE,SAASC,SACP3B,IAAvBwB,EAAcG,WACTH,EAAcG,EACvB,IAMsB,aAFD9C,EAAAA,EAAIqF,IAAI,UAAUtJ,EAASqG,KAAMO,IAE3C7E,SACX8B,EAAAA,GAAMqD,QAAQ,8BACdjH,IAIJ,CAAE,MAAO6D,GACP,GAK2BsD,SAAA,EAE3BzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASG,gBAChBgH,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,wBAChBxE,EAAc4E,KAAKC,IAClBJ,EAAAA,EAAAA,KAAA,UAAoBzC,MAAO6C,EAAGpB,GAAGe,SAC9BK,EAAG9C,MADO8C,EAAGpB,SAKnBrE,EAAO1B,kBAAmB+G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAO1B,sBAIlEqF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,qBACLC,MAAOzE,EAASI,mBAChB+G,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,2BAChBlF,EAAgBsF,KAAKE,IACpBL,EAAAA,EAAAA,KAAA,UAAoBzC,MAAO8C,EAAGrB,GAAGe,SAC9BM,EAAG/C,MADO+C,EAAGrB,SAKnBrE,EAAOzB,qBAAsB8G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOzB,yBAIrEoF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,cACLC,MAAOzE,EAASK,YAChB8G,SAAU5C,IAEX1C,EAAOxB,cAAe6G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOxB,kBAI9DmF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,kBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,eACLC,MAAOzE,EAASO,aAChB4G,SAAU5C,IAEX1C,EAAOtB,eAAgB2G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOtB,mBAI/DiF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,6BACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,eACLC,MAAOzE,EAASM,aAChB6G,SAAU5C,IAEX1C,EAAOvB,eAAgB4G,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOvB,mBAI/DkF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,gBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,cACLC,MAAOzE,EAASU,YAChByG,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,mBACjBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,OAAMwC,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,OAAMwC,SAAC,UACrBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,WAAUwC,SAAC,gBAE1BpF,EAAOnB,cAAewG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOnB,iBAIpC,SAAzBV,EAASU,cACR8E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,2BACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,wBACLC,MAAOzE,EAASW,sBAChBwG,SAAU5C,IAEX1C,EAAOlB,wBAAyBuG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOlB,4BAGxE6E,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,sBACLC,MAAOzE,EAASY,oBAChBuG,SAAU5C,IAEX1C,EAAOjB,sBAAuBsG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOjB,4BAMhD,SAAzBZ,EAASU,cACR8E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,UACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,UACLC,MAAOzE,EAASe,QAChBoG,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,gBAChB9E,EAAMkF,KAAKpB,IACViB,EAAAA,EAAAA,KAAA,UAAsBzC,MAAOwB,EAAKC,GAAGe,SAClChB,EAAKzB,MADKyB,EAAKC,SAKrBrE,EAAOd,UAAWmG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOd,cAG1DyE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,iBACLC,MAAOzE,EAASgB,eAChBmG,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,kBAChB5E,EAASgF,KAAKM,IACbT,EAAAA,EAAAA,KAAA,UAAwBzC,MAAOkD,EAAOzB,GAAGe,SACtCU,EAAOnD,MADGmD,EAAOzB,SAKvBrE,EAAOb,iBAAkBkG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOb,qBAGjEwE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,yBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASiB,gBAChBkG,SAAU5C,IAEX1C,EAAOZ,kBAAmBiG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOZ,yBAMtEuE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,iBACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,iBACLC,MAAOzE,EAASqB,eAChB8F,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,uBAChByB,EAAYrB,KAAK+B,IAChBlC,EAAAA,EAAAA,KAAA,UAAwBzC,MAAO2E,EAAOlD,GAAGe,SACtCmC,EAAO5E,MADG4E,EAAOlD,SAKvBrE,EAAOR,iBAAkB6F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOR,oBAIvC,aAAzBrB,EAASU,cACR8E,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,cACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,cACLC,MAAOzE,EAASkB,YAChBiG,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,oBAChB1E,EAAU8E,KAAKK,IACdR,EAAAA,EAAAA,KAAA,UAAqBzC,MAAOiD,EAAIxB,GAAGe,SAChCS,EAAIlD,MADMkD,EAAIxB,SAKpBrE,EAAOX,cAAegG,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOX,kBAG9DsE,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,qBACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,kBACLC,MAAOzE,EAASmB,gBAChBgG,SAAU5C,IAEX1C,EAAOV,kBAAmB+F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOV,wBAMrEnB,EAASa,sBACR2E,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,oCACPzB,EAAAA,EAAAA,MAAA,UACEwB,UAAU,eACVxC,KAAK,6BACLC,MAAOzE,EAASc,2BAChBqG,SAAU5C,EAAkB0C,SAAA,EAE5BC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,sCACjBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,WAAUwC,SAAC,cACzBC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,OAAMwC,SAAC,gBAM3BzB,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,aAAYC,SAAA,EACzBC,EAAAA,EAAAA,KAAA,SAAAD,SAAO,YACPC,EAAAA,EAAAA,KAAA,SACEjD,KAAK,OACL+C,UAAU,eACVxC,KAAK,SACLC,MAAOzE,EAASsB,OAChB6F,SAAU5C,IAEX1C,EAAOP,SAAU4F,EAAAA,EAAAA,KAAA,OAAKF,UAAU,cAAaC,SAAEpF,EAAOP,aAIzD4F,EAAAA,EAAAA,KAAA,UAAQjD,KAAK,SAAS+C,UAAU,uBAAsBC,SAAC,iBAGvDC,EAAAA,EAAAA,KAAA,UAAQjD,KAAK,SAAS+C,UAAU,8BAA8BgB,QAASjI,EAASkH,SAAC,aAG5E,E,cCrbX,MA8kBA,EA9kBkBrH,IAAoB,IAADyJ,EAAA,IAAlB,UAAEC,GAAW1J,EAC9B,MAAO2J,EAAcC,IAAmBtJ,EAAAA,EAAAA,UAAS,KAC1CuJ,EAASC,IAAcxJ,EAAAA,EAAAA,WAAS,IAChCyJ,EAAYC,IAAiB1J,EAAAA,EAAAA,UAAS,CAAE0G,IAAK,aAAciD,UAAW,UACtEC,EAAMC,IAAW7J,EAAAA,EAAAA,UAAS,IAC1B8J,EAAYC,IAAiB/J,EAAAA,EAAAA,UAAS,IACtCgK,EAASC,IAAcjK,EAAAA,EAAAA,UAAS,CAAEkK,UAAW,KAAMC,QAAS,KAAMC,WAAY,GAAIjF,OAAQ,GAAIkF,UAAW,GAAI3I,OAAQ,MACrH4I,EAAWC,IAAgBvK,EAAAA,EAAAA,WAAS,IACpCwK,EAAiBC,IAAsBzK,EAAAA,EAAAA,WAAS,IAChD0K,EAAaC,IAAkB3K,EAAAA,EAAAA,UAAS,OACxCiC,EAAOC,IAAYlC,EAAAA,EAAAA,UAAS,KAC5BoE,EAAUwG,IAAe5K,EAAAA,EAAAA,UAAS,KAClC6B,EAAiBC,IAAsB9B,EAAAA,EAAAA,UAAS,KAChD6K,EAAcC,IAAmB9K,EAAAA,EAAAA,UAAS,MAE3C+K,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CC,EAA6B,OAAVL,QAAU,IAAVA,OAAU,EAAVA,EAAYzG,KAC/B+G,EAAiB,OAAVN,QAAU,IAAVA,GAAgB,QAAN5B,EAAV4B,EAAYM,YAAI,IAAAlC,OAAN,EAAVA,EAAkB7E,KACzBgH,GAAWC,EAAAA,EAAAA,MAQXC,GAAwBC,EAAAA,EAAAA,cAAY/H,UACxC,IACE,MAAMkF,QAAqBhF,EAAAA,EAAIC,IAAI,UACnC3B,EAAS0G,EAAa3E,MAEtB,MAAMyH,QAAwB9H,EAAAA,EAAIC,IAAI,4DACtC+G,EAAYc,EAAgBzH,KAAKG,SACnC,CAAE,MAAOX,GACPS,QAAQT,MAAM,iCAAkCA,GAChD2F,EAAU,SAAU,kCAAmC,QACzD,IACC,CAACA,IAEElE,GAAuBuG,EAAAA,EAAAA,cAAY/H,UACvC,IACE,MAAMiI,QAAe/H,EAAAA,EAAIC,IAAI,qBAAsB,CACjDC,OAAQ,CACN8H,QAAS,aACTC,SAAU,GACVjC,KAAM,KAGJkC,EAAQ7F,SAAS0F,EAAO1H,KAAK6H,OAE7BnI,QAAiBC,EAAAA,EAAIC,IAAI,qBAAsB,CACnDC,OAAQ,CACN8H,QAAS,aACTC,SAAUC,EACVlC,KAAM,KAGV9H,EAAmBiK,MAAMC,QAAQrI,EAASM,KAAKgI,kBAAoBtI,EAASM,KAAKgI,iBAAmB,GACtG,CAAE,MAAOxI,GACPS,QAAQT,MAAM,mCAAoCA,GAClD2F,EAAU,SAAU,oCAAqC,SACzDtH,EAAmB,GACrB,IACC,CAACsH,IAEE8C,GAAoBT,EAAAA,EAAAA,cAAY/H,MAAOyI,EAAaC,EAASC,EAAeC,KAChF9C,GAAW,GACX,IACE,MAAM+C,QAAgB3I,EAAAA,EAAIC,IAAI,UAAW,CAAEC,OAAQ,CAAE8H,QAAS,aAAcC,SAAU,GAAIjC,KAAM,KAG1F9F,EAAS,CACb8F,KAAMuC,EACNN,SAJa5F,SAASsG,EAAQtI,KAAK6H,UAKhCQ,GAGDA,EAAapC,YACfpG,EAAOoG,UAAYoC,EAAapC,UAAUsC,cAAcC,MAAM,KAAK,IAEjEH,EAAanC,UACfrG,EAAOqG,QAAUmC,EAAanC,QAAQqC,cAAcC,MAAM,KAAK,IAGjE,MAAM9I,QAAiBC,EAAAA,EAAIC,IAAI,UAAW,CAAEC,WAC5C,IAAI4I,EAAY/I,EAASM,KAAK0I,OAAS,IAGnCL,EAAapC,WAAaoC,EAAanC,WACzCuC,EAAYA,EAAUE,QAAOC,IAC3B,MAAMC,EAAY,IAAIC,KAAKF,EAAKG,YAC1BC,GAAmBX,EAAapC,WAAY4C,GAAaR,EAAapC,UACtEgD,GAAkBZ,EAAanC,SAAU2C,GAAaR,EAAanC,QACzE,OAAO8C,GAAoBC,CAAe,KAK1CZ,EAAalC,aACfsC,EAAYA,EAAUE,QAAOC,IAAS,IAADM,EAAAC,EAAAC,EAAAC,EAAAC,EACnC,MAAMC,EAAkC,QAAnBL,EAAGN,EAAK1M,mBAAW,IAAAgN,OAAA,EAAhBA,EAAkBhH,cAAcC,SAASkG,EAAalC,WAAWjE,eACnFsH,EAAoC,QAApBL,EAAGP,EAAKzE,oBAAY,IAAAgF,GAAM,QAANC,EAAjBD,EAAmB9I,YAAI,IAAA+I,OAAN,EAAjBA,EAAyBlH,cAAcC,SAASkG,EAAalC,WAAWjE,eAC3FuH,EAAgG,QAA9EJ,EAAGzL,EAAgBiE,MAAK6H,GAAaA,EAAU3H,KAAO6G,EAAK3M,4BAAmB,IAAAoN,GAAM,QAANC,EAA3ED,EAA6EhJ,YAAI,IAAAiJ,OAAN,EAA3EA,EAAmFpH,cAAcC,SAASkG,EAAalC,WAAWjE,eAE7J,OAAOqH,GAAmBC,GAAoBC,CAAkB,KAKhEpB,EAAajC,YACfqC,EAAYA,EAAUE,QAAOC,GAAQA,EAAKe,aAAetB,EAAajC,aAGxE,MAAMwD,EAAcC,GAAcpB,EAAWN,EAASC,GAEhD0B,EAAgBF,EAAYjB,QAC/BC,IAAI,IAAAmB,EAAA,QAAuB,QAAjBA,EAAAnB,EAAKzE,oBAAY,IAAA4F,OAAA,EAAjBA,EAAmB1J,OAAQ,IAAI6B,iBAAmBiF,GAAoB,IAAIjF,aAAa,IAIlGmD,EADW,kBAAT+B,EACc0C,EAAcrI,OAAS,EAAIqI,EAAgB,GAE3CF,GAGlB9D,EAAcpG,EAASM,KAAKgK,OAAS,EACvC,CAAE,MAAOxK,GACPS,QAAQT,MAAM,gCAAiCA,GAC/C2F,EAAU,SAAU,iCAAkC,QACxD,CAAC,QACCI,GAAW,EACb,IACC,CAACJ,EAAWgC,EAAkBC,EAAMxJ,IAEjCqM,GAAcxH,IAClB,IAAIiD,EAAY,MACZF,EAAW/C,MAAQA,GAAgC,QAAzB+C,EAAWE,YACvCA,EAAY,QAEdD,EAAc,CAAEhD,MAAKiD,cACrBuC,EAAkB,EAAGxF,EAAKiD,EAAWK,EAAQ,EAGzCmE,GAAoBC,IACpBA,GAAc,GAAKA,GAActE,GACnCD,EAAQuE,EACV,EAGIC,GAAsB5J,IAC1B,MAAM,KAAEH,EAAI,MAAEC,GAAUE,EAAEC,OAC1BuF,GAAYqE,IAAW,IAAWA,EAAa,CAAChK,GAAOC,KAAS,EA0B5DuJ,GAAgBA,CAACpB,EAAWN,EAASC,IAClCK,EAAU6B,MAAK,CAACC,EAAGC,KACxB,IAAIC,EAAQC,EAEoB,IAADC,EAAAC,EAA/B,GAAgB,gBAAZzC,EACFsC,GAAsB,QAAbE,EAAAJ,EAAEjG,mBAAW,IAAAqG,OAAA,EAAbA,EAAetK,OAAQ,GAChCqK,GAAsB,QAAbE,EAAAJ,EAAElG,mBAAW,IAAAsG,OAAA,EAAbA,EAAevK,OAAQ,QAC3B,GAAgB,kBAAZ8H,EAA6B,CAAC,IAAD0C,EAAAC,EACtCL,GAAuB,QAAdI,EAAAN,EAAEpG,oBAAY,IAAA0G,OAAA,EAAdA,EAAgBxK,OAAQ,GACjCqK,GAAuB,QAAdI,EAAAN,EAAErG,oBAAY,IAAA2G,OAAA,EAAdA,EAAgBzK,OAAQ,EACnC,MACEoK,EAASF,EAAEpC,GACXuC,EAASF,EAAErC,GAGb,OAAIsC,EAASC,EAAiC,QAAlBtC,GAA2B,EAAI,EACvDqC,EAASC,EAAiC,QAAlBtC,EAA0B,GAAK,EACpD,CAAC,IAqBN2C,GAAetI,GACf+C,EAAW/C,MAAQA,EACW,QAAzB+C,EAAWE,WAChB3C,EAAAA,EAAAA,KAACiI,EAAAA,EAAe,CAACC,KAAMC,EAAAA,OAEvBnI,EAAAA,EAAAA,KAACiI,EAAAA,EAAe,CAACC,KAAME,EAAAA,OAGpBpI,EAAAA,EAAAA,KAACiI,EAAAA,EAAe,CAACC,KAAMG,EAAAA,MAG1BC,GAAmB5L,UACvB,GAAIgH,EACF,IACE,MAAM/G,QAAiBC,EAAAA,EAAIqF,IAAI,UAAUyB,EAAY1E,KAAMuJ,GAC3DjG,EACED,EAAalC,KAAK0F,GAChBA,EAAK7G,KAAO0E,EAAY1E,GAAK,IAAK6G,KAASlJ,EAASM,MAAS4I,KAGjEzD,EAAU,UAAW,6BAA8B,UACrD,CAAE,MAAO3F,GACPS,QAAQT,MAAM,8BAA+BA,GAC7C2F,EAAU,SAAU,yBAA0B,QAChD,MAEA,IACE,MAAMzF,QAAiBC,EAAAA,EAAI+C,KAAK,UAAW4I,GAC3CjG,EAAgB,IAAID,EAAc1F,EAASM,OAC3CmF,EAAU,UAAW,2BAA4B,UACnD,CAAE,MAAO3F,GACPS,QAAQT,MAAM,gCAAiCA,EACjD,CAGF8G,GAAa,GACbI,EAAe,MACfuB,EAAkBtC,EAAMH,EAAW/C,IAAK+C,EAAWE,UAAWK,EAAQ,EAGlEwF,GAAqB9N,IACzB,IAAI+N,EAAU,YAQd,MAPe,cAAX/N,EACF+N,EAAU,UACU,wBAAX/N,EACT+N,EAAU,UACU,aAAX/N,IACT+N,EAAU,WAELzI,EAAAA,EAAAA,KAAC0I,EAAAA,EAAK,CAACC,GAAIF,EAAS3I,UAAU,aAAYC,SAAErF,GAAe,GAGpEiB,EAAAA,EAAAA,YAAU,KACRuJ,EAAkBtC,EAAMH,EAAW/C,IAAK+C,EAAWE,UAAWK,EAAQ,GACrE,CAACJ,EAAMH,EAAYO,EAASkC,KAE/BvJ,EAAAA,EAAAA,YAAU,KACR6I,IACAtG,GAAsB,GACrB,CAACsG,EAAuBtG,IAE3B,MAAM0K,GAAiB/C,IACrB,MAAM9B,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CnH,EAAUiC,SAAS8E,EAAW/G,UAAY+G,EAAWM,KAAKrF,GAEhE,OACEV,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CACLJ,QAAQ,UACRK,KAAK,KACLhJ,UAAU,OACVgB,QAASA,KAAMiI,OAxQIC,EAwQcnD,EAAK7G,QAvQ5CsF,EAAS,UAAU0E,KADMA,KAwQuB,EAAAjJ,UAE1CC,EAAAA,EAAAA,KAACiI,EAAAA,EAAe,CAACC,KAAMe,EAAAA,QAEZ,IAAZjM,GAA6B,IAAZA,GAChBsB,EAAAA,EAAAA,MAAAgC,EAAAA,SAAA,CAAAP,SAAA,EACEC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CACLJ,QAAQ,UACRK,KAAK,KACLhJ,UAAU,OACVgB,QAASA,IAjID+E,KAClBlC,EAAekC,GACftC,GAAa,EAAK,EA+HO2F,CAAWrD,GAAM9F,UAEhCC,EAAAA,EAAAA,KAACiI,EAAAA,EAAe,CAACC,KAAMiB,EAAAA,SAEzBnJ,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CACLJ,QAAQ,SACRK,KAAK,KACLhI,QAASA,IAnIE+E,KACrB/B,EAAgB+B,GAChBpC,GAAmB,EAAK,EAiIC2F,CAAcvD,GAAM9F,UAEnCC,EAAAA,EAAAA,KAACiI,EAAAA,EAAe,CAACC,KAAMmB,EAAAA,WAGzB,OACH,EAmBDC,GAAwB5O,IAC5BuI,GAAYsG,IAAI,IAAWA,EAAM7O,aACjCwK,EAAkB,EAAGzC,EAAW/C,IAAK+C,EAAWE,UAAW,IAAKK,EAAStI,UAAS,EAGpF,OAAI6H,GAEAvC,EAAAA,EAAAA,KAAA,OAAKF,UAAU,mBAAkBC,UAC/BC,EAAAA,EAAAA,KAACwJ,EAAAA,EAAO,CAACC,UAAU,aAKZ,kBAATpF,GAAoD,IAAxBhC,EAAa3D,QAEzCJ,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,iBAAgBC,SAAA,EAC7BzB,EAAAA,EAAAA,MAACoL,EAAAA,EAAG,CAAC5J,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAA5J,UACFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,qBAE5BC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAC7J,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAAC/H,QAASA,IAAMyC,GAAa,GAAOkF,QAAQ,UAAU3I,UAAU,OAAMC,SAAC,oBAKlFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,yBAAwBC,SAAC,mCAEvCzB,EAAAA,EAAAA,MAACsL,EAAAA,EAAK,CAACC,KAAMvG,EAAWwG,OAAQA,IAAMvG,GAAa,GAAQuF,KAAK,KAAI/I,SAAA,EAClEC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAAjK,UACvBC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMK,MAAK,CAAAlK,SAAE2D,EAAc,YAAc,oBAE5C1D,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMM,KAAI,CAAAnK,SACR2D,GACC1D,EAAAA,EAAAA,KAACmK,EAAa,CACZxR,SAAU+K,EACV7K,SAAUA,IAAM0K,GAAa,GAC7B3K,SAAU0P,MAGZtI,EAAAA,EAAAA,KAACoK,EAAS,CACRxR,SAAU0P,GACVzP,SAAUA,IAAM0K,GAAa,cAUzCjF,EAAAA,EAAAA,MAAA,OAAKwB,UAAU,iBAAgBC,SAAA,EAC7BzB,EAAAA,EAAAA,MAACoL,EAAAA,EAAG,CAAC5J,UAAU,OAAMC,SAAA,EACnBC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAA5J,UACFC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,YAAWC,SAAC,qBAE5BC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAC7J,UAAU,aAAYC,UACzBC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAAC/H,QAASA,IAAMyC,GAAa,GAAOkF,QAAQ,UAAU3I,UAAU,OAAMC,SAAC,oBAMlFC,EAAAA,EAAAA,KAAC0J,EAAAA,EAAG,CAAC5J,UAAU,OAAMC,UACnBzB,EAAAA,EAAAA,MAACqL,EAAAA,EAAG,CAAA5J,SAAA,EACFC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAACJ,QAAQ,OAAO3H,QAASA,IAAMwI,GAAqB,aAAavJ,SAAC,sBAGzEC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAACJ,QAAQ,UAAU3H,QAASA,IAAMwI,GAAqB,uBAAuBvJ,SAAC,gCAGtFC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAACJ,QAAQ,SAAS3H,QAASA,IAAMwI,GAAqB,YAAYvJ,SAAC,qBAG1EC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAACJ,QAAQ,YAAY3H,QAnPTuJ,KACzBpH,EAAW,CAAEC,UAAW,KAAMC,QAAS,KAAMC,WAAY,GAAIjF,OAAQ,GAAIkF,UAAW,GAAI3I,OAAQ,KAChGwK,EAAkB,EAAGzC,EAAW/C,IAAK+C,EAAWE,UAAW,CACzDO,UAAW,KAAMC,QAAS,KAAMC,WAAY,GAAIjF,OAAQ,GAAIkF,UAAW,GAAI3I,OAAQ,IACnF,EA+O4DqF,SAAC,wBAM7DC,EAAAA,EAAAA,KAACsK,EAAAA,EAAI,CAAC1R,SA/PkB6E,IAC1BA,EAAEc,iBACFsE,EAAQ,GACRqC,EAAkB,EAAGzC,EAAW/C,IAAK+C,EAAWE,UAAWK,EAAQ,EA4P7BlD,UAAU,OAAMC,UAClDzB,EAAAA,EAAAA,MAACoL,EAAAA,EAAG,CAAA3J,SAAA,EACFC,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAA5J,UACFzB,EAAAA,EAAAA,MAACgM,EAAAA,EAAKC,MAAK,CAACC,UAAU,kBAAiBzK,SAAA,EACrCC,EAAAA,EAAAA,KAACsK,EAAAA,EAAKG,MAAK,CAAA1K,SAAC,gBACZC,EAAAA,EAAAA,KAAC0K,IAAU,CACTC,SAAU3H,EAAQE,UAClBjD,SAAW2K,GAAS3H,GAAYsG,IAAI,IAAWA,EAAMrG,UAAW0H,MAChE9K,UAAU,eACV+K,aAAW,UAIjB7K,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAA5J,UACFzB,EAAAA,EAAAA,MAACgM,EAAAA,EAAKC,MAAK,CAACC,UAAU,gBAAezK,SAAA,EACnCC,EAAAA,EAAAA,KAACsK,EAAAA,EAAKG,MAAK,CAAA1K,SAAC,cACZC,EAAAA,EAAAA,KAAC0K,IAAU,CACTC,SAAU3H,EAAQG,QAClBlD,SAAW2K,GAAS3H,GAAYsG,IAAI,IAAWA,EAAMpG,QAASyH,MAC9D9K,UAAU,eACV+K,aAAW,UAIjB7K,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAA5J,UACFzB,EAAAA,EAAAA,MAACgM,EAAAA,EAAKC,MAAK,CAACC,UAAU,mBAAkBzK,SAAA,EACtCC,EAAAA,EAAAA,KAACsK,EAAAA,EAAKG,MAAK,CAAA1K,SAAC,iBACZC,EAAAA,EAAAA,KAACsK,EAAAA,EAAKQ,QAAO,CACX/N,KAAK,OACLO,KAAK,aACLC,MAAOyF,EAAQI,WACfnD,SAAUoH,GACV0D,YAAY,qBAIlB/K,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAA5J,UACFzB,EAAAA,EAAAA,MAACgM,EAAAA,EAAKC,MAAK,CAACC,UAAU,aAAYzK,SAAA,EAChCC,EAAAA,EAAAA,KAACsK,EAAAA,EAAKG,MAAK,CAAA1K,SAAC,UACZzB,EAAAA,EAAAA,MAACgM,EAAAA,EAAKQ,QAAO,CAACE,GAAG,SAAS1N,KAAK,SAASC,MAAOyF,EAAQ7E,OAAQ8B,SAAUoH,GAAmBtH,SAAA,EAC1FC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,gBAChB9E,EAAMkF,KAAKpB,IACViB,EAAAA,EAAAA,KAAA,UAAsBzC,MAAOwB,EAAKC,GAAGe,SAClChB,EAAKzB,MADKyB,EAAKC,eAO1BgB,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAA5J,UACFzB,EAAAA,EAAAA,MAACgM,EAAAA,EAAKC,MAAK,CAACC,UAAU,gBAAezK,SAAA,EACnCC,EAAAA,EAAAA,KAACsK,EAAAA,EAAKG,MAAK,CAAA1K,SAAC,aACZzB,EAAAA,EAAAA,MAACgM,EAAAA,EAAKQ,QAAO,CAACE,GAAG,SAAS1N,KAAK,YAAYC,MAAOyF,EAAQK,UAAWpD,SAAUoH,GAAmBtH,SAAA,EAChGC,EAAAA,EAAAA,KAAA,UAAQzC,MAAM,GAAEwC,SAAC,mBAChB3C,EAAS+C,KAAKO,IACbV,EAAAA,EAAAA,KAAA,UAAyBzC,MAAOmD,EAAQ1B,GAAGe,SACxCW,EAAQpD,MADEoD,EAAQ1B,eAO7BgB,EAAAA,EAAAA,KAAC2J,EAAAA,EAAG,CAAC7J,UAAU,iBAAgBC,UAC7BC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAACJ,QAAQ,UAAU1L,KAAK,SAAQgD,SAAC,mBAO9CzB,EAAAA,EAAAA,MAAC2M,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACC,OAAK,EAACC,YAAU,EAACvL,UAAU,OAAMC,SAAA,EACvDC,EAAAA,EAAAA,KAAA,SAAAD,UACEzB,EAAAA,EAAAA,MAAA,MAAAyB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAI,OACJzB,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,eAAenH,SAAA,CAAC,eAC/BiI,GAAY,mBAE3B1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,UAAUnH,SAAA,CAAC,UAC/BiI,GAAY,cAEtB1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,eAAenH,SAAA,CAAC,eAC/BiI,GAAY,mBAE3B1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,iBAAiBnH,SAAA,CAAC,iBAC/BiI,GAAY,qBAE7B1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,iBAAiBnH,SAAA,CAAC,iBAC/BiI,GAAY,qBAE7B1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,sBAAsBnH,SAAA,CAAC,mBAClCiI,GAAY,0BAE/B1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,eAAenH,SAAA,CAAC,eAC/BiI,GAAY,mBAE3B1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,UAAUnH,SAAA,CAAC,UAC/BiI,GAAY,cAEtB1J,EAAAA,EAAAA,MAAA,MAAIwC,QAASA,IAAMoG,GAAW,cAAcnH,SAAA,CAAC,QACrCiI,GAAY,kBAEpBhI,EAAAA,EAAAA,KAAA,MAAAD,SAAI,kBAGRC,EAAAA,EAAAA,KAAA,SAAAD,SACGsC,EAAa3D,OAAS,EACrB2D,EAAalC,KAAI,CAAC0F,EAAMyF,KAAK,IAAAC,EAAAC,EAAAC,EAAA,OAC3BnN,EAAAA,EAAAA,MAAA,MAAAyB,SAAA,EACEC,EAAAA,EAAAA,KAAA,MAAAD,SAAkB,IAAZ6C,EAAO,GAAU0I,EAAQ,KAC/BtL,EAAAA,EAAAA,KAAA,MAAAD,SAAK8F,EAAK1M,eACV6G,EAAAA,EAAAA,KAAA,MAAAD,SAAK8F,EAAKzL,UACV4F,EAAAA,EAAAA,KAAA,MAAAD,UAAqB,QAAhBwL,EAAA1F,EAAKtE,mBAAW,IAAAgK,OAAA,EAAhBA,EAAkBjO,OAAQ,SAC/B0C,EAAAA,EAAAA,KAAA,MAAAD,SAAK8F,EAAKvM,iBACV0G,EAAAA,EAAAA,KAAA,MAAAD,UAAsB,QAAjByL,EAAA3F,EAAKzE,oBAAY,IAAAoK,OAAA,EAAjBA,EAAmBlO,OAAQ,SAChC0C,EAAAA,EAAAA,KAAA,MAAAD,UAE+E,QAA3E0L,EAAA5Q,EAAgBiE,MAAK6H,GAAaA,EAAU3H,KAAO6G,EAAK3M,4BAAmB,IAAAuS,OAAA,EAA3EA,EAA6EnO,OAAQuI,EAAK3M,sBAG9F8G,EAAAA,EAAAA,KAAA,MAAAD,SAAK8F,EAAKrM,eACVwG,EAAAA,EAAAA,KAAA,MAAAD,SAAKyI,GAAkB3C,EAAKnL,WAC5BsF,EAAAA,EAAAA,KAAA,MAAAD,SAAK,IAAIgG,KAAKF,EAAKG,YAAY0F,wBAC/B1L,EAAAA,EAAAA,KAAA,MAAAD,SAAK6I,GAAc/C,OAfZA,EAAK7G,GAgBT,KAGPgB,EAAAA,EAAAA,KAAA,MAAAD,UACEC,EAAAA,EAAAA,KAAA,MAAI2L,QAAQ,KAAK7L,UAAU,cAAaC,SAAC,wCAQjDzB,EAAAA,EAAAA,MAACsN,EAAAA,EAAU,CAAC9L,UAAU,8BAA6BC,SAAA,EACjDC,EAAAA,EAAAA,KAAC4L,EAAAA,EAAWC,MAAK,CAAC/K,QAASA,IAAMqG,GAAiB,GAAIjH,SAAmB,IAAT0C,KAChE5C,EAAAA,EAAAA,KAAC4L,EAAAA,EAAWE,KAAI,CAAChL,QAASA,IAAMqG,GAAiBvE,EAAO,GAAI1C,SAAmB,IAAT0C,IAzO9CmJ,MAC5B,MAAM9E,EAAQ,GACR+E,EAAYC,KAAKC,IAAI,EAAGtJ,EAAOqJ,KAAKE,MAAMC,MAC1CC,EAAUJ,KAAKK,IAAIxJ,EAAYkJ,EAxShB,EAwS6C,GAElE,IAAK,IAAIO,EAAIP,EAAWO,GAAKF,EAASE,IACpCtF,EAAMuF,MACJxM,EAAAA,EAAAA,KAAC4L,EAAAA,EAAWa,KAAI,CAASC,OAAQH,IAAM3J,EAAM9B,QAASA,IAAMqG,GAAiBoF,GAAGxM,SAC7EwM,GADmBA,IAK1B,OAAOtF,CAAK,EA8NP8E,IACD/L,EAAAA,EAAAA,KAAC4L,EAAAA,EAAWe,KAAI,CAAC7L,QAASA,IAAMqG,GAAiBvE,EAAO,GAAI1C,SAAU0C,IAASE,KAC/E9C,EAAAA,EAAAA,KAAC4L,EAAAA,EAAWgB,KAAI,CAAC9L,QAASA,IAAMqG,GAAiBrE,GAAa5C,SAAU0C,IAASE,QAGnFxE,EAAAA,EAAAA,MAACsL,EAAAA,EAAK,CAACC,KAAMrG,EAAiBsG,OAAQA,IAAMrG,GAAmB,GAAO1D,SAAA,EACpEC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAAjK,UACvBC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMK,MAAK,CAAAlK,SAAC,wBAEfC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMM,KAAI,CAAAnK,SAAC,uDAGZzB,EAAAA,EAAAA,MAACsL,EAAAA,EAAMiD,OAAM,CAAA9M,SAAA,EACXC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAACJ,QAAQ,YAAY3H,QAASA,IAAM2C,GAAmB,GAAO1D,SAAC,YACtEC,EAAAA,EAAAA,KAAC6I,EAAAA,EAAM,CAACJ,QAAQ,SAAS3H,QA3WZpE,UACnB,GAAImH,EACF,UACQjH,EAAAA,EAAIkQ,OAAO,UAAUjJ,EAAa7E,MACxCsD,EAAgBD,EAAauD,QAAQC,GAASA,EAAK7G,KAAO6E,EAAa7E,MACvEoD,EAAU,UAAW,6BAA8B,UACrD,CAAE,MAAO3F,GACPS,QAAQT,MAAM,uBAAwBA,GACtC2F,EAAU,SAAU,yBAA0B,QAChD,CAAC,QACCqB,GAAmB,GACnBK,EAAgB,MAChBoB,EAAkBtC,EAAMH,EAAW/C,IAAK+C,EAAWE,UAAWK,EAChE,CACF,EA6VqDjD,SAAC,kBAMpDzB,EAAAA,EAAAA,MAACsL,EAAAA,EAAK,CAACC,KAAMvG,EAAWwG,OAAQA,IAAMvG,GAAa,GAAQuF,KAAK,KAAI/I,SAAA,EAClEC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAAjK,UACvBC,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMK,MAAK,CAAAlK,SAAE2D,EAAc,YAAc,oBAE5C1D,EAAAA,EAAAA,KAAC4J,EAAAA,EAAMM,KAAI,CAAAnK,SACR2D,GACC1D,EAAAA,EAAAA,KAACmK,EAAa,CACZxR,SAAU+K,EACV7K,SAAUA,IAAM0K,GAAa,GAC7B3K,SAAU0P,MAGZtI,EAAAA,EAAAA,KAACoK,EAAS,CACRxR,SAAU0P,GACVzP,SAAUA,IAAM0K,GAAa,YAKjC,C,oGCnlBQ,IAAIwJ,Q,uBCFtB,MAAMC,EAAY,CAAC,aAgBnB,MAAMC,EAAsBC,EAAAA,YAAiB,CAACxU,EAAMyU,KAClD,IAAI,UACAC,GACE1U,EACJ2U,EAnBJ,SAAuCC,EAAG7P,GAAK,GAAI,MAAQ6P,EAAG,MAAO,CAAC,EAAG,IAAIC,EAAI,CAAC,EAAG,IAAK,IAAIC,KAAKF,EAAG,GAAI,CAAC,EAAEG,eAAeC,KAAKJ,EAAGE,GAAI,CAAE,GAAI/P,EAAEkQ,QAAQH,IAAM,EAAG,SAAUD,EAAEC,GAAKF,EAAEE,EAAI,CAAE,OAAOD,CAAG,CAmBxLK,CAA8BlV,EAAMsU,GAC9C,MAAOa,IAAeC,EAAAA,EAAAA,IAAezO,OAAO0O,OAAO,CACjDC,QAAS,KACRX,IACGY,GAAgBC,EAAAA,EAAAA,IAAiBzQ,IACrCoQ,EAAYT,UAAU3P,GACT,MAAb2P,GAA6BA,EAAU3P,EAAE,IAE3C,OAnB4B0Q,EAmBVd,EAAMc,OAlBQ,MAAhBA,EAAKvP,QAkB2B,WAAfyO,EAAMhJ,MAOnBrE,EAAAA,EAAAA,KAAK,IAAKX,OAAO0O,OAAO,CAC1CZ,IAAKA,GACJE,EAAO,CACRD,UAAWA,MATSpN,EAAAA,EAAAA,KAAK,IAAKX,OAAO0O,OAAO,CAC1CZ,IAAKA,GACJE,EAAOQ,EAAa,CACrBT,UAAWa,KAvBV,IAAuBE,CA8BzB,IAELlB,EAAOmB,YAAc,SACrB,S,sFCpCA,MAAM1F,EAAqBwE,EAAAA,YAAiB,CAAAxU,EAQzCyU,KAAQ,IARkC,SAC3CkB,EAAQ,GACR1F,EAAK,UAAS,KACd2F,GAAO,EAAK,KACZC,EAAI,UACJzO,EACAkL,GAAIwD,EAAY,UACbnB,GACJ3U,EACC,MAAM+V,GAASC,EAAAA,EAAAA,IAAmBL,EAAU,SAC5C,OAAoBrO,EAAAA,EAAAA,KAAKwO,EAAW,CAClCrB,IAAKA,KACFE,EACHvN,UAAW6O,IAAW7O,EAAW2O,EAAQH,GAAQ,eAAgBC,GAAQ,QAAQA,IAAQ5F,GAAM,MAAMA,MACrG,IAEJD,EAAM0F,YAAc,QACpB,S,gGCjBA,MAAMQ,EAAwB1B,EAAAA,YAAiB,CAAAxU,EAW5CyU,KAAQ,IAXqC,OAC9CT,GAAS,EAAK,SACdxM,GAAW,EAAK,UAChBJ,EAAS,MACTa,EAAK,YACLkO,EAAc,YAAW,SACzB9O,EAAQ,UACR+O,EAAS,cACTC,EAAa,GACb/D,EAAKiC,EAAAA,KACFI,GACJ3U,EACC,MAAM8V,EAAY9B,GAAUxM,EAAW,OAAS8K,EAChD,OAAoBhL,EAAAA,EAAAA,KAAK,KAAM,CAC7BmN,IAAKA,EACLxM,MAAOA,EACPb,UAAW6O,IAAW7O,EAAW,YAAa,CAC5C4M,SACAxM,aAEFH,UAAuBzB,EAAAA,EAAAA,MAAMkQ,EAAW,CACtC1O,UAAW6O,IAAW,YAAaI,GACnCpO,MAAOmO,KACJzB,EACHtN,SAAU,CAACA,EAAU2M,GAAUmC,IAA4B7O,EAAAA,EAAAA,KAAK,OAAQ,CACtEF,UAAW,kBACXC,SAAU8O,QAGd,IAEJD,EAASR,YAAc,WACvB,UACA,SAASY,EAAa1R,EAAM2R,GAA4B,IAAdC,EAAKC,UAAAzQ,OAAA,QAAAX,IAAAoR,UAAA,GAAAA,UAAA,GAAG7R,EAChD,MAAMuL,EAAsBqE,EAAAA,YAAiB,CAAAkC,EAG1CjC,KAAG,IAHwC,SAC5CpN,KACGsN,GACJ+B,EAAA,OAAuB9Q,EAAAA,EAAAA,MAAMsQ,EAAU,IACnCvB,EACHF,IAAKA,EACLpN,SAAU,EAAcC,EAAAA,EAAAA,KAAK,OAAQ,CACnC,cAAe,OACfD,SAAUA,GAAYkP,KACPjP,EAAAA,EAAAA,KAAK,OAAQ,CAC5BF,UAAW,kBACXC,SAAUmP,MAEZ,IAEF,OADArG,EAAOuF,YAAc9Q,EACduL,CACT,CACO,MAAMgD,EAAQmD,EAAa,QAAS,QAC9BlD,EAAOkD,EAAa,OAAQ,SAAK,YACjCK,EAAWL,EAAa,WAAY,SAAK,QACzCrC,EAAOqC,EAAa,OAAQ,UAC5BpC,EAAOoC,EAAa,OAAQ,QCtDnCpD,EAA0BsB,EAAAA,YAAiB,CAAAxU,EAK9CyU,KAAQ,IALuC,SAChDkB,EAAQ,UACRvO,EAAS,KACTgJ,KACGuE,GACJ3U,EACC,MAAM4W,GAAoBZ,EAAAA,EAAAA,IAAmBL,EAAU,cACvD,OAAoBrO,EAAAA,EAAAA,KAAK,KAAM,CAC7BmN,IAAKA,KACFE,EACHvN,UAAW6O,IAAW7O,EAAWwP,EAAmBxG,GAAQ,GAAGwG,KAAqBxG,MACpF,IAEJ8C,EAAWwC,YAAc,aACzB,QAAe/O,OAAO0O,OAAOnC,EAAY,CACvCC,MAAK,EACLC,KAAI,EACJuD,SAAQ,EACR5C,KAAMmC,EACNjC,KAAI,EACJC,KAAIA,G","sources":["components/SalesForm.js","components/SalesEditForm.js","pages/SalesPage.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\n\r\nconst SalesForm = ({ saleData, onSubmit, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    sale_manager_id: '',\r\n    sales_executive_id: '',\r\n    client_name: '',\r\n    client_id_no: '',\r\n    client_phone: '',\r\n    serial_number: '',\r\n    collection_platform: '',\r\n    source_type: '',\r\n    momo_reference_number: '',\r\n    momo_transaction_id: '',\r\n    first_pay_with_momo: false,\r\n    subsequent_pay_source_type: '',\r\n    bank_id: '',\r\n    bank_branch_id: '',\r\n    bank_acc_number: '',\r\n    paypoint_id: '',\r\n    paypoint_branch: '',\r\n    staff_id: '',\r\n    policy_type_id: '',\r\n    amount: '',\r\n    customer_called: false,\r\n    geolocation_latitude: '',\r\n    geolocation_longitude: '',\r\n    momo_first_premium: false,\r\n    is_deleted: false, // Soft delete support\r\n    status: 'submitted',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [salesExecutives, setSalesExecutives] = useState([]);\r\n  const [impactProducts, setImpactProducts] = useState([]);\r\n  const [banks, setBanks] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [paypoints, setPaypoints] = useState([]);\r\n  const [salesManagers, setSalesManagers] = useState([]);\r\n  const [isGeolocationEnabled, setIsGeolocationEnabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchBanks();\r\n    fetchImpactProducts();\r\n    fetchSalesManagers();\r\n    fetchPaypoints();\r\n\r\n    if (saleData) {\r\n      setFormData(saleData);\r\n    }\r\n\r\n    // Get geolocation\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setIsGeolocationEnabled(true);\r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          geolocation_latitude: position.coords.latitude,\r\n          geolocation_longitude: position.coords.longitude,\r\n        }));\r\n      },\r\n      () => {\r\n        toast.error('Please enable location services to proceed.');\r\n        setIsGeolocationEnabled(false);\r\n      }\r\n    );\r\n  }, [saleData]);\r\n\r\n  // Fetch dropdown data for various fields\r\n  const fetchBranches = async (bankId) => {\r\n    try {\r\n      if (bankId) {\r\n        const response = await api.get('/dropdown/', {\r\n          params: { type: 'branch', bank_id: bankId },\r\n        });\r\n        setBranches(response.data);\r\n      } else {\r\n        setBranches([]);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Failed to fetch branches');\r\n    }\r\n  };\r\n\r\n  const fetchSalesExecutives = async (managerId) => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'sales_executive', manager_id: managerId },\r\n      });\r\n      setSalesExecutives(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch sales executives');\r\n    }\r\n  };\r\n\r\n  const fetchSalesManagers = async () => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'users_with_roles', role_id: 4 },\r\n      });\r\n      setSalesManagers(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch sales managers');\r\n    }\r\n  };\r\n\r\n  const fetchPaypoints = async () => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'paypoint' },\r\n      });\r\n      setPaypoints(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch paypoints');\r\n    }\r\n  };\r\n\r\n  const fetchBanks = async () => {\r\n    try {\r\n      const response = await api.get('/bank/');\r\n      console.log('Fetched Banks:', response.data); // Log the fetched data\r\n      setBanks(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch banks');\r\n    }\r\n  };\r\n\r\n  const fetchImpactProducts = async () => {\r\n    try {\r\n      const response = await api.get('/impact_products/');\r\n      setImpactProducts(response.data.products);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch impact products');\r\n    }\r\n  };\r\n\r\n  const checkSerialNumberExists = async (serialNumber) => {\r\n    try {\r\n      const response = await api.get('/sales/check-serial', {\r\n        params: { serial_number: serialNumber },\r\n      });\r\n      return response.data.exists; // This returns true/false based on existence\r\n    } catch (error) {\r\n      toast.error('Failed to check serial number');\r\n      return false;\r\n    }\r\n  };\r\n\r\n  const handleInputChange = async (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n\r\n    if (name === 'serial_number') {\r\n      const exists = await checkSerialNumberExists(value);\r\n      if (exists) {\r\n        toast.error('The serial number already exists.');\r\n        setErrors((prevErrors) => ({\r\n          ...prevErrors,\r\n          serial_number: 'The serial number already exists.',\r\n        }));\r\n      } else {\r\n        setErrors((prevErrors) => ({\r\n          ...prevErrors,\r\n          serial_number: undefined, // Clear the error if it doesn't exist\r\n        }));\r\n      }\r\n    }\r\n\r\n    if (name === 'sale_manager_id') {\r\n      fetchSalesExecutives(value);\r\n    }\r\n\r\n    if (name === 'bank_id') {\r\n      fetchBranches(value);\r\n    }\r\n\r\n    if (name === 'source_type') {\r\n      const isMomo = value === 'momo';\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        momo_reference_number: isMomo ? prevData.momo_reference_number : '',\r\n        momo_transaction_id: isMomo ? prevData.momo_transaction_id : '',\r\n        bank_id: !isMomo ? prevData.bank_id : '',\r\n        bank_branch_id: !isMomo ? prevData.bank_branch_id : '',\r\n        bank_acc_number: !isMomo ? prevData.bank_acc_number : '',\r\n        paypoint_id: value === 'paypoint' ? prevData.paypoint_id : '',\r\n        paypoint_branch: value === 'paypoint' ? prevData.paypoint_branch : '',\r\n        staff_id: !isMomo ? prevData.staff_id : '',\r\n        subsequent_pay_source_type: !isMomo ? '' : prevData.subsequent_pay_source_type,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.sale_manager_id) newErrors.sale_manager_id = 'Sale manager is required';\r\n    if (!formData.sales_executive_id) newErrors.sales_executive_id = 'Sales executive is required';\r\n    if (!formData.client_name) newErrors.client_name = 'Client name is required';\r\n    if (!formData.client_id_no) newErrors.client_id_no = 'Client ID number is required';\r\n    if (!formData.policy_type_id) newErrors.policy_type_id = 'Policy type is required';\r\n    if (!formData.client_phone || formData.client_phone.length !== 10) newErrors.client_phone = 'Valid client phone number is required';\r\n    if (!formData.serial_number) newErrors.serial_number = 'Serial number is required';\r\n    else if (errors.serial_number) newErrors.serial_number = errors.serial_number;\r\n    if (!formData.amount) newErrors.amount = 'Amount is required';\r\n\r\n    // Validate for Momo transactions\r\n    if (formData.source_type === 'momo') {\r\n      if (!formData.momo_reference_number) newErrors.momo_reference_number = 'Momo reference number is required';\r\n      if (!formData.momo_transaction_id) newErrors.momo_transaction_id = 'Momo transaction ID is required';\r\n    }\r\n\r\n    // Validate for PayPoint transactions\r\n    if (formData.source_type === 'paypoint' || formData.subsequent_pay_source_type === 'paypoint') {\r\n      if (!formData.paypoint_id) newErrors.paypoint_id = 'PayPoint name is required';\r\n      if (!formData.staff_id) newErrors.staff_id = 'Staff ID is required';\r\n    }\r\n\r\n    // Validate for Bank transactions\r\n    if (formData.source_type === 'bank' || formData.subsequent_pay_source_type === 'bank') {\r\n      if (!formData.bank_id) newErrors.bank_id = 'Bank is required';\r\n      if (!formData.bank_branch_id) newErrors.bank_branch_id = 'Bank branch is required';\r\n\r\n      const trimmedBankAccNumber = formData.bank_acc_number.trim();\r\n      if (!trimmedBankAccNumber) {\r\n        newErrors.bank_acc_number = 'Bank account number is required';\r\n      } else {\r\n        const length = trimmedBankAccNumber.length;\r\n        console.log('Account Number:', trimmedBankAccNumber);\r\n        console.log('Account Number Length:', length);\r\n\r\n        const selectedBank = banks.find(bank => bank.id === parseInt(formData.bank_id, 10));\r\n        const bankName = selectedBank ? selectedBank.name : '';\r\n        const lowerCaseBankName = bankName.toLowerCase();\r\n\r\n        if (lowerCaseBankName.includes('uba') && length !== 14) {\r\n          newErrors.bank_acc_number = 'UBA account number must be 14 digits';\r\n        } else if ((lowerCaseBankName.includes('zenith') || lowerCaseBankName.includes('absa')) && length !== 10) {\r\n          newErrors.bank_acc_number = 'Zenith or Absa account number must be 10 digits';\r\n        } else if (lowerCaseBankName.includes('sg') && length !== 12 && length !== 13) {\r\n          newErrors.bank_acc_number = 'SG account number must be 12 or 13 digits';\r\n        } else if (length !== 10 && length !== 12 && length !== 13 && length !== 14 && length !== 16) {\r\n          newErrors.bank_acc_number = 'Account number must be 10, 12, 13, 14 or 16 digits';\r\n        }\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure form is valid\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      // Sanitize and prepare data\r\n      const sanitizedData = {\r\n        ...formData,\r\n        sale_manager_id: parseInt(formData.sale_manager_id, 10), // Convert to integer\r\n        sales_executive_id: parseInt(formData.sales_executive_id, 10), // Convert to integer\r\n        policy_type_id: parseInt(formData.policy_type_id, 10), // Convert to integer\r\n        amount: parseFloat(formData.amount), // Convert amount to float\r\n\r\n        // Conditionally convert to integer if value exists, otherwise omit\r\n        bank_id: formData.bank_id ? parseInt(formData.bank_id, 10) : undefined,\r\n        bank_branch_id: formData.bank_branch_id ? parseInt(formData.bank_branch_id, 10) : undefined,\r\n        paypoint_id: formData.paypoint_id ? parseInt(formData.paypoint_id, 10) : undefined,\r\n\r\n        // Destructure and prepare geolocation\r\n        geolocation: {\r\n          latitude: parseFloat(formData.geolocation_latitude),\r\n          longitude: parseFloat(formData.geolocation_longitude),\r\n        },\r\n      };\r\n\r\n      // Remove any undefined fields from sanitizedData\r\n      Object.keys(sanitizedData).forEach(key => {\r\n        if (sanitizedData[key] === undefined) {\r\n          delete sanitizedData[key];\r\n        }\r\n      });\r\n\r\n      // Make API request to submit the sale\r\n      const response = await api.post('/sales/', sanitizedData, {\r\n        headers: {\r\n          'Content-Type': 'application/json', // Ensure the correct content type\r\n        },\r\n      });\r\n\r\n      // Check if response is successful\r\n      if (response.status === 201 || response.status === 200 || response.status === 415 || response.status === 204) {\r\n        toast.success('Sale submitted successfully!');\r\n        onSubmit(); // Optionally handle success callback or redirect\r\n      } else {\r\n        toast.error('Failed to submit the sale. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting sale:', error);\r\n      toast.error('Failed to submit the sale');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={isGeolocationEnabled ? '' : 'disabled'}>\r\n      {!isGeolocationEnabled && (\r\n        <div className=\"text-danger mb-3\">Please enable location services to proceed.</div>\r\n      )}\r\n\r\n      {/* Sale Manager Field */}\r\n      <div className=\"form-group\">\r\n        <label>Sale Manager</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sale_manager_id\"\r\n          value={formData.sale_manager_id}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Select Sale Manager</option>\r\n          {salesManagers.map((sm) => (\r\n            <option key={sm.id} value={sm.id}>\r\n              {sm.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sale_manager_id && <div className=\"text-danger\">{errors.sale_manager_id}</div>}\r\n      </div>\r\n\r\n      {/* Sales Executive Dropdown */}\r\n      <div className=\"form-group\">\r\n        <label>Sales Executive</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sales_executive_id\"\r\n          value={formData.sales_executive_id}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Select Sales Executive</option>\r\n          {salesExecutives.map((se) => (\r\n            <option key={se.id} value={se.id}>\r\n              {se.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sales_executive_id && <div className=\"text-danger\">{errors.sales_executive_id}</div>}\r\n      </div>\r\n\r\n      {/* Client Name and Client ID */}\r\n      <div className=\"form-group\">\r\n        <label>Client Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_name\"\r\n          value={formData.client_name}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.client_name && <div className=\"text-danger\">{errors.client_name}</div>}\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Client Phone Number</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_phone\"\r\n          value={formData.client_phone}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.client_phone && <div className=\"text-danger\">{errors.client_phone}</div>}\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Client Ghana Card ID No. (\"no hyphens\" - e.g. 'GHA123435555')</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_id_no\"\r\n          value={formData.client_id_no}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.client_id_no && <div className=\"text-danger\">{errors.client_id_no}</div>}\r\n      </div>\r\n\r\n      {/* Source Type (Momo, Bank, PayPoint) */}\r\n      <div className=\"form-group\">\r\n        <label>Pay Source</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"source_type\"\r\n          value={formData.source_type}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Please select</option>\r\n          <option value=\"momo\">Momo</option>\r\n          <option value=\"bank\">Bank</option>\r\n          <option value=\"paypoint\">PayPoint</option>\r\n        </select>\r\n        {errors.source_type && <div className=\"text-danger\">{errors.source_type}</div>}\r\n      </div>\r\n\r\n      {/* Momo Transaction Fields */}\r\n      {formData.source_type === 'momo' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Momo Reference Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_reference_number\"\r\n              value={formData.momo_reference_number}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.momo_reference_number && <div className=\"text-danger\">{errors.momo_reference_number}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Momo Transaction ID</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_transaction_id\"\r\n              value={formData.momo_transaction_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.momo_transaction_id && <div className=\"text-danger\">{errors.momo_transaction_id}</div>}\r\n          </div>\r\n\r\n          {/* Collection Platform */}\r\n          <div className=\"form-group\">\r\n            <label>Collection Platform</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"collection_platform\"\r\n              value={formData.collection_platform}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Please select</option>\r\n              <option value=\"Transflow\">Transflow</option>\r\n              <option value=\"Hubtel\">Hubtel</option>\r\n              <option value=\"company Momo number\">Company Momo Number</option>\r\n            </select>\r\n            {errors.collection_platform && <div className=\"text-danger\">{errors.collection_platform}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"first_pay_with_momo\"\r\n              name=\"first_pay_with_momo\"\r\n              checked={formData.first_pay_with_momo}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"first_pay_with_momo\">\r\n              First payment with Momo?\r\n            </label>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* PayPoint Fields */}\r\n      {formData.source_type === 'paypoint' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Name</label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_id\"\r\n              value={formData.paypoint_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Paypoint</option>\r\n              {paypoints.map((ppy) => (\r\n                <option key={ppy.id} value={ppy.id}>\r\n                  {ppy.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.paypoint_id && <div className=\"text-danger\">{errors.paypoint_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Branch</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_branch\"\r\n              value={formData.paypoint_branch}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.paypoint_branch && <div className=\"text-danger\">{errors.paypoint_branch}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Bank Fields */}\r\n      {formData.source_type === 'bank' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Bank</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_id\"\r\n              value={formData.bank_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Bank</option>\r\n              {banks.map((bank) => (\r\n                <option key={bank.id} value={bank.id}>\r\n                  {bank.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_id && <div className=\"text-danger\">{errors.bank_id}</div>}\r\n          </div>\r\n\r\n          {/* Branch Selection - Updates when a bank is selected */}\r\n          <div className=\"form-group\">\r\n            <label>Bank Branch</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_branch_id\"\r\n              value={formData.bank_branch_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Branch</option>\r\n              {branches.map((branch) => (\r\n                <option key={branch.id} value={branch.id}>\r\n                  {branch.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_branch_id && <div className=\"text-danger\">{errors.bank_branch_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Account Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"bank_acc_number\"\r\n              value={formData.bank_acc_number}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.bank_acc_number && <div className=\"text-danger\">{errors.bank_acc_number}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Impact Products Dropdown (previously missing) */}\r\n      <div className=\"form-group\">\r\n        <label>Policy Type (Impact Product)</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"policy_type_id\"\r\n          value={formData.policy_type_id}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Select Product</option>\r\n          {impactProducts.map((product) => (\r\n            <option key={product.id} value={product.id}>\r\n              {product.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.policy_type_id && <div className=\"text-danger\">{errors.policy_type_id}</div>}\r\n      </div>\r\n\r\n      {/* Policy Form Serial Number (previously missing) */}\r\n      <div className=\"form-group\">\r\n        <label>Policy Form Serial Number</label>\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"serial_number\"\r\n          value={formData.serial_number}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.serial_number && <div className=\"text-danger\">{errors.serial_number}</div>}\r\n      </div>\r\n\r\n      {/* Subsequent Payment Dropdown */}\r\n      {formData.first_pay_with_momo && (\r\n        <div className=\"form-group\">\r\n          <label>Subsequent Payment Method</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"subsequent_pay_source_type\"\r\n            value={formData.subsequent_pay_source_type}\r\n            onChange={handleInputChange}\r\n            disabled={!isGeolocationEnabled}\r\n          >\r\n            <option value=\"options\">Please select</option>\r\n            <option value=\"paypoint\">PayPoint</option>\r\n            <option value=\"bank\">Bank</option>\r\n          </select>\r\n          {errors.subsequent_pay_source_type && <div className=\"text-danger\">{errors.subsequent_pay_source_type}</div>}\r\n        </div>\r\n      )}\r\n\r\n      {/* PayPoint Fields for Subsequent Payment */}\r\n      {formData.subsequent_pay_source_type === 'paypoint' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Name</label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_id\"\r\n              value={formData.paypoint_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Paypoint</option>\r\n              {paypoints.map((ppy) => (\r\n                <option key={ppy.id} value={ppy.id}>\r\n                  {ppy.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.paypoint_id && <div className=\"text-danger\">{errors.paypoint_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Branch</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_branch\"\r\n              value={formData.paypoint_branch}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.paypoint_branch && <div className=\"text-danger\">{errors.paypoint_branch}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Bank Fields for Subsequent Payment */}\r\n      {formData.subsequent_pay_source_type === 'bank' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Bank</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_id\"\r\n              value={formData.bank_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Bank</option>\r\n              {banks.map((bank) => (\r\n                <option key={bank.id} value={bank.id}>\r\n                  {bank.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_id && <div className=\"text-danger\">{errors.bank_id}</div>}\r\n          </div>\r\n\r\n          {/* Branch Selection - Updates when a bank is selected */}\r\n          <div className=\"form-group\">\r\n            <label>Bank Branch</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_branch_id\"\r\n              value={formData.bank_branch_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Branch</option>\r\n              {branches.map((branch) => (\r\n                <option key={branch.id} value={branch.id}>\r\n                  {branch.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_branch_id && <div className=\"text-danger\">{errors.bank_branch_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Account Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"bank_acc_number\"\r\n              value={formData.bank_acc_number}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.bank_acc_number && <div className=\"text-danger\">{errors.bank_acc_number}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Staff ID */}\r\n      {(formData.source_type === 'paypoint' || formData.subsequent_pay_source_type === 'paypoint') && (\r\n        <div className=\"form-group\">\r\n          <label>Staff Number</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"staff_id\"\r\n            value={formData.staff_id}\r\n            onChange={handleInputChange}\r\n            disabled={!isGeolocationEnabled}\r\n          />\r\n          {errors.staff_id && <div className=\"text-danger\">{errors.staff_id}</div>}\r\n        </div>\r\n      )}\r\n\r\n      {/* Customer Called */}\r\n      <div className=\"form-check\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          id=\"customer_called\"\r\n          name=\"customer_called\"\r\n          checked={formData.customer_called}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"customer_called\">\r\n          Has the customer been called?\r\n        </label>\r\n      </div>\r\n\r\n      {/* Amount */}\r\n      <div className=\"form-group\">\r\n        <label>Premium Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          name=\"amount\"\r\n          value={formData.amount}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.amount && <div className=\"text-danger\">{errors.amount}</div>}\r\n      </div>\r\n\r\n      <div style={{ color: 'red', fontSize: '11px' }}>\r\n        <em>Premium amounts are strictly in Ghana Cedis (GHS)</em>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n        Submit Sale\r\n      </button>\r\n      <button type=\"button\" className=\"btn btn-secondary mt-3 ml-2\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SalesForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\n\r\nconst SalesEditForm = ({ saleData, onSubmit, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    sale_manager_id: saleData?.sale_manager?.id || '',\r\n    sales_executive_id: saleData?.sales_executive_id || '',\r\n    client_name: saleData?.client_name || '',\r\n    client_id_no: saleData?.client_id_no || '',\r\n    client_phone: saleData?.client_phone || '',\r\n    serial_number: saleData?.serial_number || '',\r\n    collection_platform: saleData?.collection_platform || '',\r\n    source_type: saleData?.source_type || '',\r\n    momo_reference_number: saleData?.momo_reference_number || '',\r\n    momo_transaction_id: saleData?.momo_transaction_id || '',\r\n    first_pay_with_momo: saleData?.first_pay_with_momo || false,\r\n    subsequent_pay_source_type: saleData?.subsequent_pay_source_type || '',\r\n    bank_id: saleData?.bank?.id || '',\r\n    bank_branch_id: saleData?.bank_branch?.id || '',\r\n    bank_acc_number: saleData?.bank_acc_number || '',\r\n    paypoint_id: saleData?.paypoint?.id || '',\r\n    paypoint_branch: saleData?.paypoint_branch || '',\r\n    staff_id: saleData?.staff_id || '',\r\n    policy_type_id: saleData?.policy_type?.id || '',\r\n    amount: saleData?.amount || '',\r\n    customer_called: saleData?.customer_called || false,\r\n    geolocation_latitude: saleData?.geolocation_latitude || '',\r\n    geolocation_longitude: saleData?.geolocation_longitude || '',\r\n    status: saleData?.status || 'submitted',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [salesExecutives, setSalesExecutives] = useState([]);\r\n  const [salesManagers, setSalesManagers] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [banks, setBanks] = useState([]);\r\n  const [paypoints, setPaypoints] = useState([]);\r\n  const [policyTypes, setPolicyTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDropdownData();\r\n    if (saleData.bank_id) fetchBranches(saleData.bank_id);\r\n    if (saleData.sale_manager_id) fetchSalesExecutives(saleData.sale_manager_id);\r\n  }, [saleData]);\r\n\r\n  const fetchDropdownData = async () => {\r\n    try {\r\n      const [managerResponse, bankResponse, paypointResponse, policyResponse] = await Promise.all([\r\n        api.get('/dropdown/', { params: { type: 'users_with_roles', role_id: 4 } }), // Sales Managers\r\n        api.get('/bank/'), // Banks\r\n        api.get('/dropdown/', { params: { type: 'paypoint' } }), // Paypoints\r\n        api.get('/impact_products/'), // Policy Types\r\n      ]);\r\n\r\n      setSalesManagers(managerResponse.data);\r\n      setBanks(bankResponse.data);\r\n      setPaypoints(paypointResponse.data);\r\n      setPolicyTypes(policyResponse.data.products);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch dropdown data');\r\n    }\r\n  };\r\n\r\n  const fetchBranches = async (bankId) => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'branch', bank_id: bankId },\r\n      });\r\n      setBranches(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch branches');\r\n    }\r\n  };\r\n\r\n  const fetchSalesExecutives = async (managerId) => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'sales_executive', manager_id: managerId },\r\n      });\r\n      setSalesExecutives(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch sales executives');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n\r\n    if (name === 'sale_manager_id') {\r\n      fetchSalesExecutives(value);\r\n    }\r\n\r\n    if (name === 'bank_id') {\r\n      fetchBranches(value);\r\n    }\r\n\r\n    if (name === 'source_type') {\r\n      const isMomo = value === 'momo';\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        momo_reference_number: isMomo ? prevData.momo_reference_number : '',\r\n        momo_transaction_id: isMomo ? prevData.momo_transaction_id : '',\r\n        bank_id: !isMomo ? prevData.bank_id : '',\r\n        bank_branch_id: !isMomo ? prevData.bank_branch_id : '',\r\n        bank_acc_number: !isMomo ? prevData.bank_acc_number : '',\r\n        paypoint_id: value === 'paypoint' ? prevData.paypoint_id : '',\r\n        paypoint_branch: value === 'paypoint' ? prevData.paypoint_branch : '',\r\n        staff_id: !isMomo ? prevData.staff_id : '',\r\n        subsequent_pay_source_type: !isMomo ? '' : prevData.subsequent_pay_source_type,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.sale_manager_id) newErrors.sale_manager_id = 'Sale manager is required';\r\n    if (!formData.sales_executive_id) newErrors.sales_executive_id = 'Sales executive is required';\r\n    if (!formData.client_name) newErrors.client_name = 'Client name is required';\r\n    if (!formData.client_id_no) newErrors.client_id_no = 'Client ID number is required';\r\n    if (!formData.policy_type_id) newErrors.policy_type_id = 'Policy type is required';\r\n    if (!formData.client_phone || formData.client_phone.length !== 10) newErrors.client_phone = 'Valid client phone number is required';\r\n    if (!formData.serial_number) newErrors.serial_number = 'Serial number is required';\r\n    if (!formData.amount) newErrors.amount = 'Amount is required';\r\n\r\n    // Validate for Momo transactions\r\n    if (formData.source_type === 'momo') {\r\n      if (!formData.momo_reference_number) newErrors.momo_reference_number = 'Momo reference number is required';\r\n      if (!formData.momo_transaction_id) newErrors.momo_transaction_id = 'Momo transaction ID is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const sanitizedData = {\r\n        ...formData,\r\n        sale_manager_id: parseInt(formData.sale_manager_id, 10),\r\n        sales_executive_id: parseInt(formData.sales_executive_id, 10),\r\n        policy_type_id: parseInt(formData.policy_type_id, 10),\r\n        amount: parseFloat(formData.amount),\r\n        bank_id: formData.bank_id ? parseInt(formData.bank_id, 10) : undefined,\r\n        bank_branch_id: formData.bank_branch_id ? parseInt(formData.bank_branch_id, 10) : undefined,\r\n        paypoint_id: formData.paypoint_id ? parseInt(formData.paypoint_id, 10) : undefined,\r\n        geolocation_latitude: parseFloat(formData.geolocation_latitude),\r\n        geolocation_longitude: parseFloat(formData.geolocation_longitude),\r\n      };\r\n\r\n      Object.keys(sanitizedData).forEach((key) => {\r\n        if (sanitizedData[key] === undefined) {\r\n          delete sanitizedData[key];\r\n        }\r\n      });\r\n\r\n      // API request for updating the sale using PUT method\r\n      const response = await api.put(`/sales/${saleData.id}`, sanitizedData);\r\n\r\n      if (response.status === 200) {\r\n        toast.success('Sale updated successfully!');\r\n        onSubmit();\r\n      } else {\r\n        // toast.error('Failed to update the sale. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      // toast.error('Failed to update the sale');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Sale Manager */}\r\n      <div className=\"form-group\">\r\n        <label>Sale Manager</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sale_manager_id\"\r\n          value={formData.sale_manager_id}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select Sale Manager</option>\r\n          {salesManagers.map((sm) => (\r\n            <option key={sm.id} value={sm.id}>\r\n              {sm.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sale_manager_id && <div className=\"text-danger\">{errors.sale_manager_id}</div>}\r\n      </div>\r\n\r\n      {/* Sales Executive */}\r\n      <div className=\"form-group\">\r\n        <label>Sales Executive</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sales_executive_id\"\r\n          value={formData.sales_executive_id}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select Sales Executive</option>\r\n          {salesExecutives.map((se) => (\r\n            <option key={se.id} value={se.id}>\r\n              {se.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sales_executive_id && <div className=\"text-danger\">{errors.sales_executive_id}</div>}\r\n      </div>\r\n\r\n      {/* Client Name */}\r\n      <div className=\"form-group\">\r\n        <label>Client Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_name\"\r\n          value={formData.client_name}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.client_name && <div className=\"text-danger\">{errors.client_name}</div>}\r\n      </div>\r\n\r\n      {/* Client Phone */}\r\n      <div className=\"form-group\">\r\n        <label>Client Phone</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_phone\"\r\n          value={formData.client_phone}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.client_phone && <div className=\"text-danger\">{errors.client_phone}</div>}\r\n      </div>\r\n\r\n      {/* Client Ghana Card ID No */}\r\n      <div className=\"form-group\">\r\n        <label>Client Ghana Card ID No</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_id_no\"\r\n          value={formData.client_id_no}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.client_id_no && <div className=\"text-danger\">{errors.client_id_no}</div>}\r\n      </div>\r\n\r\n      {/* Source Type (Momo, Bank, PayPoint) */}\r\n      <div className=\"form-group\">\r\n        <label>Pay Source</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"source_type\"\r\n          value={formData.source_type}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Please select</option>\r\n          <option value=\"momo\">Momo</option>\r\n          <option value=\"bank\">Bank</option>\r\n          <option value=\"paypoint\">PayPoint</option>\r\n        </select>\r\n        {errors.source_type && <div className=\"text-danger\">{errors.source_type}</div>}\r\n      </div>\r\n\r\n      {/* Momo Information */}\r\n      {formData.source_type === 'momo' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Momo Reference Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_reference_number\"\r\n              value={formData.momo_reference_number}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.momo_reference_number && <div className=\"text-danger\">{errors.momo_reference_number}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Momo Transaction ID</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_transaction_id\"\r\n              value={formData.momo_transaction_id}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.momo_transaction_id && <div className=\"text-danger\">{errors.momo_transaction_id}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Bank Information */}\r\n      {formData.source_type === 'bank' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Bank</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_id\"\r\n              value={formData.bank_id}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select Bank</option>\r\n              {banks.map((bank) => (\r\n                <option key={bank.id} value={bank.id}>\r\n                  {bank.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_id && <div className=\"text-danger\">{errors.bank_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Branch</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_branch_id\"\r\n              value={formData.bank_branch_id}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select Branch</option>\r\n              {branches.map((branch) => (\r\n                <option key={branch.id} value={branch.id}>\r\n                  {branch.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_branch_id && <div className=\"text-danger\">{errors.bank_branch_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Account Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"bank_acc_number\"\r\n              value={formData.bank_acc_number}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.bank_acc_number && <div className=\"text-danger\">{errors.bank_acc_number}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Policy Type */}\r\n      <div className=\"form-group\">\r\n        <label>Policy Type</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"policy_type_id\"\r\n          value={formData.policy_type_id}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select Policy Type</option>\r\n          {policyTypes.map((policy) => (\r\n            <option key={policy.id} value={policy.id}>\r\n              {policy.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.policy_type_id && <div className=\"text-danger\">{errors.policy_type_id}</div>}\r\n      </div>\r\n\r\n      {/* PayPoint Information */}\r\n      {formData.source_type === 'paypoint' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>PayPoint</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"paypoint_id\"\r\n              value={formData.paypoint_id}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select PayPoint</option>\r\n              {paypoints.map((ppy) => (\r\n                <option key={ppy.id} value={ppy.id}>\r\n                  {ppy.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.paypoint_id && <div className=\"text-danger\">{errors.paypoint_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Branch</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_branch\"\r\n              value={formData.paypoint_branch}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.paypoint_branch && <div className=\"text-danger\">{errors.paypoint_branch}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Subsequent Payment Method */}\r\n      {formData.first_pay_with_momo && (\r\n        <div className=\"form-group\">\r\n          <label>Subsequent Payment Source Type</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"subsequent_pay_source_type\"\r\n            value={formData.subsequent_pay_source_type}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">Select Subsequent Payment Method</option>\r\n            <option value=\"paypoint\">PayPoint</option>\r\n            <option value=\"bank\">Bank</option>\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {/* Amount */}\r\n      <div className=\"form-group\">\r\n        <label>Amount</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"amount\"\r\n          value={formData.amount}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.amount && <div className=\"text-danger\">{errors.amount}</div>}\r\n      </div>\r\n\r\n      {/* Submit and Cancel buttons */}\r\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n        Update Sale\r\n      </button>\r\n      <button type=\"button\" className=\"btn btn-secondary mt-3 ml-2\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SalesEditForm;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, Button, Pagination, Spinner, Form, Row, Col, Modal, Badge } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash, faSort, faSortUp, faSortDown, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport api from '../services/api';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport SalesForm from '../components/SalesForm';\r\nimport SalesEditForm from '../components/SalesEditForm';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SalesPage = ({ showToast }) => {\r\n  const [salesRecords, setSalesRecords] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'created_at', direction: 'desc' });\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [filters, setFilters] = useState({ startDate: null, endDate: null, clientName: '', bankId: '', productId: '', status: '' });\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [currentSale, setCurrentSale] = useState(null);\r\n  const [banks, setBanks] = useState([]);\r\n  const [products, setProducts] = useState([]);\r\n  const [salesExecutives, setSalesExecutives] = useState([]);\r\n  const [saleToDelete, setSaleToDelete] = useState(null);\r\n\r\n  const local_user = JSON.parse(localStorage.getItem('user'));\r\n  const loggedInUserName = local_user?.name;\r\n  const role = local_user?.role?.name;\r\n  const navigate = useNavigate();\r\n\r\n  const maxPageDisplay = 5;\r\n\r\n  const handleViewDetails = (saleId) => {\r\n    navigate(`/sales/${saleId}`);\r\n  };\r\n\r\n  const fetchBanksAndProducts = useCallback(async () => {\r\n    try {\r\n      const bankResponse = await api.get('/bank/');\r\n      setBanks(bankResponse.data);\r\n\r\n      const productResponse = await api.get('/impact_products/?sort_by=created_at&per_page=100&page=1');\r\n      setProducts(productResponse.data.products);\r\n    } catch (error) {\r\n      console.error('Error fetching banks/products:', error);\r\n      showToast('danger', 'Failed to fetch banks/products.', 'Error');\r\n    }\r\n  }, [showToast]);\r\n\r\n  const fetchSalesExecutives = useCallback(async () => {\r\n    try {\r\n      const restot = await api.get('/sales_executives/', {\r\n        params: {\r\n          sort_by: 'created_at',\r\n          per_page: 10,\r\n          page: 1,\r\n        },\r\n      });\r\n      const total = parseInt(restot.data.total);\r\n\r\n      const response = await api.get('/sales_executives/', {\r\n        params: {\r\n          sort_by: 'created_at',\r\n          per_page: total,\r\n          page: 1,\r\n        },\r\n      });\r\n      setSalesExecutives(Array.isArray(response.data.sales_executives) ? response.data.sales_executives : []);\r\n    } catch (error) {\r\n      console.error('Error fetching sales executives:', error);\r\n      showToast('danger', 'Failed to fetch sales executives.', 'Error');\r\n      setSalesExecutives([]);\r\n    }\r\n  }, [showToast]);\r\n\r\n  const fetchSalesRecords = useCallback(async (currentPage, sortKey, sortDirection, filterParams) => {\r\n    setLoading(true);\r\n    try {\r\n      const res1tot = await api.get('/sales/', { params: { sort_by: 'created_at', per_page: 10, page: 1 } });\r\n      const total1 = parseInt(res1tot.data.total);\r\n\r\n      const params = {\r\n        page: currentPage,\r\n        per_page: total1,\r\n        ...filterParams,\r\n      };\r\n\r\n      if (filterParams.startDate) {\r\n        params.startDate = filterParams.startDate.toISOString().split('T')[0];\r\n      }\r\n      if (filterParams.endDate) {\r\n        params.endDate = filterParams.endDate.toISOString().split('T')[0];\r\n      }\r\n\r\n      const response = await api.get('/sales/', { params });\r\n      let salesData = response.data.sales || [];\r\n\r\n      // Filter based on start and end date\r\n      if (filterParams.startDate || filterParams.endDate) {\r\n        salesData = salesData.filter(sale => {\r\n          const createdAt = new Date(sale.created_at);\r\n          const isAfterStartDate = filterParams.startDate ? createdAt >= filterParams.startDate : true;\r\n          const isBeforeEndDate = filterParams.endDate ? createdAt <= filterParams.endDate : true;\r\n          return isAfterStartDate && isBeforeEndDate;\r\n        });\r\n      }\r\n\r\n      // New filtering logic for client, sales manager, and sales executive names\r\n      if (filterParams.clientName) {\r\n        salesData = salesData.filter(sale => {\r\n          const clientNameMatch = sale.client_name?.toLowerCase().includes(filterParams.clientName.toLowerCase());\r\n          const managerNameMatch = sale.sale_manager?.name?.toLowerCase().includes(filterParams.clientName.toLowerCase());\r\n          const executiveNameMatch = salesExecutives.find(executive => executive.id === sale.sales_executive_id)?.name?.toLowerCase().includes(filterParams.clientName.toLowerCase());\r\n\r\n          return clientNameMatch || managerNameMatch || executiveNameMatch;\r\n        });\r\n      }\r\n\r\n      // Filtering by product\r\n      if (filterParams.productId) {\r\n        salesData = salesData.filter(sale => sale.product_id === filterParams.productId);\r\n      }\r\n\r\n      const sortedSales = sortSalesData(salesData, sortKey, sortDirection);\r\n\r\n      const filteredSales = sortedSales.filter(\r\n        (sale) => (sale.sale_manager?.name || '').toLowerCase() === (loggedInUserName || '').toLowerCase()\r\n      );\r\n\r\n      if (role === 'Sales_Manager') {\r\n        setSalesRecords(filteredSales.length > 0 ? filteredSales : []);\r\n      } else {\r\n        setSalesRecords(sortedSales);\r\n      }\r\n\r\n      setTotalPages(response.data.pages || 1);\r\n    } catch (error) {\r\n      console.error('Error fetching sales records:', error);\r\n      showToast('danger', 'Failed to fetch sales records.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showToast, loggedInUserName, role, salesExecutives]);\r\n\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n    fetchSalesRecords(1, key, direction, filters);\r\n  };\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      setPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters((prevFilters) => ({ ...prevFilters, [name]: value }));\r\n  };\r\n\r\n  const handleFilterSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPage(1);\r\n    fetchSalesRecords(1, sortConfig.key, sortConfig.direction, filters);\r\n  };\r\n\r\n  const handleResetFilters = () => {\r\n    setFilters({ startDate: null, endDate: null, clientName: '', bankId: '', productId: '', status: '' });\r\n    fetchSalesRecords(1, sortConfig.key, sortConfig.direction, {\r\n      startDate: null, endDate: null, clientName: '', bankId: '', productId: '', status: ''\r\n    });\r\n  };\r\n\r\n  const handleEdit = (sale) => {\r\n    setCurrentSale(sale);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const confirmDelete = (sale) => {\r\n    setSaleToDelete(sale);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const sortSalesData = (salesData, sortKey, sortDirection) => {\r\n    return salesData.sort((a, b) => {\r\n      let aValue, bValue;\r\n\r\n      if (sortKey === 'policy_type') {\r\n        aValue = a.policy_type?.name || '';\r\n        bValue = b.policy_type?.name || '';\r\n      } else if (sortKey === 'sales_manager') {\r\n        aValue = a.sale_manager?.name || '';\r\n        bValue = b.sale_manager?.name || '';\r\n      } else {\r\n        aValue = a[sortKey];\r\n        bValue = b[sortKey];\r\n      }\r\n\r\n      if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (saleToDelete) {\r\n      try {\r\n        await api.delete(`/sales/${saleToDelete.id}`);\r\n        setSalesRecords(salesRecords.filter((sale) => sale.id !== saleToDelete.id));\r\n        showToast('success', 'Sale deleted successfully.', 'Success');\r\n      } catch (error) {\r\n        console.error('Error deleting sale:', error);\r\n        showToast('danger', 'Failed to delete sale.', 'Error');\r\n      } finally {\r\n        setShowDeleteModal(false);\r\n        setSaleToDelete(null);\r\n        fetchSalesRecords(page, sortConfig.key, sortConfig.direction, filters);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (key) => {\r\n    if (sortConfig.key === key) {\r\n      return sortConfig.direction === 'asc' ? (\r\n        <FontAwesomeIcon icon={faSortUp} />\r\n      ) : (\r\n        <FontAwesomeIcon icon={faSortDown} />\r\n      );\r\n    }\r\n    return <FontAwesomeIcon icon={faSort} />;\r\n  };\r\n\r\n  const handleFormSubmit = async (newSaleData) => {\r\n    if (currentSale) {\r\n      try {\r\n        const response = await api.put(`/sales/${currentSale.id}`, newSaleData);\r\n        setSalesRecords(\r\n          salesRecords.map((sale) =>\r\n            sale.id === currentSale.id ? { ...sale, ...response.data } : sale\r\n          )\r\n        );\r\n        showToast('success', 'Sale updated successfully.', 'Success');\r\n      } catch (error) {\r\n        console.error('Error updating sale record:', error);\r\n        showToast('danger', 'Failed to update sale.', 'Error');\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await api.post('/sales/', newSaleData);\r\n        setSalesRecords([...salesRecords, response.data]);\r\n        showToast('success', 'Sale added successfully.', 'Success');\r\n      } catch (error) {\r\n        console.error('Error adding new sale record:', error);\r\n      }\r\n    }\r\n\r\n    setShowModal(false);\r\n    setCurrentSale(null);\r\n    fetchSalesRecords(page, sortConfig.key, sortConfig.direction, filters);\r\n  };\r\n\r\n  const renderStatusBadge = (status) => {\r\n    let variant = 'secondary';\r\n    if (status === 'submitted') {\r\n      variant = 'success';\r\n    } else if (status === 'under investigation') {\r\n      variant = 'warning';\r\n    } else if (status === 'rejected') {\r\n      variant = 'danger';\r\n    }\r\n    return <Badge bg={variant} className=\"text-white\">{status}</Badge>;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSalesRecords(page, sortConfig.key, sortConfig.direction, filters);\r\n  }, [page, sortConfig, filters, fetchSalesRecords]);\r\n\r\n  useEffect(() => {\r\n    fetchBanksAndProducts();\r\n    fetchSalesExecutives();\r\n  }, [fetchBanksAndProducts, fetchSalesExecutives]);\r\n\r\n  const renderActions = (sale) => {\r\n    const local_user = JSON.parse(localStorage.getItem('user'));\r\n    const role_id = parseInt(local_user.role_id) || local_user.role.id;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          className=\"me-2\"\r\n          onClick={() => handleViewDetails(sale.id)}\r\n        >\r\n          <FontAwesomeIcon icon={faEye} />\r\n        </Button>\r\n        {role_id === 3 || role_id === 2 ? (\r\n          <>\r\n            <Button\r\n              variant=\"warning\"\r\n              size=\"sm\"\r\n              className=\"me-2\"\r\n              onClick={() => handleEdit(sale)}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => confirmDelete(sale)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Button>\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderPaginationItems = () => {\r\n    const pages = [];\r\n    const startPage = Math.max(1, page - Math.floor(maxPageDisplay / 2));\r\n    const endPage = Math.min(totalPages, startPage + maxPageDisplay - 1);\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(\r\n        <Pagination.Item key={i} active={i === page} onClick={() => handlePageChange(i)}>\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    return pages;\r\n  };\r\n\r\n  const handleFilterByStatus = (status) => {\r\n    setFilters((prev) => ({ ...prev, status }));\r\n    fetchSalesRecords(1, sortConfig.key, sortConfig.direction, { ...filters, status });\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center mt-5\">\r\n        <Spinner animation=\"border\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  if (role === 'Sales_Manager' && salesRecords.length === 0) {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <h2 className=\"text-left\">Sales Records</h2>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Button onClick={() => setShowModal(true)} variant=\"primary\" className=\"mb-3\">\r\n              Make Sale\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <h3 className=\"text-center text-muted\">No sales keyed by manager yet</h3>\r\n\r\n        <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n          <Modal.Header closeButton>\r\n            <Modal.Title>{currentSale ? 'Edit Sale' : 'Add New Sale'}</Modal.Title>\r\n          </Modal.Header>\r\n          <Modal.Body>\r\n            {currentSale ? (\r\n              <SalesEditForm\r\n                saleData={currentSale}\r\n                onCancel={() => setShowModal(false)}\r\n                onSubmit={handleFormSubmit}\r\n              />\r\n            ) : (\r\n              <SalesForm\r\n                onSubmit={handleFormSubmit}\r\n                onCancel={() => setShowModal(false)}\r\n              />\r\n            )}\r\n          </Modal.Body>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <h2 className=\"text-left\">Sales Records</h2>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button onClick={() => setShowModal(true)} variant=\"primary\" className=\"mb-3\">\r\n            Make Sale\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <Button variant=\"info\" onClick={() => handleFilterByStatus('submitted')}>\r\n            Filter Submitted\r\n          </Button>\r\n          <Button variant=\"warning\" onClick={() => handleFilterByStatus('under investigation')}>\r\n            Filter Under Investigation\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={() => handleFilterByStatus('rejected')}>\r\n            Filter Rejected\r\n          </Button>\r\n          <Button variant=\"secondary\" onClick={handleResetFilters}>\r\n            Reset Filters\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Form onSubmit={handleFilterSubmit} className=\"mb-4\">\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"filterStartDate\">\r\n              <Form.Label>Start Date</Form.Label>\r\n              <DatePicker\r\n                selected={filters.startDate}\r\n                onChange={(date) => setFilters((prev) => ({ ...prev, startDate: date }))}\r\n                className=\"form-control\"\r\n                isClearable\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterEndDate\">\r\n              <Form.Label>End Date</Form.Label>\r\n              <DatePicker\r\n                selected={filters.endDate}\r\n                onChange={(date) => setFilters((prev) => ({ ...prev, endDate: date }))}\r\n                className=\"form-control\"\r\n                isClearable\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterClientName\">\r\n              <Form.Label>Name filter</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"clientName\"\r\n                value={filters.clientName}\r\n                onChange={handleFilterChange}\r\n                placeholder=\"Enter name\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterBank\">\r\n              <Form.Label>Bank</Form.Label>\r\n              <Form.Control as=\"select\" name=\"bankId\" value={filters.bankId} onChange={handleFilterChange}>\r\n                <option value=\"\">Select Bank</option>\r\n                {banks.map((bank) => (\r\n                  <option key={bank.id} value={bank.id}>\r\n                    {bank.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterProduct\">\r\n              <Form.Label>Product</Form.Label>\r\n              <Form.Control as=\"select\" name=\"productId\" value={filters.productId} onChange={handleFilterChange}>\r\n                <option value=\"\">Select Product</option>\r\n                {products.map((product) => (\r\n                  <option key={product.id} value={product.id}>\r\n                    {product.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col className=\"align-self-end\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Filter\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\r\n      <Table striped bordered hover responsive className=\"mt-3\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th onClick={() => handleSort('client_name')}>\r\n              Client Name {getSortIcon('client_name')}\r\n            </th>\r\n            <th onClick={() => handleSort('amount')}>\r\n              Amount {getSortIcon('amount')}\r\n            </th>\r\n            <th onClick={() => handleSort('policy_type')}>\r\n              Policy Type {getSortIcon('policy_type')}\r\n            </th>\r\n            <th onClick={() => handleSort('serial_number')}>\r\n              Serial Number {getSortIcon('serial_number')}\r\n            </th>\r\n            <th onClick={() => handleSort('sales_manager')}>\r\n              Sales Manager {getSortIcon('sales_manager')}\r\n            </th>\r\n            <th onClick={() => handleSort('sales_executive_id')}>\r\n              Sales Executive {getSortIcon('sales_executive_id')}\r\n            </th>\r\n            <th onClick={() => handleSort('source_type')}>\r\n              Source Type {getSortIcon('source_type')}\r\n            </th>\r\n            <th onClick={() => handleSort('status')}>\r\n              Status {getSortIcon('status')}\r\n            </th>\r\n            <th onClick={() => handleSort('created_at')}>\r\n              Date {getSortIcon('created_at')}\r\n            </th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {salesRecords.length > 0 ? (\r\n            salesRecords.map((sale, index) => (\r\n              <tr key={sale.id}>\r\n                <td>{(page - 1) * 10 + index + 1}</td>\r\n                <td>{sale.client_name}</td>\r\n                <td>{sale.amount}</td>\r\n                <td>{sale.policy_type?.name || 'N/A'}</td>\r\n                <td>{sale.serial_number}</td>\r\n                <td>{sale.sale_manager?.name || 'N/A'}</td>\r\n                <td>\r\n                  {\r\n                    salesExecutives.find(executive => executive.id === sale.sales_executive_id)?.name || sale.sales_executive_id\r\n                  }\r\n                </td>\r\n                <td>{sale.source_type}</td>\r\n                <td>{renderStatusBadge(sale.status)}</td>\r\n                <td>{new Date(sale.created_at).toLocaleDateString()}</td>\r\n                <td>{renderActions(sale)}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"11\" className=\"text-center\">\r\n                No sales records available.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Pagination className=\"justify-content-center mt-4\">\r\n        <Pagination.First onClick={() => handlePageChange(1)} disabled={page === 1} />\r\n        <Pagination.Prev onClick={() => handlePageChange(page - 1)} disabled={page === 1} />\r\n        {renderPaginationItems()}\r\n        <Pagination.Next onClick={() => handlePageChange(page + 1)} disabled={page === totalPages} />\r\n        <Pagination.Last onClick={() => handlePageChange(totalPages)} disabled={page === totalPages} />\r\n      </Pagination>\r\n\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this sale record?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</Button>\r\n          <Button variant=\"danger\" onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{currentSale ? 'Edit Sale' : 'Add New Sale'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentSale ? (\r\n            <SalesEditForm\r\n              saleData={currentSale}\r\n              onCancel={() => setShowModal(false)}\r\n              onSubmit={handleFormSubmit}\r\n            />\r\n          ) : (\r\n            <SalesForm\r\n              onSubmit={handleFormSubmit}\r\n              onCancel={() => setShowModal(false)}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesPage;\r\n","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});"],"names":["_ref","saleData","onSubmit","onCancel","formData","setFormData","useState","sale_manager_id","sales_executive_id","client_name","client_id_no","client_phone","serial_number","collection_platform","source_type","momo_reference_number","momo_transaction_id","first_pay_with_momo","subsequent_pay_source_type","bank_id","bank_branch_id","bank_acc_number","paypoint_id","paypoint_branch","staff_id","policy_type_id","amount","customer_called","geolocation_latitude","geolocation_longitude","momo_first_premium","is_deleted","status","errors","setErrors","salesExecutives","setSalesExecutives","impactProducts","setImpactProducts","banks","setBanks","branches","setBranches","paypoints","setPaypoints","salesManagers","setSalesManagers","isGeolocationEnabled","setIsGeolocationEnabled","useEffect","fetchBanks","fetchImpactProducts","fetchSalesManagers","fetchPaypoints","navigator","geolocation","getCurrentPosition","position","prevData","coords","latitude","longitude","toast","error","async","response","api","get","params","type","role_id","data","console","log","products","handleInputChange","name","value","checked","e","target","serialNumber","exists","checkSerialNumberExists","prevErrors","undefined","manager_id","managerId","fetchSalesExecutives","bankId","fetchBranches","isMomo","_jsxs","preventDefault","validateForm","newErrors","length","trimmedBankAccNumber","trim","selectedBank","find","bank","id","parseInt","lowerCaseBankName","toLowerCase","includes","Object","keys","sanitizedData","parseFloat","forEach","key","post","headers","success","className","children","_jsx","onChange","disabled","map","sm","se","_Fragment","htmlFor","ppy","branch","product","style","color","fontSize","onClick","_saleData$sale_manage","_saleData$bank","_saleData$bank_branch","_saleData$paypoint","_saleData$policy_type","sale_manager","bank_branch","paypoint","policy_type","policyTypes","setPolicyTypes","fetchDropdownData","managerResponse","bankResponse","paypointResponse","policyResponse","Promise","all","put","policy","_local_user$role","showToast","salesRecords","setSalesRecords","loading","setLoading","sortConfig","setSortConfig","direction","page","setPage","totalPages","setTotalPages","filters","setFilters","startDate","endDate","clientName","productId","showModal","setShowModal","showDeleteModal","setShowDeleteModal","currentSale","setCurrentSale","setProducts","saleToDelete","setSaleToDelete","local_user","JSON","parse","localStorage","getItem","loggedInUserName","role","navigate","useNavigate","fetchBanksAndProducts","useCallback","productResponse","restot","sort_by","per_page","total","Array","isArray","sales_executives","fetchSalesRecords","currentPage","sortKey","sortDirection","filterParams","res1tot","toISOString","split","salesData","sales","filter","sale","createdAt","Date","created_at","isAfterStartDate","isBeforeEndDate","_sale$client_name","_sale$sale_manager","_sale$sale_manager$na","_salesExecutives$find","_salesExecutives$find2","clientNameMatch","managerNameMatch","executiveNameMatch","executive","product_id","sortedSales","sortSalesData","filteredSales","_sale$sale_manager2","pages","handleSort","handlePageChange","pageNumber","handleFilterChange","prevFilters","sort","a","b","aValue","bValue","_a$policy_type","_b$policy_type","_a$sale_manager","_b$sale_manager","getSortIcon","FontAwesomeIcon","icon","faSortUp","faSortDown","faSort","handleFormSubmit","newSaleData","renderStatusBadge","variant","Badge","bg","renderActions","Button","size","handleViewDetails","saleId","faEye","handleEdit","faEdit","confirmDelete","faTrash","handleFilterByStatus","prev","Spinner","animation","Row","Col","Modal","show","onHide","Header","closeButton","Title","Body","SalesEditForm","SalesForm","handleResetFilters","Form","Group","controlId","Label","DatePicker","selected","date","isClearable","Control","placeholder","as","Table","striped","bordered","hover","responsive","index","_sale$policy_type","_sale$sale_manager3","_salesExecutives$find3","toLocaleDateString","colSpan","Pagination","First","Prev","renderPaginationItems","startPage","Math","max","floor","maxPageDisplay","endPage","min","i","push","Item","active","Next","Last","Footer","delete","WeakMap","_excluded","Anchor","React","ref","onKeyDown","props","r","t","n","hasOwnProperty","call","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","useEventCallback","href","displayName","bsPrefix","pill","text","Component","prefix","useBootstrapPrefix","classNames","PageItem","activeLabel","linkStyle","linkClassName","createButton","defaultValue","label","arguments","_ref2","Ellipsis","decoratedBsPrefix"],"sourceRoot":""}