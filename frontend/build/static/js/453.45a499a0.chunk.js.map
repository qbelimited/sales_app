{"version":3,"file":"static/js/453.45a499a0.chunk.js","mappings":"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","sources":["components/SalesForm.js","components/SalesEditForm.js","pages/SalesPage.js","../node_modules/react-bootstrap/esm/Badge.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\n\r\nconst SalesForm = ({ saleData, onSubmit, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    sale_manager_id: '',\r\n    sales_executive_id: '',\r\n    client_name: '',\r\n    client_id_no: '',\r\n    client_phone: '',\r\n    serial_number: '',\r\n    collection_platform: '',\r\n    source_type: '',\r\n    momo_reference_number: '',\r\n    momo_transaction_id: '',\r\n    first_pay_with_momo: false,\r\n    subsequent_pay_source_type: '',\r\n    bank_id: '',\r\n    bank_branch_id: '',\r\n    bank_acc_number: '',\r\n    paypoint_id: '',\r\n    paypoint_branch: '',\r\n    staff_id: '',\r\n    policy_type_id: '',\r\n    amount: '',\r\n    customer_called: false,\r\n    geolocation_latitude: '',\r\n    geolocation_longitude: '',\r\n    momo_first_premium: false,\r\n    is_deleted: false,  // Soft delete support\r\n    status: 'submitted',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [salesExecutives, setSalesExecutives] = useState([]);\r\n  const [impactProducts, setImpactProducts] = useState([]);\r\n  const [banks, setBanks] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [paypoints, setPaypoints] = useState([]);\r\n  const [salesManagers, setSalesManagers] = useState([]);\r\n  const [isGeolocationEnabled, setIsGeolocationEnabled] = useState(false);\r\n\r\n  useEffect(() => {\r\n    fetchBanks();\r\n    fetchImpactProducts();\r\n    fetchSalesManagers();\r\n    fetchPaypoints();\r\n\r\n    if (saleData) {\r\n      setFormData(saleData);\r\n    }\r\n\r\n    // Get geolocation\r\n    navigator.geolocation.getCurrentPosition(\r\n      (position) => {\r\n        setIsGeolocationEnabled(true);\r\n        setFormData((prevData) => ({\r\n          ...prevData,\r\n          geolocation_latitude: position.coords.latitude,\r\n          geolocation_longitude: position.coords.longitude,\r\n        }));\r\n      },\r\n      () => {\r\n        toast.error('Please enable location services to proceed.');\r\n        setIsGeolocationEnabled(false);\r\n      }\r\n    );\r\n  }, [saleData]);\r\n\r\n  // Fetch dropdown data for various fields\r\n  const fetchBranches = async (bankId) => {\r\n    try {\r\n      if (bankId) {\r\n        const response = await api.get('/dropdown/', {\r\n          params: { type: 'branch', bank_id: bankId },\r\n        });\r\n        setBranches(response.data);\r\n      } else {\r\n        setBranches([]);\r\n      }\r\n    } catch (error) {\r\n      toast.error('Failed to fetch branches');\r\n    }\r\n  };\r\n\r\n  const fetchSalesExecutives = async (managerId) => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'sales_executive', manager_id: managerId },\r\n      });\r\n      setSalesExecutives(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch sales executives');\r\n    }\r\n  };\r\n\r\n  const fetchSalesManagers = async () => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'users_with_roles', role_id: 4 },\r\n      });\r\n      setSalesManagers(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch sales managers');\r\n    }\r\n  };\r\n\r\n  const fetchPaypoints = async () => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'paypoint' },\r\n      });\r\n      setPaypoints(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch paypoints');\r\n    }\r\n  };\r\n\r\n  const fetchBanks = async () => {\r\n    try {\r\n      const response = await api.get('/bank/');\r\n      setBanks(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch banks');\r\n    }\r\n  };\r\n\r\n  const fetchImpactProducts = async () => {\r\n    try {\r\n      const response = await api.get('/impact_products/');\r\n      setImpactProducts(response.data.products);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch impact products');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n\r\n    if (name === 'sale_manager_id') {\r\n      fetchSalesExecutives(value);\r\n    }\r\n\r\n    if (name === 'bank_id') {\r\n      fetchBranches(value);\r\n    }\r\n\r\n    if (name === 'source_type') {\r\n      const isMomo = value === 'momo';\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        momo_reference_number: isMomo ? prevData.momo_reference_number : '',\r\n        momo_transaction_id: isMomo ? prevData.momo_transaction_id : '',\r\n        bank_id: !isMomo ? prevData.bank_id : '',\r\n        bank_branch_id: !isMomo ? prevData.bank_branch_id : '',\r\n        bank_acc_number: !isMomo ? prevData.bank_acc_number : '',\r\n        paypoint_id: value === 'paypoint' ? prevData.paypoint_id : '',\r\n        paypoint_branch: value === 'paypoint' ? prevData.paypoint_branch : '',\r\n        staff_id: !isMomo ? prevData.staff_id : '',\r\n        subsequent_pay_source_type: !isMomo ? '' : prevData.subsequent_pay_source_type,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.sale_manager_id) newErrors.sale_manager_id = 'Sale manager is required';\r\n    if (!formData.sales_executive_id) newErrors.sales_executive_id = 'Sales executive is required';\r\n    if (!formData.client_name) newErrors.client_name = 'Client name is required';\r\n    if (!formData.client_id_no) newErrors.client_id_no = 'Client ID number is required';\r\n    if (!formData.policy_type_id) newErrors.policy_type_id = 'Policy type is required';\r\n    if (!formData.client_phone || formData.client_phone.length !== 10) newErrors.client_phone = 'Valid client phone number is required';\r\n    if (!formData.serial_number) newErrors.serial_number = 'Serial number is required';\r\n    if (!formData.amount) newErrors.amount = 'Amount is required';\r\n\r\n    // Validate for Momo transactions\r\n    if (formData.source_type === 'momo') {\r\n      if (!formData.momo_reference_number) newErrors.momo_reference_number = 'Momo reference number is required';\r\n      if (!formData.momo_transaction_id) newErrors.momo_transaction_id = 'Momo transaction ID is required';\r\n    }\r\n\r\n    // Validate for PayPoint transactions\r\n    if (formData.source_type === 'paypoint' || formData.subsequent_pay_source_type === 'paypoint') {\r\n      if (!formData.paypoint_id) newErrors.paypoint_id = 'PayPoint name is required';\r\n      if (!formData.staff_id) newErrors.staff_id = 'Staff ID is required';\r\n    }\r\n\r\n    // Validate for Bank transactions\r\n    if (formData.source_type === 'bank' || formData.subsequent_pay_source_type === 'bank') {\r\n      if (!formData.bank_id) newErrors.bank_id = 'Bank is required';\r\n      if (!formData.bank_branch_id) newErrors.bank_branch_id = 'Bank branch is required';\r\n      if (!formData.bank_acc_number) {\r\n        newErrors.bank_acc_number = 'Bank account number is required';\r\n      } else {\r\n        const length = formData.bank_acc_number.length;\r\n        const bankName = formData.bank_id || '';\r\n\r\n        // Bank-specific validation\r\n        if (bankName.includes('UBA') && length !== 14) {\r\n          newErrors.bank_acc_number = 'UBA account number must be 14 digits';\r\n        } else if ((bankName.includes('Zenith') || bankName.includes('Absa')) && length !== 10) {\r\n          newErrors.bank_acc_number = 'Zenith or Absa account number must be 10 digits';\r\n        } else if (bankName.includes('SG') && length !== 12 && length !== 13) {\r\n          newErrors.bank_acc_number = 'SG account number must be 12 or 13 digits';\r\n        } else if (length !== 13 && length !== 16) {\r\n          newErrors.bank_acc_number = 'Account number must be 13 or 16 digits';\r\n        }\r\n      }\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    // Ensure form is valid\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      // Sanitize and prepare data\r\n      const sanitizedData = {\r\n        ...formData,\r\n        sale_manager_id: parseInt(formData.sale_manager_id, 10),  // Convert to integer\r\n        sales_executive_id: parseInt(formData.sales_executive_id, 10),  // Convert to integer\r\n        policy_type_id: parseInt(formData.policy_type_id, 10),  // Convert to integer\r\n        amount: parseFloat(formData.amount),  // Convert amount to float\r\n\r\n        // Conditionally convert to integer if value exists, otherwise omit\r\n        bank_id: formData.bank_id ? parseInt(formData.bank_id, 10) : undefined,\r\n        bank_branch_id: formData.bank_branch_id ? parseInt(formData.bank_branch_id, 10) : undefined,\r\n        paypoint_id: formData.paypoint_id ? parseInt(formData.paypoint_id, 10) : undefined,\r\n\r\n        // Destructure and prepare geolocation\r\n        geolocation: {\r\n          latitude: parseFloat(formData.geolocation_latitude),\r\n          longitude: parseFloat(formData.geolocation_longitude),\r\n        },\r\n      };\r\n\r\n      // Remove any undefined fields from sanitizedData\r\n      Object.keys(sanitizedData).forEach(key => {\r\n        if (sanitizedData[key] === undefined) {\r\n            delete sanitizedData[key];\r\n        }\r\n      });\r\n\r\n      // Make API request to submit the sale\r\n      const response = await api.post('/sales/', sanitizedData, {\r\n        headers: {\r\n          'Content-Type': 'application/json', // Ensure the correct content type\r\n        },\r\n      });\r\n\r\n      // Check if response is successful\r\n      if (response.status === 201 || response.status === 200) {\r\n        toast.success('Sale submitted successfully!');\r\n        onSubmit();  // Optionally handle success callback or redirect\r\n      } else {\r\n        toast.error('Failed to submit the sale. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      console.error('Error submitting sale:', error);\r\n      toast.error('Failed to submit the sale');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={isGeolocationEnabled ? '' : 'disabled'}>\r\n      {!isGeolocationEnabled && (\r\n        <div className=\"text-danger mb-3\">Please enable location services to proceed.</div>\r\n      )}\r\n\r\n      {/* Sale Manager Field */}\r\n      <div className=\"form-group\">\r\n        <label>Sale Manager</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sale_manager_id\"\r\n          value={formData.sale_manager_id}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Select Sale Manager</option>\r\n          {salesManagers.map((sm) => (\r\n            <option key={sm.id} value={sm.id}>\r\n              {sm.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sale_manager_id && <div className=\"text-danger\">{errors.sale_manager_id}</div>}\r\n      </div>\r\n\r\n      {/* Sales Executive Dropdown */}\r\n      <div className=\"form-group\">\r\n        <label>Sales Executive</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sales_executive_id\"\r\n          value={formData.sales_executive_id}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Select Sales Executive</option>\r\n          {salesExecutives.map((se) => (\r\n            <option key={se.id} value={se.id}>\r\n              {se.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sales_executive_id && <div className=\"text-danger\">{errors.sales_executive_id}</div>}\r\n      </div>\r\n\r\n      {/* Client Name and Client ID */}\r\n      <div className=\"form-group\">\r\n        <label>Client Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_name\"\r\n          value={formData.client_name}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.client_name && <div className=\"text-danger\">{errors.client_name}</div>}\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Client Phone Number</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_phone\"\r\n          value={formData.client_phone}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.client_phone && <div className=\"text-danger\">{errors.client_phone}</div>}\r\n      </div>\r\n\r\n      <div className=\"form-group\">\r\n        <label>Client Ghana Card ID No. (\"no hyphens\" - e.g. 'GHA123435555')</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_id_no\"\r\n          value={formData.client_id_no}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.client_id_no && <div className=\"text-danger\">{errors.client_id_no}</div>}\r\n      </div>\r\n\r\n      {/* Source Type (Momo, Bank, PayPoint) */}\r\n      <div className=\"form-group\">\r\n        <label>Pay Source</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"source_type\"\r\n          value={formData.source_type}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Please select</option>\r\n          <option value=\"momo\">Momo</option>\r\n          <option value=\"bank\">Bank</option>\r\n          <option value=\"paypoint\">PayPoint</option>\r\n        </select>\r\n        {errors.source_type && <div className=\"text-danger\">{errors.source_type}</div>}\r\n      </div>\r\n\r\n      {/* Momo Transaction Fields */}\r\n      {formData.source_type === 'momo' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Momo Reference Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_reference_number\"\r\n              value={formData.momo_reference_number}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.momo_reference_number && <div className=\"text-danger\">{errors.momo_reference_number}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Momo Transaction ID</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_transaction_id\"\r\n              value={formData.momo_transaction_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.momo_transaction_id && <div className=\"text-danger\">{errors.momo_transaction_id}</div>}\r\n          </div>\r\n\r\n          {/* Collection Platform */}\r\n          <div className=\"form-group\">\r\n            <label>Collection Platform</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"collection_platform\"\r\n              value={formData.collection_platform}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Please select</option>\r\n              <option value=\"Transflow\">Transflow</option>\r\n              <option value=\"Hubtel\">Hubtel</option>\r\n              <option value=\"company Momo number\">Company Momo Number</option>\r\n            </select>\r\n            {errors.collection_platform && <div className=\"text-danger\">{errors.collection_platform}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-check\">\r\n            <input\r\n              type=\"checkbox\"\r\n              className=\"form-check-input\"\r\n              id=\"first_pay_with_momo\"\r\n              name=\"first_pay_with_momo\"\r\n              checked={formData.first_pay_with_momo}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor=\"first_pay_with_momo\">\r\n              First payment with Momo?\r\n            </label>\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* PayPoint Fields */}\r\n      {formData.source_type === 'paypoint' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Name</label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_id\"\r\n              value={formData.paypoint_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Paypoint</option>\r\n              {paypoints.map((ppy) => (\r\n                <option key={ppy.id} value={ppy.id}>\r\n                  {ppy.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.paypoint_id && <div className=\"text-danger\">{errors.paypoint_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Branch</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_branch\"\r\n              value={formData.paypoint_branch}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.paypoint_branch && <div className=\"text-danger\">{errors.paypoint_branch}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Bank Fields */}\r\n      {formData.source_type === 'bank' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Bank</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_id\"\r\n              value={formData.bank_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Bank</option>\r\n              {banks.map((bank) => (\r\n                <option key={bank.id} value={bank.id}>\r\n                  {bank.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_id && <div className=\"text-danger\">{errors.bank_id}</div>}\r\n          </div>\r\n\r\n          {/* Branch Selection - Updates when a bank is selected */}\r\n          <div className=\"form-group\">\r\n            <label>Bank Branch</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_branch_id\"\r\n              value={formData.bank_branch_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Branch</option>\r\n              {branches.map((branch) => (\r\n                <option key={branch.id} value={branch.id}>\r\n                  {branch.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_branch_id && <div className=\"text-danger\">{errors.bank_branch_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Account Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"bank_acc_number\"\r\n              value={formData.bank_acc_number}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.bank_acc_number && <div className=\"text-danger\">{errors.bank_acc_number}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Impact Products Dropdown (previously missing) */}\r\n      <div className=\"form-group\">\r\n        <label>Policy Type (Impact Product)</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"policy_type_id\"\r\n          value={formData.policy_type_id}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        >\r\n          <option value=\"\">Select Product</option>\r\n          {impactProducts.map((product) => (\r\n            <option key={product.id} value={product.id}>\r\n              {product.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.policy_type_id && <div className=\"text-danger\">{errors.policy_type_id}</div>}\r\n      </div>\r\n\r\n      {/* Policy Form Serial Number (previously missing) */}\r\n      <div className=\"form-group\">\r\n        <label>Policy Form Serial Number</label>\r\n        <input\r\n          className=\"form-control\"\r\n          name=\"serial_number\"\r\n          value={formData.serial_number}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.serial_number && <div className=\"text-danger\">{errors.serial_number}</div>}\r\n      </div>\r\n\r\n      {/* Subsequent Payment Dropdown */}\r\n      {formData.first_pay_with_momo && (\r\n        <div className=\"form-group\">\r\n          <label>Subsequent Payment Method</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"subsequent_pay_source_type\"\r\n            value={formData.subsequent_pay_source_type}\r\n            onChange={handleInputChange}\r\n            disabled={!isGeolocationEnabled}\r\n          >\r\n            <option value=\"options\">Please select</option>\r\n            <option value=\"paypoint\">PayPoint</option>\r\n            <option value=\"bank\">Bank</option>\r\n          </select>\r\n          {errors.subsequent_pay_source_type && <div className=\"text-danger\">{errors.subsequent_pay_source_type}</div>}\r\n        </div>\r\n      )}\r\n\r\n      {/* PayPoint Fields for Subsequent Payment */}\r\n      {formData.subsequent_pay_source_type === 'paypoint' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Name</label>\r\n            <select\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_id\"\r\n              value={formData.paypoint_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Paypoint</option>\r\n              {paypoints.map((ppy) => (\r\n                <option key={ppy.id} value={ppy.id}>\r\n                  {ppy.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.paypoint_id && <div className=\"text-danger\">{errors.paypoint_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Branch</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_branch\"\r\n              value={formData.paypoint_branch}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.paypoint_branch && <div className=\"text-danger\">{errors.paypoint_branch}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Bank Fields for Subsequent Payment */}\r\n      {formData.subsequent_pay_source_type === 'bank' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Bank</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_id\"\r\n              value={formData.bank_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Bank</option>\r\n              {banks.map((bank) => (\r\n                <option key={bank.id} value={bank.id}>\r\n                  {bank.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_id && <div className=\"text-danger\">{errors.bank_id}</div>}\r\n          </div>\r\n\r\n          {/* Branch Selection - Updates when a bank is selected */}\r\n          <div className=\"form-group\">\r\n            <label>Bank Branch</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_branch_id\"\r\n              value={formData.bank_branch_id}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            >\r\n              <option value=\"\">Select Branch</option>\r\n              {branches.map((branch) => (\r\n                <option key={branch.id} value={branch.id}>\r\n                  {branch.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_branch_id && <div className=\"text-danger\">{errors.bank_branch_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Account Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"bank_acc_number\"\r\n              value={formData.bank_acc_number}\r\n              onChange={handleInputChange}\r\n              disabled={!isGeolocationEnabled}\r\n            />\r\n            {errors.bank_acc_number && <div className=\"text-danger\">{errors.bank_acc_number}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Staff ID */}\r\n      {(formData.source_type === 'paypoint' || formData.subsequent_pay_source_type === 'paypoint') && (\r\n        <div className=\"form-group\">\r\n          <label>Staff Number</label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"staff_id\"\r\n            value={formData.staff_id}\r\n            onChange={handleInputChange}\r\n            disabled={!isGeolocationEnabled}\r\n          />\r\n          {errors.staff_id && <div className=\"text-danger\">{errors.staff_id}</div>}\r\n        </div>\r\n      )}\r\n\r\n      {/* Customer Called */}\r\n      <div className=\"form-check\">\r\n        <input\r\n          type=\"checkbox\"\r\n          className=\"form-check-input\"\r\n          id=\"customer_called\"\r\n          name=\"customer_called\"\r\n          checked={formData.customer_called}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        <label className=\"form-check-label\" htmlFor=\"customer_called\">\r\n          Has the customer been called?\r\n        </label>\r\n      </div>\r\n\r\n      {/* Amount */}\r\n      <div className=\"form-group\">\r\n        <label>Premium Amount</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"form-control\"\r\n          name=\"amount\"\r\n          value={formData.amount}\r\n          onChange={handleInputChange}\r\n          disabled={!isGeolocationEnabled}\r\n        />\r\n        {errors.amount && <div className=\"text-danger\">{errors.amount}</div>}\r\n      </div>\r\n\r\n      <div style={{ color: 'red', fontSize: '11px'}}>\r\n        <em>Premium amounts are strictly in Ghana Cedis (GHS)</em>\r\n      </div>\r\n\r\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n        Submit Sale\r\n      </button>\r\n      <button type=\"button\" className=\"btn btn-secondary mt-3 ml-2\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SalesForm;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport api from '../services/api';\r\n\r\nconst SalesEditForm = ({ saleData, onSubmit, onCancel }) => {\r\n  const [formData, setFormData] = useState({\r\n    sale_manager_id: saleData?.sale_manager?.id || '',\r\n    sales_executive_id: saleData?.sales_executive_id || '',\r\n    client_name: saleData?.client_name || '',\r\n    client_id_no: saleData?.client_id_no || '',\r\n    client_phone: saleData?.client_phone || '',\r\n    serial_number: saleData?.serial_number || '',\r\n    collection_platform: saleData?.collection_platform || '',\r\n    source_type: saleData?.source_type || '',\r\n    momo_reference_number: saleData?.momo_reference_number || '',\r\n    momo_transaction_id: saleData?.momo_transaction_id || '',\r\n    first_pay_with_momo: saleData?.first_pay_with_momo || false,\r\n    subsequent_pay_source_type: saleData?.subsequent_pay_source_type || '',\r\n    bank_id: saleData?.bank?.id || '',\r\n    bank_branch_id: saleData?.bank_branch?.id || '',\r\n    bank_acc_number: saleData?.bank_acc_number || '',\r\n    paypoint_id: saleData?.paypoint?.id || '',\r\n    paypoint_branch: saleData?.paypoint_branch || '',\r\n    staff_id: saleData?.staff_id || '',\r\n    policy_type_id: saleData?.policy_type?.id || '',\r\n    amount: saleData?.amount || '',\r\n    customer_called: saleData?.customer_called || false,\r\n    geolocation_latitude: saleData?.geolocation_latitude || '',\r\n    geolocation_longitude: saleData?.geolocation_longitude || '',\r\n    status: saleData?.status || 'submitted',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [salesExecutives, setSalesExecutives] = useState([]);\r\n  const [salesManagers, setSalesManagers] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [banks, setBanks] = useState([]);\r\n  const [paypoints, setPaypoints] = useState([]);\r\n  const [policyTypes, setPolicyTypes] = useState([]);\r\n\r\n  useEffect(() => {\r\n    fetchDropdownData();\r\n    if (saleData.bank_id) fetchBranches(saleData.bank_id);\r\n    if (saleData.sale_manager_id) fetchSalesExecutives(saleData.sale_manager_id);\r\n  }, [saleData]);\r\n\r\n  const fetchDropdownData = async () => {\r\n    try {\r\n      const [managerResponse, bankResponse, paypointResponse, policyResponse] = await Promise.all([\r\n        api.get('/dropdown/', { params: { type: 'users_with_roles', role_id: 4 } }), // Sales Managers\r\n        api.get('/bank/'), // Banks\r\n        api.get('/dropdown/', { params: { type: 'paypoint' } }), // Paypoints\r\n        api.get('/impact_products/'), // Policy Types\r\n      ]);\r\n\r\n      setSalesManagers(managerResponse.data);\r\n      setBanks(bankResponse.data);\r\n      setPaypoints(paypointResponse.data);\r\n      setPolicyTypes(policyResponse.data.products);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch dropdown data');\r\n    }\r\n  };\r\n\r\n  const fetchBranches = async (bankId) => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'branch', bank_id: bankId },\r\n      });\r\n      setBranches(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch branches');\r\n    }\r\n  };\r\n\r\n  const fetchSalesExecutives = async (managerId) => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'sales_executive', manager_id: managerId },\r\n      });\r\n      setSalesExecutives(response.data);\r\n    } catch (error) {\r\n      toast.error('Failed to fetch sales executives');\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prevData) => ({\r\n      ...prevData,\r\n      [name]: type === 'checkbox' ? checked : value,\r\n    }));\r\n\r\n    if (name === 'sale_manager_id') {\r\n      fetchSalesExecutives(value);\r\n    }\r\n\r\n    if (name === 'bank_id') {\r\n      fetchBranches(value);\r\n    }\r\n\r\n    if (name === 'source_type') {\r\n      const isMomo = value === 'momo';\r\n      setFormData((prevData) => ({\r\n        ...prevData,\r\n        momo_reference_number: isMomo ? prevData.momo_reference_number : '',\r\n        momo_transaction_id: isMomo ? prevData.momo_transaction_id : '',\r\n        bank_id: !isMomo ? prevData.bank_id : '',\r\n        bank_branch_id: !isMomo ? prevData.bank_branch_id : '',\r\n        bank_acc_number: !isMomo ? prevData.bank_acc_number : '',\r\n        paypoint_id: value === 'paypoint' ? prevData.paypoint_id : '',\r\n        paypoint_branch: value === 'paypoint' ? prevData.paypoint_branch : '',\r\n        staff_id: !isMomo ? prevData.staff_id : '',\r\n        subsequent_pay_source_type: !isMomo ? '' : prevData.subsequent_pay_source_type,\r\n      }));\r\n    }\r\n  };\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.sale_manager_id) newErrors.sale_manager_id = 'Sale manager is required';\r\n    if (!formData.sales_executive_id) newErrors.sales_executive_id = 'Sales executive is required';\r\n    if (!formData.client_name) newErrors.client_name = 'Client name is required';\r\n    if (!formData.client_id_no) newErrors.client_id_no = 'Client ID number is required';\r\n    if (!formData.policy_type_id) newErrors.policy_type_id = 'Policy type is required';\r\n    if (!formData.client_phone || formData.client_phone.length !== 10) newErrors.client_phone = 'Valid client phone number is required';\r\n    if (!formData.serial_number) newErrors.serial_number = 'Serial number is required';\r\n    if (!formData.amount) newErrors.amount = 'Amount is required';\r\n\r\n    // Validate for Momo transactions\r\n    if (formData.source_type === 'momo') {\r\n      if (!formData.momo_reference_number) newErrors.momo_reference_number = 'Momo reference number is required';\r\n      if (!formData.momo_transaction_id) newErrors.momo_transaction_id = 'Momo transaction ID is required';\r\n    }\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!validateForm()) return;\r\n\r\n    try {\r\n      const sanitizedData = {\r\n        ...formData,\r\n        sale_manager_id: parseInt(formData.sale_manager_id, 10),\r\n        sales_executive_id: parseInt(formData.sales_executive_id, 10),\r\n        policy_type_id: parseInt(formData.policy_type_id, 10),\r\n        amount: parseFloat(formData.amount),\r\n        bank_id: formData.bank_id ? parseInt(formData.bank_id, 10) : undefined,\r\n        bank_branch_id: formData.bank_branch_id ? parseInt(formData.bank_branch_id, 10) : undefined,\r\n        paypoint_id: formData.paypoint_id ? parseInt(formData.paypoint_id, 10) : undefined,\r\n        geolocation_latitude: parseFloat(formData.geolocation_latitude),\r\n        geolocation_longitude: parseFloat(formData.geolocation_longitude),\r\n      };\r\n\r\n      Object.keys(sanitizedData).forEach((key) => {\r\n        if (sanitizedData[key] === undefined) {\r\n          delete sanitizedData[key];\r\n        }\r\n      });\r\n\r\n      // API request for updating the sale using PUT method\r\n      const response = await api.put(`/sales/${saleData.id}`, sanitizedData);\r\n\r\n      if (response.status === 200) {\r\n        toast.success('Sale updated successfully!');\r\n        onSubmit();\r\n      } else {\r\n        // toast.error('Failed to update the sale. Please try again.');\r\n      }\r\n    } catch (error) {\r\n      // toast.error('Failed to update the sale');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      {/* Sale Manager */}\r\n      <div className=\"form-group\">\r\n        <label>Sale Manager</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sale_manager_id\"\r\n          value={formData.sale_manager_id}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select Sale Manager</option>\r\n          {salesManagers.map((sm) => (\r\n            <option key={sm.id} value={sm.id}>\r\n              {sm.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sale_manager_id && <div className=\"text-danger\">{errors.sale_manager_id}</div>}\r\n      </div>\r\n\r\n      {/* Sales Executive */}\r\n      <div className=\"form-group\">\r\n        <label>Sales Executive</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"sales_executive_id\"\r\n          value={formData.sales_executive_id}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select Sales Executive</option>\r\n          {salesExecutives.map((se) => (\r\n            <option key={se.id} value={se.id}>\r\n              {se.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.sales_executive_id && <div className=\"text-danger\">{errors.sales_executive_id}</div>}\r\n      </div>\r\n\r\n      {/* Client Name */}\r\n      <div className=\"form-group\">\r\n        <label>Client Name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_name\"\r\n          value={formData.client_name}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.client_name && <div className=\"text-danger\">{errors.client_name}</div>}\r\n      </div>\r\n\r\n      {/* Client Phone */}\r\n      <div className=\"form-group\">\r\n        <label>Client Phone</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_phone\"\r\n          value={formData.client_phone}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.client_phone && <div className=\"text-danger\">{errors.client_phone}</div>}\r\n      </div>\r\n\r\n      {/* Client Ghana Card ID No */}\r\n      <div className=\"form-group\">\r\n        <label>Client Ghana Card ID No</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"client_id_no\"\r\n          value={formData.client_id_no}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.client_id_no && <div className=\"text-danger\">{errors.client_id_no}</div>}\r\n      </div>\r\n\r\n      {/* Source Type (Momo, Bank, PayPoint) */}\r\n      <div className=\"form-group\">\r\n        <label>Pay Source</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"source_type\"\r\n          value={formData.source_type}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Please select</option>\r\n          <option value=\"momo\">Momo</option>\r\n          <option value=\"bank\">Bank</option>\r\n          <option value=\"paypoint\">PayPoint</option>\r\n        </select>\r\n        {errors.source_type && <div className=\"text-danger\">{errors.source_type}</div>}\r\n      </div>\r\n\r\n      {/* Momo Information */}\r\n      {formData.source_type === 'momo' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Momo Reference Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_reference_number\"\r\n              value={formData.momo_reference_number}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.momo_reference_number && <div className=\"text-danger\">{errors.momo_reference_number}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Momo Transaction ID</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"momo_transaction_id\"\r\n              value={formData.momo_transaction_id}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.momo_transaction_id && <div className=\"text-danger\">{errors.momo_transaction_id}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Bank Information */}\r\n      {formData.source_type === 'bank' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>Bank</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_id\"\r\n              value={formData.bank_id}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select Bank</option>\r\n              {banks.map((bank) => (\r\n                <option key={bank.id} value={bank.id}>\r\n                  {bank.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_id && <div className=\"text-danger\">{errors.bank_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Branch</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"bank_branch_id\"\r\n              value={formData.bank_branch_id}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select Branch</option>\r\n              {branches.map((branch) => (\r\n                <option key={branch.id} value={branch.id}>\r\n                  {branch.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.bank_branch_id && <div className=\"text-danger\">{errors.bank_branch_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>Bank Account Number</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"bank_acc_number\"\r\n              value={formData.bank_acc_number}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.bank_acc_number && <div className=\"text-danger\">{errors.bank_acc_number}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Policy Type */}\r\n      <div className=\"form-group\">\r\n        <label>Policy Type</label>\r\n        <select\r\n          className=\"form-control\"\r\n          name=\"policy_type_id\"\r\n          value={formData.policy_type_id}\r\n          onChange={handleInputChange}\r\n        >\r\n          <option value=\"\">Select Policy Type</option>\r\n          {policyTypes.map((policy) => (\r\n            <option key={policy.id} value={policy.id}>\r\n              {policy.name}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {errors.policy_type_id && <div className=\"text-danger\">{errors.policy_type_id}</div>}\r\n      </div>\r\n\r\n      {/* PayPoint Information */}\r\n      {formData.source_type === 'paypoint' && (\r\n        <>\r\n          <div className=\"form-group\">\r\n            <label>PayPoint</label>\r\n            <select\r\n              className=\"form-control\"\r\n              name=\"paypoint_id\"\r\n              value={formData.paypoint_id}\r\n              onChange={handleInputChange}\r\n            >\r\n              <option value=\"\">Select PayPoint</option>\r\n              {paypoints.map((ppy) => (\r\n                <option key={ppy.id} value={ppy.id}>\r\n                  {ppy.name}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            {errors.paypoint_id && <div className=\"text-danger\">{errors.paypoint_id}</div>}\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label>PayPoint Branch</label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"paypoint_branch\"\r\n              value={formData.paypoint_branch}\r\n              onChange={handleInputChange}\r\n            />\r\n            {errors.paypoint_branch && <div className=\"text-danger\">{errors.paypoint_branch}</div>}\r\n          </div>\r\n        </>\r\n      )}\r\n\r\n      {/* Subsequent Payment Method */}\r\n      {formData.first_pay_with_momo && (\r\n        <div className=\"form-group\">\r\n          <label>Subsequent Payment Source Type</label>\r\n          <select\r\n            className=\"form-control\"\r\n            name=\"subsequent_pay_source_type\"\r\n            value={formData.subsequent_pay_source_type}\r\n            onChange={handleInputChange}\r\n          >\r\n            <option value=\"\">Select Subsequent Payment Method</option>\r\n            <option value=\"paypoint\">PayPoint</option>\r\n            <option value=\"bank\">Bank</option>\r\n          </select>\r\n        </div>\r\n      )}\r\n\r\n      {/* Amount */}\r\n      <div className=\"form-group\">\r\n        <label>Amount</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"form-control\"\r\n          name=\"amount\"\r\n          value={formData.amount}\r\n          onChange={handleInputChange}\r\n        />\r\n        {errors.amount && <div className=\"text-danger\">{errors.amount}</div>}\r\n      </div>\r\n\r\n      {/* Submit and Cancel buttons */}\r\n      <button type=\"submit\" className=\"btn btn-primary mt-3\">\r\n        Update Sale\r\n      </button>\r\n      <button type=\"button\" className=\"btn btn-secondary mt-3 ml-2\" onClick={onCancel}>\r\n        Cancel\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SalesEditForm;\r\n","import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, Button, Pagination, Spinner, Form, Row, Col, Modal, Badge } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrash, faSort, faSortUp, faSortDown, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport api from '../services/api';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport SalesForm from '../components/SalesForm';\r\nimport SalesEditForm from '../components/SalesEditForm';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst SalesPage = ({ showToast }) => {\r\n  const [salesRecords, setSalesRecords] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [sortConfig, setSortConfig] = useState({ key: 'created_at', direction: 'desc' });\r\n  const [page, setPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [filters, setFilters] = useState({ startDate: null, endDate: null, clientName: '', bankId: '', branchId: '' });\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [currentSale, setCurrentSale] = useState(null);\r\n  const [banks, setBanks] = useState([]);\r\n  const [branches, setBranches] = useState([]);\r\n  const [salesExecutives, setSalesExecutives] = useState([]);\r\n  const [saleToDelete, setSaleToDelete] = useState(null); // Track sale to delete\r\n\r\n  const local_user = JSON.parse(localStorage.getItem('user')); // Fetch current logged-in user\r\n  const loggedInUserName = local_user?.name; // Get logged-in user's name\r\n  const role = local_user?.role?.name; // Get logged-in user's role\r\n  const navigate = useNavigate();\r\n\r\n  // Maximum number of pages to display\r\n  const maxPageDisplay = 5;\r\n\r\n  // Function to navigate to the details page\r\n  const handleViewDetails = (saleId) => {\r\n    navigate(`/sales/${saleId}`);\r\n  };\r\n\r\n  // Fetch banks and branches data\r\n  const fetchBanksAndBranches = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/bank/');\r\n      setBanks(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching banks:', error);\r\n      showToast('danger', 'Failed to fetch banks.', 'Error');\r\n    }\r\n  }, [showToast]);\r\n\r\n  const fetchBranches = async (bankId) => {\r\n    try {\r\n      if (bankId) {\r\n        const response = await api.get('/dropdown/', {\r\n          params: { type: 'branch', bank_id: bankId },\r\n        });\r\n        setBranches(response.data);\r\n      } else {\r\n        setBranches([]);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error fetching branches:', error);\r\n      showToast('danger', 'Failed to fetch branches.', 'Error');\r\n    }\r\n  };\r\n\r\n  // Fetch sales executives\r\n  const fetchSalesExecutives = useCallback(async () => {\r\n    try {\r\n      //get the total sales executives\r\n      const restot = await api.get('/sales_executives/', {\r\n        params: {\r\n          sort_by: 'created_at',\r\n          per_page: 10,\r\n          page: 1,\r\n        },\r\n      });\r\n      const total = parseInt(restot.data.total);\r\n\r\n      //get all sales executives\r\n      const response = await api.get('/sales_executives/', {\r\n        params: {\r\n          sort_by: 'created_at',\r\n          per_page: total,\r\n          page: 1,\r\n        },\r\n      });\r\n      setSalesExecutives(Array.isArray(response.data.sales_executives) ? response.data.sales_executives : []);\r\n    } catch (error) {\r\n      console.error('Error fetching sales executives:', error);\r\n      showToast('danger', 'Failed to fetch sales executives.', 'Error');\r\n      setSalesExecutives([]);\r\n    }\r\n  }, [showToast]);\r\n\r\n  // Fetch sales records and filter based on sales manager (logged-in user)\r\n  const fetchSalesRecords = useCallback(async (currentPage, sortKey, sortDirection, filterParams) => {\r\n    setLoading(true);\r\n    try {\r\n        const res1tot = await api.get('/sales/', { params: { sort_by: 'created_at', per_page: 10, page: 1 } });\r\n        const total1 = parseInt(res1tot.data.total);\r\n\r\n        const params = {\r\n            page: currentPage,\r\n            per_page: total1,\r\n            ...filterParams,\r\n        };\r\n\r\n        if (filterParams.startDate) {\r\n            params.startDate = filterParams.startDate.toISOString().split('T')[0];\r\n        }\r\n        if (filterParams.endDate) {\r\n            params.endDate = filterParams.endDate.toISOString().split('T')[0];\r\n        }\r\n\r\n        const response = await api.get('/sales/', { params });\r\n        let salesData = response.data.sales || [];\r\n\r\n        const sortedSales = sortSalesData(salesData, sortKey, sortDirection);\r\n\r\n        // Filter sales records by manager name (case insensitive)\r\n        const filteredSales = sortedSales.filter(\r\n            (sale) => (sale.sale_manager?.name || '').toLowerCase() === (loggedInUserName || '').toLowerCase()\r\n        );\r\n\r\n        // Update sales records state\r\n        if (role === 'Sales_Manager') {\r\n            setSalesRecords(filteredSales.length > 0 ? filteredSales : []);\r\n        } else {\r\n            setSalesRecords(sortedSales);\r\n        }\r\n\r\n        setTotalPages(response.data.pages || 1);\r\n    } catch (error) {\r\n        console.error('Error fetching sales records:', error);\r\n        showToast('danger', 'Failed to fetch sales records.', 'Error');\r\n    } finally {\r\n        setLoading(false);\r\n    }\r\n  }, [showToast, loggedInUserName, role]);\r\n\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') {\r\n      direction = 'desc';\r\n    }\r\n    setSortConfig({ key, direction });\r\n    fetchSalesRecords(1, key, direction, filters); // Fetch new records with the updated sorting\r\n  };\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    if (pageNumber >= 1 && pageNumber <= totalPages) {\r\n      setPage(pageNumber);\r\n    }\r\n  };\r\n\r\n  const handleFilterChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFilters((prevFilters) => ({ ...prevFilters, [name]: value }));\r\n    if (name === 'bankId') {\r\n      fetchBranches(value);\r\n    }\r\n  };\r\n\r\n  const handleFilterSubmit = (e) => {\r\n    e.preventDefault();\r\n    setPage(1); // Reset to the first page when filters are applied\r\n    fetchSalesRecords(1, sortConfig.key, sortConfig.direction, filters);\r\n  };\r\n\r\n  const handleEdit = (sale) => {\r\n    setCurrentSale(sale);\r\n    setShowModal(true);\r\n  };\r\n\r\n  const confirmDelete = (sale) => {\r\n    setSaleToDelete(sale);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const sortSalesData = (salesData, sortKey, sortDirection) => {\r\n    return salesData.sort((a, b) => {\r\n      let aValue, bValue;\r\n\r\n      // Determine the value to sort by\r\n      if (sortKey === 'policy_type') {\r\n        aValue = a.policy_type?.name || ''; // Fallback to empty string if undefined\r\n        bValue = b.policy_type?.name || ''; // Fallback to empty string if undefined\r\n      } else if (sortKey === 'sales_manager') {\r\n        aValue = a.sale_manager?.name || ''; // Fallback to empty string if undefined\r\n        bValue = b.sale_manager?.name || ''; // Fallback to empty string if undefined\r\n      } else {\r\n        aValue = a[sortKey];\r\n        bValue = b[sortKey];\r\n      }\r\n\r\n      // Compare values based on sort direction\r\n      if (aValue < bValue) return sortDirection === 'asc' ? -1 : 1;\r\n      if (aValue > bValue) return sortDirection === 'asc' ? 1 : -1;\r\n      return 0;\r\n    });\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    if (saleToDelete) {\r\n      try {\r\n        await api.delete(`/sales/${saleToDelete.id}`);\r\n        setSalesRecords(salesRecords.filter((sale) => sale.id !== saleToDelete.id));\r\n        showToast('success', 'Sale deleted successfully.', 'Success');\r\n      } catch (error) {\r\n        console.error('Error deleting sale:', error);\r\n        showToast('danger', 'Failed to delete sale.', 'Error');\r\n      } finally {\r\n        setShowDeleteModal(false);\r\n        setSaleToDelete(null);\r\n      }\r\n    }\r\n  };\r\n\r\n  const getSortIcon = (key) => {\r\n    if (sortConfig.key === key) {\r\n      return sortConfig.direction === 'asc' ? (\r\n        <FontAwesomeIcon icon={faSortUp} />\r\n      ) : (\r\n        <FontAwesomeIcon icon={faSortDown} />\r\n      );\r\n    }\r\n    return <FontAwesomeIcon icon={faSort} />;\r\n  };\r\n\r\n  const handleFormSubmit = async (newSaleData) => {\r\n    if (currentSale) {\r\n      try {\r\n        const response = await api.put(`/sales/${currentSale.id}`, newSaleData);\r\n        setSalesRecords(\r\n          salesRecords.map((sale) =>\r\n            sale.id === currentSale.id ? { ...sale, ...response.data } : sale\r\n          )\r\n        );\r\n        showToast('success', 'Sale updated successfully.', 'Success');\r\n      } catch (error) {\r\n        console.error('Error updating sale record:', error);\r\n        showToast('danger', 'Failed to update sale.', 'Error');\r\n      }\r\n    } else {\r\n      try {\r\n        const response = await api.post('/sales/', newSaleData);\r\n        setSalesRecords([...salesRecords, response.data]);\r\n        showToast('success', 'Sale added successfully.', 'Success');\r\n      } catch (error) {\r\n        console.error('Error adding new sale record:', error);\r\n      }\r\n    }\r\n\r\n    setShowModal(false);\r\n    setCurrentSale(null);\r\n  };\r\n\r\n  // Render the status with color coding\r\n  const renderStatusBadge = (status) => {\r\n    let variant = 'secondary'; // Default color\r\n    if (status === 'submitted') {\r\n      variant = 'success'; // Green for submitted\r\n    } else if (status === 'under investigation') {\r\n      variant = 'warning'; // Yellow for under investigation\r\n    } else if (status === 'rejected') {\r\n      variant = 'danger'; // Red for rejected\r\n    }\r\n    return <Badge bg={variant} className=\"text-white\">{status}</Badge>;\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchSalesRecords(page, sortConfig.key, sortConfig.direction, filters);\r\n  }, [page, sortConfig, filters, fetchSalesRecords]);\r\n\r\n  useEffect(() => {\r\n    fetchBanksAndBranches();\r\n    fetchSalesExecutives();\r\n  }, [fetchBanksAndBranches, fetchSalesExecutives]);\r\n\r\n  const renderActions = (sale) => {\r\n    const local_user = JSON.parse(localStorage.getItem('user'));\r\n    const role_id = parseInt(local_user.role_id) || local_user.role.id;\r\n\r\n    return (\r\n      <>\r\n        <Button\r\n          variant=\"primary\"\r\n          size=\"sm\"\r\n          className=\"me-2\"\r\n          onClick={() => handleViewDetails(sale.id)}\r\n        >\r\n          <FontAwesomeIcon icon={faEye} />\r\n        </Button>\r\n        {role_id === 3 || role_id === 2 ? ( // Check if user is admin or manager\r\n          <>\r\n            <Button\r\n              variant=\"warning\"\r\n              size=\"sm\"\r\n              className=\"me-2\"\r\n              onClick={() => handleEdit(sale)}\r\n            >\r\n              <FontAwesomeIcon icon={faEdit} />\r\n            </Button>\r\n            <Button\r\n              variant=\"danger\"\r\n              size=\"sm\"\r\n              onClick={() => confirmDelete(sale)}\r\n            >\r\n              <FontAwesomeIcon icon={faTrash} />\r\n            </Button>\r\n          </>\r\n        ) : null}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderPaginationItems = () => {\r\n    const pages = [];\r\n    const startPage = Math.max(1, page - Math.floor(maxPageDisplay / 2));\r\n    const endPage = Math.min(totalPages, startPage + maxPageDisplay - 1);\r\n\r\n    for (let i = startPage; i <= endPage; i++) {\r\n      pages.push(\r\n        <Pagination.Item key={i} active={i === page} onClick={() => handlePageChange(i)}>\r\n          {i}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n    return pages;\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className=\"text-center mt-5\">\r\n        <Spinner animation=\"border\" />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // Render \"No sales keyed by manager yet\" if the user is Sales_Manager and no sales found\r\n  if (role === 'Sales_Manager' && salesRecords.length === 0) {\r\n    return (\r\n      <div className=\"container mt-5\">\r\n        <Row className=\"mb-3\">\r\n          <Col>\r\n            <h2 className=\"text-left\">Sales Records</h2>\r\n          </Col>\r\n          <Col className=\"text-right\">\r\n            <Button onClick={() => setShowModal(true)} variant=\"primary\" className=\"mb-3\">\r\n              Make Sale\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n        <h3 className=\"text-center text-muted\">No sales keyed by manager yet</h3>\r\n\r\n        <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{currentSale ? 'Edit Sale' : 'Add New Sale'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentSale ? (\r\n            <SalesEditForm\r\n              saleData={currentSale}\r\n              onCancel={() => setShowModal(false)}\r\n              onSubmit={handleFormSubmit}\r\n            />\r\n          ) : (\r\n            <SalesForm\r\n              onSubmit={handleFormSubmit}\r\n              onCancel={() => setShowModal(false)}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <h2 className=\"text-left\">Sales Records</h2>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button onClick={() => setShowModal(true)} variant=\"primary\" className=\"mb-3\">\r\n            Make Sale\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Form onSubmit={handleFilterSubmit} className=\"mb-4\">\r\n        <Row>\r\n          <Col>\r\n            <Form.Group controlId=\"filterStartDate\">\r\n              <Form.Label>Start Date</Form.Label>\r\n              <DatePicker\r\n                selected={filters.startDate}\r\n                onChange={(date) => setFilters((prev) => ({ ...prev, startDate: date }))}\r\n                className=\"form-control\"\r\n                isClearable\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterEndDate\">\r\n              <Form.Label>End Date</Form.Label>\r\n              <DatePicker\r\n                selected={filters.endDate}\r\n                onChange={(date) => setFilters((prev) => ({ ...prev, endDate: date }))}\r\n                className=\"form-control\"\r\n                isClearable\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterClientName\">\r\n              <Form.Label>Client Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                name=\"clientName\"\r\n                value={filters.clientName}\r\n                onChange={handleFilterChange}\r\n                placeholder=\"Enter client name\"\r\n              />\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterBank\">\r\n              <Form.Label>Bank</Form.Label>\r\n              <Form.Control as=\"select\" name=\"bankId\" value={filters.bankId} onChange={handleFilterChange}>\r\n                <option value=\"\">Select Bank</option>\r\n                {banks.map((bank) => (\r\n                  <option key={bank.id} value={bank.id}>\r\n                    {bank.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col>\r\n            <Form.Group controlId=\"filterBranch\">\r\n              <Form.Label>Branch</Form.Label>\r\n              <Form.Control as=\"select\" name=\"branchId\" value={filters.branchId} onChange={handleFilterChange}>\r\n                <option value=\"\">Select Branch</option>\r\n                {branches.map((branch) => (\r\n                  <option key={branch.id} value={branch.id}>\r\n                    {branch.name}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n          </Col>\r\n          <Col className=\"align-self-end\">\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Filter\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\r\n      <Table striped bordered hover responsive className=\"mt-3\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th onClick={() => handleSort('client_name')}>\r\n              Client Name {getSortIcon('client_name')}\r\n            </th>\r\n            <th onClick={() => handleSort('amount')}>\r\n              Amount {getSortIcon('amount')}\r\n            </th>\r\n            <th onClick={() => handleSort('policy_type')}>\r\n              Policy Type {getSortIcon('policy_type')}\r\n            </th>\r\n            <th onClick={() => handleSort('serial_number')}>\r\n              Serial Number {getSortIcon('serial_number')}\r\n            </th>\r\n            <th onClick={() => handleSort('sales_manager')}>\r\n              Sales Manager {getSortIcon('sales_manager')}\r\n            </th>\r\n            <th onClick={() => handleSort('sales_executive_id')}>\r\n              Sales Executive {getSortIcon('sales_executive_id')}\r\n            </th>\r\n            <th onClick={() => handleSort('source_type')}>\r\n              Source Type {getSortIcon('source_type')}\r\n            </th>\r\n            <th onClick={() => handleSort('status')}>\r\n              Status {getSortIcon('status')}\r\n            </th>\r\n            <th onClick={() => handleSort('created_at')}>\r\n              Date {getSortIcon('created_at')}\r\n            </th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {salesRecords.length > 0 ? (\r\n            salesRecords.map((sale, index) => (\r\n              <tr key={sale.id}>\r\n                <td>{(page - 1) * 10 + index + 1}</td>\r\n                <td>{sale.client_name}</td>\r\n                <td>{sale.amount}</td>\r\n                <td>{sale.policy_type?.name || 'N/A'}</td>\r\n                <td>{sale.serial_number}</td>\r\n                <td>{sale.sale_manager?.name || 'N/A'}</td>\r\n                <td>\r\n                  {\r\n                    salesExecutives.find(executive => executive.id === sale.sales_executive_id)?.name || sale.sales_executive_id\r\n                  }\r\n                </td>\r\n                <td>{sale.source_type}</td>\r\n                <td>{renderStatusBadge(sale.status)}</td>\r\n                <td>{new Date(sale.created_at).toLocaleDateString()}</td>\r\n                <td>{renderActions(sale)}</td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"11\" className=\"text-center\">\r\n                No sales records available.\r\n              </td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n\r\n      <Pagination className=\"justify-content-center mt-4\">\r\n        <Pagination.First onClick={() => handlePageChange(1)} disabled={page === 1} />\r\n        <Pagination.Prev onClick={() => handlePageChange(page - 1)} disabled={page === 1} />\r\n        {renderPaginationItems()}\r\n        <Pagination.Next onClick={() => handlePageChange(page + 1)} disabled={page === totalPages} />\r\n        <Pagination.Last onClick={() => handlePageChange(totalPages)} disabled={page === totalPages} />\r\n      </Pagination>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this sale record?\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>Cancel</Button>\r\n          <Button variant=\"danger\" onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Sales Modal for Create/Edit */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)} size=\"lg\">\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{currentSale ? 'Edit Sale' : 'Add New Sale'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentSale ? (\r\n            <SalesEditForm\r\n              saleData={currentSale}\r\n              onCancel={() => setShowModal(false)}\r\n              onSubmit={handleFormSubmit}\r\n            />\r\n          ) : (\r\n            <SalesForm\r\n              onSubmit={handleFormSubmit}\r\n              onCancel={() => setShowModal(false)}\r\n            />\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesPage;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Badge = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  bg = 'primary',\n  pill = false,\n  text,\n  className,\n  as: Component = 'span',\n  ...props\n}, ref) => {\n  const prefix = useBootstrapPrefix(bsPrefix, 'badge');\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, prefix, pill && `rounded-pill`, text && `text-${text}`, bg && `bg-${bg}`)\n  });\n});\nBadge.displayName = 'Badge';\nexport default Badge;","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});"],"names":["_ref","saleData","onSubmit","onCancel","formData","setFormData","useState","sale_manager_id","sales_executive_id","client_name","client_id_no","client_phone","serial_number","collection_platform","source_type","momo_reference_number","momo_transaction_id","first_pay_with_momo","subsequent_pay_source_type","bank_id","bank_branch_id","bank_acc_number","paypoint_id","paypoint_branch","staff_id","policy_type_id","amount","customer_called","geolocation_latitude","geolocation_longitude","momo_first_premium","is_deleted","status","errors","setErrors","salesExecutives","setSalesExecutives","impactProducts","setImpactProducts","banks","setBanks","branches","setBranches","paypoints","setPaypoints","salesManagers","setSalesManagers","isGeolocationEnabled","setIsGeolocationEnabled","useEffect","fetchBanks","fetchImpactProducts","fetchSalesManagers","fetchPaypoints","navigator","geolocation","getCurrentPosition","position","prevData","coords","latitude","longitude","toast","error","async","response","api","get","params","type","role_id","data","products","handleInputChange","e","name","value","checked","target","manager_id","managerId","fetchSalesExecutives","bankId","fetchBranches","isMomo","_jsxs","preventDefault","validateForm","newErrors","length","bankName","includes","Object","keys","sanitizedData","parseInt","parseFloat","undefined","forEach","key","post","headers","success","console","className","children","_jsx","onChange","disabled","map","sm","id","se","_Fragment","htmlFor","ppy","bank","branch","product","style","color","fontSize","onClick","_saleData$sale_manage","_saleData$bank","_saleData$bank_branch","_saleData$paypoint","_saleData$policy_type","sale_manager","bank_branch","paypoint","policy_type","policyTypes","setPolicyTypes","fetchDropdownData","managerResponse","bankResponse","paypointResponse","policyResponse","Promise","all","put","policy","_local_user$role","showToast","salesRecords","setSalesRecords","loading","setLoading","sortConfig","setSortConfig","direction","page","setPage","totalPages","setTotalPages","filters","setFilters","startDate","endDate","clientName","branchId","showModal","setShowModal","showDeleteModal","setShowDeleteModal","currentSale","setCurrentSale","saleToDelete","setSaleToDelete","local_user","JSON","parse","localStorage","getItem","loggedInUserName","role","navigate","useNavigate","fetchBanksAndBranches","useCallback","restot","sort_by","per_page","total","Array","isArray","sales_executives","fetchSalesRecords","currentPage","sortKey","sortDirection","filterParams","res1tot","toISOString","split","salesData","sales","sortedSales","sortSalesData","filteredSales","filter","sale","_sale$sale_manager","toLowerCase","pages","handleSort","handlePageChange","pageNumber","handleFilterChange","prevFilters","sort","a","b","aValue","bValue","_a$policy_type","_b$policy_type","_a$sale_manager","_b$sale_manager","getSortIcon","FontAwesomeIcon","icon","faSortUp","faSortDown","faSort","handleFormSubmit","newSaleData","renderStatusBadge","variant","Badge","bg","renderActions","Button","size","handleViewDetails","saleId","faEye","handleEdit","faEdit","confirmDelete","faTrash","Spinner","animation","Row","Col","Modal","show","onHide","Header","closeButton","Title","Body","SalesEditForm","SalesForm","Form","Group","controlId","Label","DatePicker","selected","date","prev","isClearable","Control","placeholder","as","Table","striped","bordered","hover","responsive","index","_sale$policy_type","_sale$sale_manager2","_salesExecutives$find","find","executive","Date","created_at","toLocaleDateString","colSpan","Pagination","First","Prev","renderPaginationItems","startPage","Math","max","floor","maxPageDisplay","endPage","min","i","push","Item","active","Next","Last","Footer","delete","React","ref","bsPrefix","pill","text","Component","props","prefix","useBootstrapPrefix","classNames","displayName","WeakMap","_excluded","Anchor","onKeyDown","r","t","n","hasOwnProperty","call","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","assign","tagName","handleKeyDown","useEventCallback","href","trim","PageItem","activeLabel","linkStyle","linkClassName","createButton","defaultValue","label","arguments","_ref2","Ellipsis","decoratedBsPrefix"],"sourceRoot":""}