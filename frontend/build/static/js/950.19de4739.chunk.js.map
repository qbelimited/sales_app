{"version":3,"file":"static/js/950.19de4739.chunk.js","mappings":"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","sources":["pages/InceptedSalesPage.js","../node_modules/file-saver/src/FileSaver.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Modal, Button, Table, Spinner, Form, Alert } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt, faPlus, faFileDownload, faFileUpload } from '@fortawesome/free-solid-svg-icons';\r\nimport api from '../services/api';\r\nimport { saveAs } from 'file-saver';\r\n\r\nconst InceptionsPage = ({ showToast }) => {\r\n  const [inceptions, setInceptions] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentInception, setCurrentInception] = useState(null);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showUploadModal, setShowUploadModal] = useState(false);\r\n  const [sales, setSales] = useState([]);\r\n  const [loadingSubmit, setLoadingSubmit] = useState(false);\r\n  const [file, setFile] = useState(null);\r\n  const [uploadLoading, setUploadLoading] = useState(false);\r\n\r\n  // Fetch sales for the dropdown\r\n  const fetchSales = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/sales/');\r\n      setSales(response.data.sales);\r\n    } catch (err) {\r\n      console.error('Error fetching sales:', err);\r\n      showToast('danger', 'Failed to load sales.', 'Error');\r\n    }\r\n  }, [showToast]);\r\n\r\n  const fetchInceptions = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.get('/inceptions/');\r\n      setInceptions(response.data);\r\n    } catch (err) {\r\n      console.error('Error fetching inceptions:', err);\r\n      setError('Failed to load inceptions.');\r\n      showToast('danger', 'Failed to load inceptions.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showToast]);\r\n\r\n  useEffect(() => {\r\n    fetchInceptions();\r\n    fetchSales();\r\n  }, [fetchInceptions, fetchSales]);\r\n\r\n  const handleShowAddModal = () => {\r\n    setCurrentInception(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleCloseAddModal = () => {\r\n    setShowAddModal(false);\r\n  };\r\n\r\n  const handleShowEditModal = (inception) => {\r\n    setCurrentInception(inception);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    setCurrentInception(null);\r\n    setShowEditModal(false);\r\n  };\r\n\r\n  const handleShowDeleteModal = (inception) => {\r\n    setCurrentInception(inception);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleCloseDeleteModal = () => {\r\n    setCurrentInception(null);\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  const handleShowUploadModal = () => {\r\n    setShowUploadModal(true);\r\n  };\r\n\r\n  const handleCloseUploadModal = () => {\r\n    setFile(null);\r\n    setShowUploadModal(false);\r\n  };\r\n\r\n  const validateData = (data) => {\r\n    if (data.amount_received <= 0) {\r\n      showToast('danger', 'Amount Received must be a positive number.', 'Error');\r\n      return false;\r\n    }\r\n    return true;\r\n  };\r\n\r\n  const isDuplicateSaleId = (saleId) => {\r\n    return inceptions.some(inception => inception.sale_id === saleId);\r\n  };\r\n\r\n  const addInception = async (data) => {\r\n    if (!validateData(data) || isDuplicateSaleId(data.sale_id)) {\r\n      if (isDuplicateSaleId(data.sale_id)) {\r\n        showToast('danger', 'Sale ID already exists.', 'Error');\r\n      }\r\n      return;\r\n    }\r\n    setLoadingSubmit(true);\r\n    try {\r\n      await api.post('/inceptions/', data);\r\n      showToast('success', 'Inception created successfully.', 'Success');\r\n      fetchInceptions();\r\n      handleCloseAddModal();\r\n    } catch (err) {\r\n      console.error('Error adding inception:', err);\r\n      showToast('danger', 'Failed to save inception.', 'Error');\r\n    } finally {\r\n      setLoadingSubmit(false);\r\n    }\r\n  };\r\n\r\n  const editInception = async (data) => {\r\n    if (!validateData(data)) return;\r\n    setLoadingSubmit(true);\r\n    try {\r\n      await api.put(`/inceptions/${currentInception.id}`, data);\r\n      showToast('success', 'Inception updated successfully.', 'Success');\r\n      fetchInceptions();\r\n      handleCloseEditModal();\r\n    } catch (err) {\r\n      console.error('Error updating inception:', err);\r\n      showToast('danger', 'Failed to update inception.', 'Error');\r\n    } finally {\r\n      setLoadingSubmit(false);\r\n    }\r\n  };\r\n\r\n  const deleteInception = async () => {\r\n    setLoadingSubmit(true);\r\n    try {\r\n      await api.delete(`/inceptions/${currentInception.id}`);\r\n      showToast('success', 'Inception deleted successfully.', 'Success');\r\n      fetchInceptions();\r\n      handleCloseDeleteModal();\r\n    } catch (err) {\r\n      console.error('Error deleting inception:', err);\r\n      showToast('danger', 'Failed to delete inception.', 'Error');\r\n    } finally {\r\n      setLoadingSubmit(false);\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = {\r\n      sale_id: parseInt(formData.get('sale_id'), 10),\r\n      amount_received: parseFloat(formData.get('amount_received')),\r\n      received_at: new Date(formData.get('received_at')).toISOString(),\r\n      description: formData.get('description'),\r\n    };\r\n\r\n    if (currentInception) {\r\n      editInception(data);\r\n    } else {\r\n      addInception(data);\r\n    }\r\n  };\r\n\r\n  const downloadTemplate = () => {\r\n    const templateData = [\r\n      ['Sale ID', 'Amount Received', 'Received At', 'Description'],\r\n      ['', '', 'dd/mm/yyyy', '']\r\n    ];\r\n    const csvContent = templateData.map(row => row.join(',')).join('\\n');\r\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8;' });\r\n    saveAs(blob, 'inception_template.csv');\r\n  };\r\n\r\n  const uploadCSV = async () => {\r\n    if (!file) {\r\n      console.error('No file selected for upload');\r\n      showToast('danger', 'No file selected for upload.', 'Error');\r\n      return;\r\n    }\r\n\r\n    setUploadLoading(true);\r\n    const reader = new FileReader();\r\n    reader.onload = async (event) => {\r\n      const csvData = event.target.result;\r\n      const rows = csvData.split('\\n').slice(1); // Skip header row\r\n\r\n      const inceptionsToAdd = [];\r\n      for (const row of rows) {\r\n        const trimmedRow = row.trim();\r\n        if (!trimmedRow) continue;\r\n\r\n        const columns = trimmedRow.split(',');\r\n        if (columns.length < 4) {\r\n          console.error(`Row does not contain enough columns: ${trimmedRow}`);\r\n          showToast('danger', 'Row does not contain enough columns.', 'Error');\r\n          continue;\r\n        }\r\n\r\n        const [sale_id, amount_received, received_at, description] = columns;\r\n\r\n        // Date parsing logic\r\n        const dateParts = received_at.split('/');\r\n        if (dateParts.length !== 3) {\r\n          console.error(`Received At date is not valid: ${received_at}`);\r\n          showToast('danger', 'Received At date is not valid.', 'Error');\r\n          continue;\r\n        }\r\n\r\n        // Construct the date in the format YYYY-MM-DD\r\n        const day = dateParts[0].padStart(2, '0'); // Pad day with leading zero if needed\r\n        const month = dateParts[1].padStart(2, '0'); // Pad month with leading zero if needed\r\n        const year = dateParts[2];\r\n        const formattedDateString = `${year}-${month}-${day}T00:00:00`; // Use T00:00:00 for a full date-time string\r\n        const formattedDate = new Date(formattedDateString);\r\n        if (isNaN(formattedDate.getTime())) {\r\n          console.error(`Invalid date format: ${received_at}`);\r\n          showToast('danger', 'Invalid date format in Received At.', 'Error');\r\n          continue;\r\n        }\r\n\r\n        const saleId = parseInt(sale_id, 10);\r\n        // Check for duplicates\r\n        if (isDuplicateSaleId(saleId)) {\r\n          console.error(`Duplicate Sale ID: ${saleId}`);\r\n          showToast('danger', `Duplicate Sale ID: ${saleId}`, 'Error');\r\n          continue;\r\n        }\r\n\r\n        inceptionsToAdd.push({\r\n          sale_id: saleId,\r\n          amount_received: parseFloat(amount_received),\r\n          received_at: formattedDate.toISOString(),\r\n          description: description.trim(),\r\n        });\r\n      }\r\n\r\n      for (const inception of inceptionsToAdd) {\r\n        await addInception(inception);\r\n      }\r\n      showToast('success', 'Inceptions uploaded successfully.', 'Success');\r\n      handleCloseUploadModal();\r\n    };\r\n\r\n    reader.onerror = (error) => {\r\n      console.error('Error reading file:', error);\r\n      showToast('danger', 'Failed to read the CSV file.', 'Error');\r\n    };\r\n\r\n    reader.readAsText(file);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Manage Inceptions</h1>\r\n      <Alert variant=\"info\" className=\"text-center\">\r\n        Please download the template file, fill it out, and upload it to add inceptions.\r\n      </Alert>\r\n      {loading && <Spinner animation=\"border\" variant=\"primary\" />}\r\n      {error && <Alert variant=\"danger\">{error}</Alert>}\r\n\r\n      <Button variant=\"primary\" onClick={handleShowAddModal} className=\"mb-3\">\r\n        <FontAwesomeIcon icon={faPlus} aria-hidden=\"true\" /> Add Inception\r\n      </Button>\r\n      <Button variant=\"info\" onClick={downloadTemplate} className=\"mb-3 mx-2\" aria-label=\"Download Template\">\r\n        <FontAwesomeIcon icon={faFileDownload} aria-hidden=\"true\" /> Download Template\r\n      </Button>\r\n      <Button variant=\"secondary\" onClick={handleShowUploadModal} className=\"mb-3 mx-2\" aria-label=\"Upload CSV\">\r\n        <FontAwesomeIcon icon={faFileUpload} aria-hidden=\"true\" /> Upload CSV\r\n      </Button>\r\n\r\n      <Table striped bordered hover responsive className=\"mt-3\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Sale ID</th>\r\n            <th>Amount Received</th>\r\n            <th>Received At</th>\r\n            <th>Description</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {inceptions.map(inception => (\r\n            <tr key={inception.id}>\r\n              <td>{inception.id}</td>\r\n              <td>{inception.sale_id}</td>\r\n              <td>{inception.amount_received.toFixed(2)}</td>\r\n              <td>{new Date(inception.received_at).toLocaleString()}</td>\r\n              <td>{inception.description}</td>\r\n              <td>\r\n                <Button variant=\"warning\" onClick={() => handleShowEditModal(inception)} aria-label={`Edit inception ${inception.id}`}>\r\n                  <FontAwesomeIcon icon={faEdit} aria-hidden=\"true\" /> Edit\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={() => handleShowDeleteModal(inception)} aria-label={`Delete inception ${inception.id}`}>\r\n                  <FontAwesomeIcon icon={faTrashAlt} aria-hidden=\"true\" /> Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Add Inception Modal */}\r\n      <Modal show={showAddModal} onHide={handleCloseAddModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Inception</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formSaleId\">\r\n              <Form.Label>Sale ID</Form.Label>\r\n              <Form.Control as=\"select\" name=\"sale_id\" required>\r\n                <option value=\"\">Select Sale</option>\r\n                {sales.map(sale => (\r\n                  <option key={sale.id} value={sale.id}>\r\n                    {sale.id} - {sale.serial_number} - {sale.policy_type?.name || 'N/A'} - {sale.amount}\r\n                  </option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formAmountReceived\">\r\n              <Form.Label>Amount Received</Form.Label>\r\n              <Form.Control type=\"number\" name=\"amount_received\" required min=\"0\" step=\"0.01\" />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formReceivedAt\">\r\n              <Form.Label>Received At</Form.Label>\r\n              <Form.Control type=\"datetime-local\" name=\"received_at\" required />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formDescription\">\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control type=\"text\" name=\"description\" required />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\" disabled={loadingSubmit}>\r\n              {loadingSubmit ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : 'Create'}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Edit Inception Modal */}\r\n      <Modal show={showEditModal} onHide={handleCloseEditModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Inception</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentInception && (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"formSaleId\">\r\n                <Form.Label>Sale ID</Form.Label>\r\n                <Form.Control as=\"select\" name=\"sale_id\" defaultValue={currentInception.sale_id} required>\r\n                  {sales.map(sale => (\r\n                    <option key={sale.id} value={sale.id}>\r\n                      {sale.id} - {sale.serial_number} - {sale.policy_type?.name || 'N/A'} - {sale.amount}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formAmountReceived\">\r\n                <Form.Label>Amount Received</Form.Label>\r\n                <Form.Control type=\"number\" name=\"amount_received\" defaultValue={currentInception.amount_received} required min=\"0\" step=\"0.01\" />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formReceivedAt\">\r\n                <Form.Label>Received At</Form.Label>\r\n                <Form.Control type=\"datetime-local\" name=\"received_at\" defaultValue={new Date(currentInception.received_at).toISOString().slice(0, 16)} required />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formDescription\">\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control type=\"text\" name=\"description\" defaultValue={currentInception.description} required />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\" disabled={loadingSubmit}>\r\n                {loadingSubmit ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : 'Update'}\r\n              </Button>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteModal} onHide={handleCloseDeleteModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to delete this inception? This action cannot be undone.</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>Cancel</Button>\r\n          <Button variant=\"danger\" onClick={deleteInception} disabled={loadingSubmit}>\r\n            {loadingSubmit ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : 'Delete'}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Upload CSV Modal */}\r\n      <Modal show={showUploadModal} onHide={handleCloseUploadModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Upload CSV</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group controlId=\"formFile\">\r\n              <Form.Label>Choose CSV File</Form.Label>\r\n              <Form.Control\r\n                type=\"file\"\r\n                accept=\".csv\"\r\n                onChange={(e) => setFile(e.target.files[0])}\r\n                required\r\n                aria-label=\"Choose CSV file\"\r\n              />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" onClick={uploadCSV} disabled={uploadLoading}>\r\n              {uploadLoading ? <Spinner as=\"span\" animation=\"border\" size=\"sm\" /> : 'Upload'}\r\n            </Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default InceptionsPage;\r\n","/*\n* FileSaver.js\n* A saveAs() FileSaver implementation.\n*\n* By Eli Grey, http://eligrey.com\n*\n* License : https://github.com/eligrey/FileSaver.js/blob/master/LICENSE.md (MIT)\n* source  : http://purl.eligrey.com/github/FileSaver.js\n*/\n\n// The one and only way of getting global scope in all environments\n// https://stackoverflow.com/q/3277182/1008999\nvar _global = typeof window === 'object' && window.window === window\n  ? window : typeof self === 'object' && self.self === self\n  ? self : typeof global === 'object' && global.global === global\n  ? global\n  : this\n\nfunction bom (blob, opts) {\n  if (typeof opts === 'undefined') opts = { autoBom: false }\n  else if (typeof opts !== 'object') {\n    console.warn('Deprecated: Expected third argument to be a object')\n    opts = { autoBom: !opts }\n  }\n\n  // prepend BOM for UTF-8 XML and text/* types (including HTML)\n  // note: your browser will automatically convert UTF-16 U+FEFF to EF BB BF\n  if (opts.autoBom && /^\\s*(?:text\\/\\S*|application\\/xml|\\S*\\/\\S*\\+xml)\\s*;.*charset\\s*=\\s*utf-8/i.test(blob.type)) {\n    return new Blob([String.fromCharCode(0xFEFF), blob], { type: blob.type })\n  }\n  return blob\n}\n\nfunction download (url, name, opts) {\n  var xhr = new XMLHttpRequest()\n  xhr.open('GET', url)\n  xhr.responseType = 'blob'\n  xhr.onload = function () {\n    saveAs(xhr.response, name, opts)\n  }\n  xhr.onerror = function () {\n    console.error('could not download file')\n  }\n  xhr.send()\n}\n\nfunction corsEnabled (url) {\n  var xhr = new XMLHttpRequest()\n  // use sync to avoid popup blocker\n  xhr.open('HEAD', url, false)\n  try {\n    xhr.send()\n  } catch (e) {}\n  return xhr.status >= 200 && xhr.status <= 299\n}\n\n// `a.click()` doesn't work for all browsers (#465)\nfunction click (node) {\n  try {\n    node.dispatchEvent(new MouseEvent('click'))\n  } catch (e) {\n    var evt = document.createEvent('MouseEvents')\n    evt.initMouseEvent('click', true, true, window, 0, 0, 0, 80,\n                          20, false, false, false, false, 0, null)\n    node.dispatchEvent(evt)\n  }\n}\n\n// Detect WebView inside a native macOS app by ruling out all browsers\n// We just need to check for 'Safari' because all other browsers (besides Firefox) include that too\n// https://www.whatismybrowser.com/guides/the-latest-user-agent/macos\nvar isMacOSWebView = _global.navigator && /Macintosh/.test(navigator.userAgent) && /AppleWebKit/.test(navigator.userAgent) && !/Safari/.test(navigator.userAgent)\n\nvar saveAs = _global.saveAs || (\n  // probably in some web worker\n  (typeof window !== 'object' || window !== _global)\n    ? function saveAs () { /* noop */ }\n\n  // Use download attribute first if possible (#193 Lumia mobile) unless this is a macOS WebView\n  : ('download' in HTMLAnchorElement.prototype && !isMacOSWebView)\n  ? function saveAs (blob, name, opts) {\n    var URL = _global.URL || _global.webkitURL\n    var a = document.createElement('a')\n    name = name || blob.name || 'download'\n\n    a.download = name\n    a.rel = 'noopener' // tabnabbing\n\n    // TODO: detect chrome extensions & packaged apps\n    // a.target = '_blank'\n\n    if (typeof blob === 'string') {\n      // Support regular links\n      a.href = blob\n      if (a.origin !== location.origin) {\n        corsEnabled(a.href)\n          ? download(blob, name, opts)\n          : click(a, a.target = '_blank')\n      } else {\n        click(a)\n      }\n    } else {\n      // Support blobs\n      a.href = URL.createObjectURL(blob)\n      setTimeout(function () { URL.revokeObjectURL(a.href) }, 4E4) // 40s\n      setTimeout(function () { click(a) }, 0)\n    }\n  }\n\n  // Use msSaveOrOpenBlob as a second approach\n  : 'msSaveOrOpenBlob' in navigator\n  ? function saveAs (blob, name, opts) {\n    name = name || blob.name || 'download'\n\n    if (typeof blob === 'string') {\n      if (corsEnabled(blob)) {\n        download(blob, name, opts)\n      } else {\n        var a = document.createElement('a')\n        a.href = blob\n        a.target = '_blank'\n        setTimeout(function () { click(a) })\n      }\n    } else {\n      navigator.msSaveOrOpenBlob(bom(blob, opts), name)\n    }\n  }\n\n  // Fallback to using FileReader and a popup\n  : function saveAs (blob, name, opts, popup) {\n    // Open a popup immediately do go around popup blocker\n    // Mostly only available on user interaction and the fileReader is async so...\n    popup = popup || open('', '_blank')\n    if (popup) {\n      popup.document.title =\n      popup.document.body.innerText = 'downloading...'\n    }\n\n    if (typeof blob === 'string') return download(blob, name, opts)\n\n    var force = blob.type === 'application/octet-stream'\n    var isSafari = /constructor/i.test(_global.HTMLElement) || _global.safari\n    var isChromeIOS = /CriOS\\/[\\d]+/.test(navigator.userAgent)\n\n    if ((isChromeIOS || (force && isSafari) || isMacOSWebView) && typeof FileReader !== 'undefined') {\n      // Safari doesn't allow downloading of blob URLs\n      var reader = new FileReader()\n      reader.onloadend = function () {\n        var url = reader.result\n        url = isChromeIOS ? url : url.replace(/^data:[^;]*;/, 'data:attachment/file;')\n        if (popup) popup.location.href = url\n        else location = url\n        popup = null // reverse-tabnabbing #460\n      }\n      reader.readAsDataURL(blob)\n    } else {\n      var URL = _global.URL || _global.webkitURL\n      var url = URL.createObjectURL(blob)\n      if (popup) popup.location = url\n      else location.href = url\n      popup = null // reverse-tabnabbing #460\n      setTimeout(function () { URL.revokeObjectURL(url) }, 4E4) // 40s\n    }\n  }\n)\n\n_global.saveAs = saveAs.saveAs = saveAs\n\nif (typeof module !== 'undefined') {\n  module.exports = saveAs;\n}\n"],"names":["_ref","showToast","inceptions","setInceptions","useState","loading","setLoading","error","setError","currentInception","setCurrentInception","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","showUploadModal","setShowUploadModal","sales","setSales","loadingSubmit","setLoadingSubmit","file","setFile","uploadLoading","setUploadLoading","fetchSales","useCallback","async","response","api","get","data","err","console","fetchInceptions","useEffect","handleCloseAddModal","handleCloseEditModal","handleCloseDeleteModal","handleCloseUploadModal","validateData","amount_received","isDuplicateSaleId","saleId","some","inception","sale_id","addInception","post","handleSubmit","e","preventDefault","formData","FormData","target","parseInt","parseFloat","received_at","Date","toISOString","description","put","id","editInception","_jsxs","className","children","_jsx","Alert","variant","Spinner","animation","Button","onClick","handleShowAddModal","FontAwesomeIcon","icon","faPlus","downloadTemplate","csvContent","map","row","join","blob","Blob","type","saveAs","faFileDownload","handleShowUploadModal","faFileUpload","Table","striped","bordered","hover","responsive","toFixed","toLocaleString","handleShowEditModal","faEdit","handleShowDeleteModal","faTrashAlt","Modal","show","onHide","Header","closeButton","Title","Body","Form","onSubmit","Group","controlId","Label","Control","as","name","required","value","sale","_sale$policy_type","serial_number","policy_type","amount","min","step","disabled","size","defaultValue","_sale$policy_type2","slice","Footer","delete","accept","onChange","files","reader","FileReader","onload","rows","event","result","split","inceptionsToAdd","trimmedRow","trim","columns","length","dateParts","day","padStart","month","year","formattedDate","isNaN","getTime","push","onerror","readAsText","b","a","autoBom","warn","test","c","d","XMLHttpRequest","open","responseType","g","send","status","dispatchEvent","MouseEvent","document","createEvent","initMouseEvent","window","f","self","global","navigator","userAgent","HTMLAnchorElement","prototype","h","i","URL","webkitURL","j","createElement","download","rel","href","origin","location","createObjectURL","setTimeout","revokeObjectURL","msSaveOrOpenBlob","title","body","innerText","HTMLElement","safari","k","onloadend","replace","readAsDataURL","l","m","module","exports"],"sourceRoot":""}