{"version":3,"file":"static/js/897.56bc637d.chunk.js","mappings":"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","sources":["pages/SalesTargetPage.js","../node_modules/@restart/hooks/esm/useResizeObserver.js","../node_modules/@restart/ui/esm/Anchor.js","../node_modules/react-bootstrap/esm/PageItem.js","../node_modules/react-bootstrap/esm/Pagination.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Modal, Button, Table, Pagination, Form, Spinner } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt, faPlus } from '@fortawesome/free-solid-svg-icons';\r\nimport api from '../services/api';\r\n\r\nconst SalesTargetPage = ({ showToast }) => {\r\n  const [salesTargets, setSalesTargets] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentTarget, setCurrentTarget] = useState(null);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [targetToDelete, setTargetToDelete] = useState(null);\r\n  const [showPastTargets, setShowPastTargets] = useState(false);\r\n\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const itemsPerPage = 10;\r\n  const [totalRunningTargets, setTotalRunningTargets] = useState(0);\r\n  const [salesManagers, setSalesManagers] = useState([]);\r\n\r\n  // Filter state\r\n  const [selectedManager, setSelectedManager] = useState('');\r\n  const [criteriaTypes, setCriteriaTypes] = useState([]);\r\n  const [criteriaValues, setCriteriaValues] = useState([]);\r\n  const [customCriteriaType, setCustomCriteriaType] = useState('');\r\n  const [customCriteriaValue, setCustomCriteriaValue] = useState('');\r\n  const [selectedCriteriaType, setSelectedCriteriaType] = useState('');\r\n  const [selectedCriteriaValue, setSelectedCriteriaValue] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n\r\n  const local_user = JSON.parse(localStorage.getItem('user'));\r\n  const role_id = parseInt(local_user?.role_id) || local_user?.role?.id;\r\n  const userId = local_user?.id;\r\n\r\n  const fetchSalesManagers = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'users_with_roles', role_id: 4 },\r\n      });\r\n      setSalesManagers(response.data);\r\n    } catch (error) {\r\n      console.error('Error fetching sales managers:', error);\r\n      showToast('danger', 'Failed to fetch sales managers.', 'Error');\r\n    }\r\n  }, [showToast]);\r\n\r\n  const fetchSalesTargets = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n\r\n    try {\r\n      const res_tot = await api.get('/sales_target/?sort_by=created_at&per_page=10&page=1');\r\n      const total_item = parseInt(res_tot.data.total) || res_tot.data.total;\r\n      const response = await api.get(`/sales_target/?sort_by=created_at&per_page=${total_item}&page=1`);\r\n      const targets = Array.isArray(response.data.sales_targets) ? response.data.sales_targets : [];\r\n      const runningtargets = targets.filter(target => target.is_active).length;\r\n\r\n      // Filter targets based on user role\r\n      const filteredTargets = role_id === 4\r\n        ? targets.filter(target => target.sales_manager_id === userId)\r\n        : targets;\r\n\r\n      const types = [...new Set(targets.map(target => target.target_criteria_type))];\r\n      const values = [...new Set(targets.map(target => target.target_criteria_value))];\r\n      setCriteriaTypes(types);\r\n      setCriteriaValues(values);\r\n\r\n      const additionalFilteredTargets = filteredTargets.filter(target => {\r\n        const matchesManager = selectedManager ? target.sales_manager_id === parseInt(selectedManager, 10) : true;\r\n        const matchesCriteriaType = selectedCriteriaType ? target.target_criteria_type === selectedCriteriaType : true;\r\n        const matchesCriteriaValue = selectedCriteriaValue ? target.target_criteria_value === selectedCriteriaValue : true;\r\n        const matchesDate = (startDate && endDate) ?\r\n          new Date(target.period_start).toISOString().slice(0, 10) >= startDate &&\r\n          new Date(target.period_end).toISOString().slice(0, 10) <= endDate : true;\r\n\r\n        return matchesManager && matchesCriteriaType && matchesCriteriaValue && matchesDate;\r\n      });\r\n\r\n      setSalesTargets(additionalFilteredTargets);\r\n      setTotalPages(Math.ceil(additionalFilteredTargets.length / itemsPerPage));\r\n      setTotalRunningTargets(runningtargets);\r\n    } catch (err) {\r\n      console.error('Error fetching sales targets:', err);\r\n      setError('Failed to load sales targets.');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [role_id, userId, selectedManager, selectedCriteriaType, selectedCriteriaValue, startDate, endDate, itemsPerPage]);\r\n\r\n  useEffect(() => {\r\n    fetchSalesManagers();\r\n    fetchSalesTargets();\r\n  }, [fetchSalesManagers, fetchSalesTargets]);\r\n\r\n  const handleShowAddModal = () => {\r\n    setCurrentTarget(null);\r\n    setShowAddModal(true);\r\n    setCustomCriteriaType('');\r\n    setCustomCriteriaValue('');\r\n  };\r\n\r\n  const handleCloseAddModal = () => {\r\n    setShowAddModal(false);\r\n    setCustomCriteriaType('');\r\n    setCustomCriteriaValue('');\r\n  };\r\n\r\n  const handleShowEditModal = (target) => {\r\n    setCurrentTarget(target);\r\n    setShowEditModal(true);\r\n    setCustomCriteriaType(target.target_criteria_type === 'custom' ? target.target_criteria_type : ''); // Set custom field based on current target\r\n    setCustomCriteriaValue(target.target_criteria_value === 'custom' ? target.target_criteria_value : '');\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    setCurrentTarget(null);\r\n    setShowEditModal(false);\r\n    setCustomCriteriaType('');\r\n    setCustomCriteriaValue('');\r\n  };\r\n\r\n  const handleShowDeleteModal = (target) => {\r\n    setTargetToDelete(target);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleCloseDeleteModal = () => {\r\n    setTargetToDelete(null);\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  const addSalesTarget = async (targetData) => {\r\n    try {\r\n      await api.post('/sales_target/', targetData);\r\n      showToast('success', 'Sales target created successfully.', 'Success');\r\n    } catch (err) {\r\n      console.error('Error adding sales target:', err);\r\n      showToast('danger', 'Failed to save sales target.', 'Error');\r\n    }\r\n  };\r\n\r\n  const editSalesTarget = async (targetData) => {\r\n    try {\r\n      await api.put(`/sales_target/${currentTarget.id}`, targetData);\r\n      showToast('success', 'Sales target updated successfully.', 'Success');\r\n    } catch (err) {\r\n      console.error('Error updating sales target:', err);\r\n      showToast('danger', 'Failed to save sales target.', 'Error');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e, isEditing) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n\r\n    // Prepare datetime objects with time set to 12:00 AM\r\n    const periodStartDate = new Date(formData.get('period_start'));\r\n    periodStartDate.setHours(0, 0, 0); // Set to 12:00 AM\r\n\r\n    const periodEndDate = new Date(formData.get('period_end'));\r\n    periodEndDate.setHours(0, 0, 0); // Set to 12:00 AM\r\n\r\n    // Validation for dates\r\n    if (isNaN(periodStartDate.getTime()) || isNaN(periodEndDate.getTime())) {\r\n      showToast('danger', 'Please enter valid date and time.', 'Error');\r\n      return;\r\n    }\r\n\r\n    const targetData = {\r\n      sales_manager_id: parseInt(formData.get('sales_manager_id'), 10),\r\n      target_sales_count: Math.round(Number(formData.get('target_sales_count'))),\r\n      target_premium_amount: parseFloat(formData.get('target_premium_amount')),\r\n      target_criteria_type: customCriteriaType || formData.get('target_criteria_type'),\r\n      target_criteria_value: customCriteriaValue || formData.get('target_criteria_value'),\r\n      period_start: periodStartDate.toISOString(),\r\n      period_end: periodEndDate.toISOString(),\r\n      is_active: true\r\n    };\r\n\r\n    if (isEditing) {\r\n      await editSalesTarget(targetData);\r\n    } else {\r\n      await addSalesTarget(targetData);\r\n    }\r\n\r\n    fetchSalesTargets();\r\n    if (isEditing) handleCloseEditModal();\r\n    else handleCloseAddModal();\r\n  };\r\n\r\n  const handleDelete = async () => {\r\n    try {\r\n      await api.delete(`/sales_target/${targetToDelete.id}`);\r\n      showToast('success', 'Sales target deleted successfully.', 'Success');\r\n      fetchSalesTargets();\r\n      handleCloseDeleteModal();\r\n    } catch (err) {\r\n      console.error('Error deleting sales target:', err);\r\n      showToast('danger', 'Failed to delete sales target.', 'Error');\r\n    }\r\n  };\r\n\r\n  const activeTargets = salesTargets.filter(target => target.is_active);\r\n  const pastTargets = salesTargets.filter(target => !target.is_active);\r\n  const paginatedTargets = activeTargets.slice((currentPage - 1) * itemsPerPage, currentPage * itemsPerPage);\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Manage Sales Targets</h1>\r\n      {loading && <Spinner animation=\"border\" variant=\"primary\" />}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n      <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n        {(role_id === 3 || role_id === 2) && (\r\n          <Button variant=\"primary\" onClick={handleShowAddModal}>\r\n            <FontAwesomeIcon icon={faPlus} /> Add Sales Target\r\n          </Button>\r\n        )}\r\n        <div className=\"d-flex flex-wrap align-items-center\">\r\n          <Form.Control as=\"select\" value={selectedManager} onChange={(e) => setSelectedManager(e.target.value)} className=\"me-1\" style={{ width: '150px' }}>\r\n            <option value=\"\">Manager</option>\r\n            {salesManagers.map(manager => (\r\n              <option key={manager.id} value={manager.id}>{manager.name}</option>\r\n            ))}\r\n          </Form.Control>\r\n          <Form.Control as=\"select\" value={selectedCriteriaType} onChange={(e) => setSelectedCriteriaType(e.target.value)} className=\"me-1\" style={{ width: '150px' }}>\r\n            <option value=\"\">Criteria Type</option>\r\n            {criteriaTypes.map(type => (\r\n              <option key={type} value={type}>{type}</option>\r\n            ))}\r\n          </Form.Control>\r\n          <Form.Control as=\"select\" value={selectedCriteriaValue} onChange={(e) => setSelectedCriteriaValue(e.target.value)} className=\"me-1\" style={{ width: '150px' }}>\r\n            <option value=\"\">Criteria Value</option>\r\n            {criteriaValues.map(value => (\r\n              <option key={value} value={value}>{value}</option>\r\n            ))}\r\n          </Form.Control>\r\n          <Form.Control type=\"date\" value={startDate} onChange={(e) => setStartDate(e.target.value)} className=\"me-1\" style={{ width: '120px' }} />\r\n          <Form.Control type=\"date\" value={endDate} onChange={(e) => setEndDate(e.target.value)} className=\"me-1\" style={{ width: '120px' }} />\r\n          <Button variant=\"primary\" onClick={fetchSalesTargets}>Apply</Button>\r\n        </div>\r\n      </div>\r\n\r\n      <Button\r\n        variant={showPastTargets ? 'primary' : 'secondary'}\r\n        onClick={() => setShowPastTargets(!showPastTargets)}\r\n        className=\"mb-3\"\r\n      >\r\n        {showPastTargets ? 'Hide Past Targets' : 'Show Past Targets'}\r\n      </Button>\r\n\r\n      <div className=\"mt-3\">\r\n        <h5>Total Running Targets: {totalRunningTargets}</h5>\r\n      </div>\r\n\r\n      <Table striped bordered hover responsive className=\"mt-3\">\r\n        <thead>\r\n          <tr>\r\n            <th>Sales Manager</th>\r\n            <th>Target Sales Count</th>\r\n            <th>Target Premium Amount</th>\r\n            <th>Criteria Type</th>\r\n            <th>Criteria Value</th>\r\n            <th>Period Start</th>\r\n            <th>Period End</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {paginatedTargets.map(target => (\r\n            <tr key={target.id} className={target.is_active ? '' : 'table-secondary'}>\r\n              <td>{salesManagers.find(manager => manager.id === target.sales_manager_id)?.name || target.sales_manager_id}</td>\r\n              <td>{Math.round(target.target_sales_count)}</td>\r\n              <td>{parseFloat(target.target_premium_amount).toFixed(2)}</td>\r\n              <td>{target.target_criteria_type}</td>\r\n              <td>{target.target_criteria_value}</td>\r\n              <td>{new Date(target.period_start).toISOString().slice(0, 10)}</td>\r\n              <td>{new Date(target.period_end).toISOString().slice(0, 10)}</td>\r\n              <td>\r\n                {(role_id === 3 || role_id === 2) && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"warning\"\r\n                      onClick={() => handleShowEditModal(target)}\r\n                      disabled={!target.is_active}\r\n                    >\r\n                      <FontAwesomeIcon icon={faEdit} /> Edit\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => handleShowDeleteModal(target)}\r\n                      disabled={!target.is_active}\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrashAlt} /> Delete\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n          {showPastTargets && pastTargets.map(target => (\r\n            <tr key={target.id} className=\"table-secondary\">\r\n              <td>{salesManagers.find(manager => manager.id === target.sales_manager_id)?.name || target.sales_manager_id}</td>\r\n              <td>{Math.round(target.target_sales_count)}</td>\r\n              <td>{parseFloat(target.target_premium_amount).toFixed(2)}</td>\r\n              <td>{target.target_criteria_type}</td>\r\n              <td>{target.target_criteria_value}</td>\r\n              <td>{new Date(target.period_start).toISOString().slice(0, 10)}</td>\r\n              <td>{new Date(target.period_end).toISOString().slice(0, 10)}</td>\r\n              <td>\r\n                {(role_id === 3 || role_id === 2) && (\r\n                  <>\r\n                    <Button\r\n                      variant=\"warning\"\r\n                      onClick={() => handleShowEditModal(target)}\r\n                      disabled\r\n                    >\r\n                      <FontAwesomeIcon icon={faEdit} /> Edit\r\n                    </Button>\r\n                    <Button\r\n                      variant=\"danger\"\r\n                      onClick={() => handleShowDeleteModal(target)}\r\n                      disabled\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrashAlt} /> Delete\r\n                    </Button>\r\n                  </>\r\n                )}\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Pagination Controls */}\r\n      <Pagination className=\"justify-content-center mt-3\">\r\n        <Pagination.Prev onClick={() => setCurrentPage(prev => Math.max(prev - 1, 1))} disabled={currentPage === 1} />\r\n        {Array.from({ length: Math.min(5, totalPages) }, (_, index) => {\r\n          const pageNum = index + 1 + Math.max(0, currentPage - 3);\r\n          if (pageNum <= totalPages) {\r\n            return (\r\n              <Pagination.Item key={pageNum} active={pageNum === currentPage} onClick={() => setCurrentPage(pageNum)}>\r\n                {pageNum}\r\n              </Pagination.Item>\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n        <Pagination.Next onClick={() => setCurrentPage(prev => Math.min(prev + 1, totalPages))} disabled={currentPage === totalPages} />\r\n      </Pagination>\r\n\r\n      {/* Modal for adding sales target */}\r\n      <Modal show={showAddModal} onHide={handleCloseAddModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Sales Target</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={(e) => handleSubmit(e, false)}>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"sales_manager_id\" className=\"form-label\">Sales Manager</label>\r\n              <select name=\"sales_manager_id\" className=\"form-control\" required>\r\n                <option value=\"\">Select Manager</option>\r\n                {salesManagers.map(manager => (\r\n                  <option key={manager.id} value={manager.id}>\r\n                    {manager.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_sales_count\" className=\"form-label\">Target Sales Count</label>\r\n              <input type=\"number\" name=\"target_sales_count\" className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_premium_amount\" className=\"form-label\">Target Premium Amount</label>\r\n              <input type=\"number\" name=\"target_premium_amount\" className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_criteria_type\" className=\"form-label\">Target Criteria Type</label>\r\n              <select\r\n                name=\"target_criteria_type\"\r\n                className=\"form-control\"\r\n                required\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setCustomCriteriaType(value === 'custom' ? 'custom' : value);\r\n                  if (value !== 'custom') {\r\n                    setCustomCriteriaValue(''); // Reset custom criteria value if other option is selected\r\n                  }\r\n                }}\r\n              >\r\n                <option value=\"\">Select Criteria Type</option>\r\n                {criteriaTypes.map(type => (\r\n                  <option key={type} value={type}>{type}</option>\r\n                ))}\r\n                <option value=\"custom\">Other (Input below)</option>\r\n              </select>\r\n              {customCriteriaType === 'custom' && (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control mt-2\"\r\n                  placeholder=\"Enter custom criteria type\"\r\n                  value={customCriteriaType}\r\n                  onChange={(e) => setCustomCriteriaType(e.target.value)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_criteria_value\" className=\"form-label\">Target Criteria Value</label>\r\n              <select\r\n                name=\"target_criteria_value\"\r\n                className=\"form-control\"\r\n                required\r\n                onChange={(e) => {\r\n                  const value = e.target.value;\r\n                  setCustomCriteriaValue(value === 'custom' ? 'custom' : value);\r\n                }}\r\n              >\r\n                <option value=\"\">Select Criteria Value</option>\r\n                {criteriaValues.map(value => (\r\n                  <option key={value} value={value}>{value}</option>\r\n                ))}\r\n                <option value=\"custom\">Other (Input below)</option>\r\n              </select>\r\n              {customCriteriaValue === 'custom' && (\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control mt-2\"\r\n                  placeholder=\"Enter custom criteria value\"\r\n                  value={customCriteriaValue}\r\n                  onChange={(e) => setCustomCriteriaValue(e.target.value)}\r\n                />\r\n              )}\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"period_start\" className=\"form-label\">Period Start</label>\r\n              <input type=\"date\" name=\"period_start\" className=\"form-control\" required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"period_end\" className=\"form-label\">Period End</label>\r\n              <input type=\"date\" name=\"period_end\" className=\"form-control\" required />\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Create Target\r\n            </Button>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Modal for editing sales target */}\r\n      <Modal show={showEditModal} onHide={handleCloseEditModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Sales Target</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <form onSubmit={(e) => handleSubmit(e, true)}>\r\n            <input type=\"hidden\" name=\"id\" defaultValue={currentTarget ? currentTarget.id : ''} />\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"sales_manager_id\" className=\"form-label\">Sales Manager</label>\r\n              <select name=\"sales_manager_id\" className=\"form-control\" defaultValue={currentTarget ? currentTarget.sales_manager_id : ''} required>\r\n                <option value=\"\">Select Manager</option>\r\n                {salesManagers.map(manager => (\r\n                  <option key={manager.id} value={manager.id}>\r\n                    {manager.name}\r\n                  </option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_sales_count\" className=\"form-label\">Target Sales Count</label>\r\n              <input type=\"number\" name=\"target_sales_count\" className=\"form-control\" defaultValue={currentTarget ? currentTarget.target_sales_count : ''} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_premium_amount\" className=\"form-label\">Target Premium Amount</label>\r\n              <input type=\"number\" name=\"target_premium_amount\" className=\"form-control\" defaultValue={currentTarget ? currentTarget.target_premium_amount : ''} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_criteria_type\" className=\"form-label\">Target Criteria Type</label>\r\n              <select name=\"target_criteria_type\" className=\"form-control\" defaultValue={currentTarget ? currentTarget.target_criteria_type : ''} required>\r\n                <option value=\"\">Select Criteria Type</option>\r\n                {criteriaTypes.map(type => (\r\n                  <option key={type} value={type}>{type}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"target_criteria_value\" className=\"form-label\">Target Criteria Value</label>\r\n              <select name=\"target_criteria_value\" className=\"form-control\" defaultValue={currentTarget ? currentTarget.target_criteria_value : ''} required>\r\n                <option value=\"\">Select Criteria Value</option>\r\n                {criteriaValues.map(value => (\r\n                  <option key={value} value={value}>{value}</option>\r\n                ))}\r\n              </select>\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"period_start\" className=\"form-label\">Period Start</label>\r\n              <input type=\"date\" name=\"period_start\" className=\"form-control\" defaultValue={currentTarget ? currentTarget.period_start.slice(0, 10) : ''} required />\r\n            </div>\r\n            <div className=\"mb-3\">\r\n              <label htmlFor=\"period_end\" className=\"form-label\">Period End</label>\r\n              <input type=\"date\" name=\"period_end\" className=\"form-control\" defaultValue={currentTarget ? currentTarget.period_end.slice(0, 10) : ''} required />\r\n            </div>\r\n            <Button variant=\"primary\" type=\"submit\">\r\n              Update Target\r\n            </Button>\r\n          </form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Modal for delete confirmation */}\r\n      <Modal show={showDeleteModal} onHide={handleCloseDeleteModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to delete this sales target? This action cannot be undone.</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleDelete}>\r\n            Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesTargetPage;\r\n","import { useState } from 'react';\nimport useEffect from './useIsomorphicEffect';\nconst targetMap = new WeakMap();\nlet resizeObserver;\nfunction getResizeObserver() {\n  // eslint-disable-next-line no-return-assign\n  return resizeObserver = resizeObserver || new window.ResizeObserver(entries => {\n    entries.forEach(entry => {\n      const handler = targetMap.get(entry.target);\n      if (handler) handler(entry.contentRect);\n    });\n  });\n}\n\n/**\n * Efficiently observe size changes on an element. Depends on the `ResizeObserver` api,\n * and polyfills are needed in older browsers.\n *\n * ```ts\n * const [ref, attachRef] = useCallbackRef(null);\n *\n * const rect = useResizeObserver(ref);\n *\n * return (\n *  <div ref={attachRef}>\n *    {JSON.stringify(rect)}\n *  </div>\n * )\n * ```\n *\n * @param element The DOM element to observe\n */\nexport default function useResizeObserver(element) {\n  const [rect, setRect] = useState(null);\n  useEffect(() => {\n    if (!element) return;\n    getResizeObserver().observe(element);\n    setRect(element.getBoundingClientRect());\n    targetMap.set(element, rect => {\n      setRect(rect);\n    });\n    return () => {\n      targetMap.delete(element);\n    };\n  }, [element]);\n  return rect;\n}","const _excluded = [\"onKeyDown\"];\nfunction _objectWithoutPropertiesLoose(r, e) { if (null == r) return {}; var t = {}; for (var n in r) if ({}.hasOwnProperty.call(r, n)) { if (e.indexOf(n) >= 0) continue; t[n] = r[n]; } return t; }\n/* eslint-disable jsx-a11y/no-static-element-interactions */\n/* eslint-disable jsx-a11y/anchor-has-content */\n\nimport * as React from 'react';\nimport { useEventCallback } from '@restart/hooks';\nimport { useButtonProps } from './Button';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport function isTrivialHref(href) {\n  return !href || href.trim() === '#';\n}\n/**\n * An generic `<a>` component that covers a few A11y cases, ensuring that\n * cases where the `href` is missing or trivial like \"#\" are treated like buttons.\n */\nconst Anchor = /*#__PURE__*/React.forwardRef((_ref, ref) => {\n  let {\n      onKeyDown\n    } = _ref,\n    props = _objectWithoutPropertiesLoose(_ref, _excluded);\n  const [buttonProps] = useButtonProps(Object.assign({\n    tagName: 'a'\n  }, props));\n  const handleKeyDown = useEventCallback(e => {\n    buttonProps.onKeyDown(e);\n    onKeyDown == null ? void 0 : onKeyDown(e);\n  });\n  if (isTrivialHref(props.href) || props.role === 'button') {\n    return /*#__PURE__*/_jsx(\"a\", Object.assign({\n      ref: ref\n    }, props, buttonProps, {\n      onKeyDown: handleKeyDown\n    }));\n  }\n  return /*#__PURE__*/_jsx(\"a\", Object.assign({\n    ref: ref\n  }, props, {\n    onKeyDown: onKeyDown\n  }));\n});\nAnchor.displayName = 'Anchor';\nexport default Anchor;","/* eslint-disable react/no-multi-comp */\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport Anchor from '@restart/ui/Anchor';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nconst PageItem = /*#__PURE__*/React.forwardRef(({\n  active = false,\n  disabled = false,\n  className,\n  style,\n  activeLabel = '(current)',\n  children,\n  linkStyle,\n  linkClassName,\n  as = Anchor,\n  ...props\n}, ref) => {\n  const Component = active || disabled ? 'span' : as;\n  return /*#__PURE__*/_jsx(\"li\", {\n    ref: ref,\n    style: style,\n    className: classNames(className, 'page-item', {\n      active,\n      disabled\n    }),\n    children: /*#__PURE__*/_jsxs(Component, {\n      className: classNames('page-link', linkClassName),\n      style: linkStyle,\n      ...props,\n      children: [children, active && activeLabel && /*#__PURE__*/_jsx(\"span\", {\n        className: \"visually-hidden\",\n        children: activeLabel\n      })]\n    })\n  });\n});\nPageItem.displayName = 'PageItem';\nexport default PageItem;\nfunction createButton(name, defaultValue, label = name) {\n  const Button = /*#__PURE__*/React.forwardRef(({\n    children,\n    ...props\n  }, ref) => /*#__PURE__*/_jsxs(PageItem, {\n    ...props,\n    ref: ref,\n    children: [/*#__PURE__*/_jsx(\"span\", {\n      \"aria-hidden\": \"true\",\n      children: children || defaultValue\n    }), /*#__PURE__*/_jsx(\"span\", {\n      className: \"visually-hidden\",\n      children: label\n    })]\n  }));\n  Button.displayName = name;\n  return Button;\n}\nexport const First = createButton('First', '«');\nexport const Prev = createButton('Prev', '‹', 'Previous');\nexport const Ellipsis = createButton('Ellipsis', '…', 'More');\nexport const Next = createButton('Next', '›');\nexport const Last = createButton('Last', '»');","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport PageItem, { Ellipsis, First, Last, Next, Prev } from './PageItem';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Pagination = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  size,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'pagination');\n  return /*#__PURE__*/_jsx(\"ul\", {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, size && `${decoratedBsPrefix}-${size}`)\n  });\n});\nPagination.displayName = 'Pagination';\nexport default Object.assign(Pagination, {\n  First,\n  Prev,\n  Ellipsis,\n  Item: PageItem,\n  Next,\n  Last\n});","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["_ref","_local_user$role","showToast","salesTargets","setSalesTargets","useState","loading","setLoading","error","setError","currentTarget","setCurrentTarget","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","targetToDelete","setTargetToDelete","showPastTargets","setShowPastTargets","currentPage","setCurrentPage","totalPages","setTotalPages","totalRunningTargets","setTotalRunningTargets","salesManagers","setSalesManagers","selectedManager","setSelectedManager","criteriaTypes","setCriteriaTypes","criteriaValues","setCriteriaValues","customCriteriaType","setCustomCriteriaType","customCriteriaValue","setCustomCriteriaValue","selectedCriteriaType","setSelectedCriteriaType","selectedCriteriaValue","setSelectedCriteriaValue","startDate","setStartDate","endDate","setEndDate","local_user","JSON","parse","localStorage","getItem","role_id","parseInt","role","id","userId","fetchSalesManagers","useCallback","async","response","api","get","params","type","data","console","fetchSalesTargets","res_tot","total_item","total","targets","Array","isArray","sales_targets","runningtargets","filter","target","is_active","length","filteredTargets","sales_manager_id","types","Set","map","target_criteria_type","values","target_criteria_value","additionalFilteredTargets","matchesManager","matchesCriteriaType","matchesCriteriaValue","matchesDate","Date","period_start","toISOString","slice","period_end","Math","ceil","err","useEffect","handleCloseAddModal","handleShowEditModal","handleCloseEditModal","handleShowDeleteModal","handleCloseDeleteModal","handleSubmit","e","isEditing","preventDefault","formData","FormData","periodStartDate","setHours","periodEndDate","isNaN","getTime","targetData","target_sales_count","round","Number","target_premium_amount","parseFloat","put","editSalesTarget","post","addSalesTarget","activeTargets","pastTargets","paginatedTargets","_jsxs","className","children","_jsx","Spinner","animation","variant","Button","onClick","handleShowAddModal","FontAwesomeIcon","icon","faPlus","Form","Control","as","value","onChange","style","width","manager","name","Table","striped","bordered","hover","responsive","_salesManagers$find","find","toFixed","_Fragment","disabled","faEdit","faTrashAlt","_salesManagers$find2","Pagination","Prev","prev","max","from","min","_","index","pageNum","Item","active","Next","Modal","show","onHide","Header","closeButton","Title","Body","onSubmit","htmlFor","required","placeholder","defaultValue","Footer","delete","WeakMap","_excluded","Anchor","React","ref","onKeyDown","props","r","t","n","hasOwnProperty","call","indexOf","_objectWithoutPropertiesLoose","buttonProps","useButtonProps","Object","assign","tagName","handleKeyDown","useEventCallback","href","trim","displayName","PageItem","activeLabel","linkStyle","linkClassName","Component","classNames","createButton","label","arguments","undefined","_ref2","First","Ellipsis","Last","bsPrefix","size","decoratedBsPrefix","useBootstrapPrefix","borderless","classes","table","responsiveClass"],"sourceRoot":""}