{"version":3,"file":"static/js/464.475b75dc.chunk.js","mappings":"8NAIA,MA8FA,EA9F4BA,IAAoB,IAAnB,UAAEC,GAAWD,EACxC,MAAOE,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,OAChDC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAOC,IAAYJ,EAAAA,EAAAA,UAAS,OAC5BK,EAAWC,IAAgBN,EAAAA,EAAAA,WAAS,IACpCO,EAAeC,IAAoBR,EAAAA,EAAAA,UAAS,IAG7CS,GAAuBC,EAAAA,EAAAA,cAAYC,UACvCT,GAAW,GACXE,EAAS,MACT,IACE,MAAMQ,QAAiBC,EAAAA,EAAIC,IAAI,eAC/Bf,EAAmBa,EAASG,MAC5BP,EAAiBI,EAASG,KAAKC,gBAAkB,GACnD,CAAE,MAAOb,GACPc,QAAQd,MAAM,mCAAoCA,GAClDC,EAAS,6DACTP,EAAU,SAAU,4DAA6D,QACnF,CAAC,QACCK,GAAW,EACb,IACC,CAACL,KAEJqB,EAAAA,EAAAA,YAAU,KACRT,GAAsB,GACrB,CAACA,IAsBJ,OAAIR,GAAgBkB,EAAAA,EAAAA,KAACC,EAAAA,EAAO,CAACC,UAAU,YAGrCC,EAAAA,EAAAA,MAAA,OAAKC,MAAO,CAAEC,UAAW,OAAQC,QAAS,QAASC,SAAA,EACjDP,EAAAA,EAAAA,KAAA,MAAAO,SAAI,0BACHvB,IAASgB,EAAAA,EAAAA,KAAA,KAAGQ,UAAU,cAAaD,SAAEvB,IACrCL,IACCwB,EAAAA,EAAAA,MAAAM,EAAAA,SAAA,CAAAF,SAAA,EACEJ,EAAAA,EAAAA,MAAA,KAAAI,SAAA,EAAGP,EAAAA,EAAAA,KAAA,UAAAO,SAAQ,oBAAwB,IAAE5B,EAAgBkB,eAAe,YACpEG,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAASA,IAAMzB,GAAa,GAAMoB,SAAC,gCAOjEJ,EAAAA,EAAAA,MAACU,EAAAA,EAAK,CAACC,KAAM5B,EAAW6B,OAAQA,IAAM5B,GAAa,GAAOoB,SAAA,EACxDP,EAAAA,EAAAA,KAACa,EAAAA,EAAMG,OAAM,CAACC,aAAW,EAAAV,UACvBP,EAAAA,EAAAA,KAACa,EAAAA,EAAMK,MAAK,CAAAX,SAAC,+BAEfP,EAAAA,EAAAA,KAACa,EAAAA,EAAMM,KAAI,CAAAZ,UACTP,EAAAA,EAAAA,KAACoB,EAAAA,EAAI,CAAAb,UACHJ,EAAAA,EAAAA,MAACiB,EAAAA,EAAKC,MAAK,CAAAd,SAAA,EACTP,EAAAA,EAAAA,KAACoB,EAAAA,EAAKE,MAAK,CAAAf,SAAC,oBACZP,EAAAA,EAAAA,KAACoB,EAAAA,EAAKG,QAAO,CACXC,KAAK,SACLC,MAAOrC,EACPsC,SAAWC,GAAMtC,EAAiBsC,EAAEC,OAAOH,OAAS,IACpDI,YAAY,iCAKpB1B,EAAAA,EAAAA,MAACU,EAAAA,EAAMiB,OAAM,CAAAvB,SAAA,EACXP,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAAQ,YAAYC,QAASA,IAAMzB,GAAa,GAAOoB,SAAC,WAGhEP,EAAAA,EAAAA,KAACU,EAAAA,EAAM,CAACC,QAAQ,UAAUC,QAxDNpB,UAC1B,GAAIuC,MAAM3C,IAAkBA,EAAgB,EAC1CV,EAAU,UAAW,kDAAmD,gBAI1E,UACQgB,EAAAA,EAAIsC,IAAI,cAAe,CAC3BnC,eAAgBoC,SAAS7C,EAAe,MAE1CV,EAAU,UAAW,yCAA0C,WAC/DY,IACAH,GAAa,EACf,CAAE,MAAOH,GACPc,QAAQd,MAAM,mCAAoCA,GAClDN,EAAU,SAAU,uDAAwD,QAC9E,GAwC6D6B,SAAC,yBAKxD,C","sources":["pages/RetentionPolicyPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Spinner, Button, Form, Modal } from 'react-bootstrap';\r\nimport api from '../services/api';\r\n\r\nconst RetentionPolicyPage = ({ showToast }) => {\r\n  const [retentionPolicy, setRetentionPolicy] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [retentionDays, setRetentionDays] = useState(''); // Initialize as an empty string\r\n\r\n  // Fetch the retention policy\r\n  const fetchRetentionPolicy = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.get('/retention/');\r\n      setRetentionPolicy(response.data);\r\n      setRetentionDays(response.data.retention_days || ''); // Set to empty string if undefined\r\n    } catch (error) {\r\n      console.error('Error fetching retention policy:', error);\r\n      setError('Failed to fetch retention policy. Please try again later.');\r\n      showToast('danger', 'Failed to fetch retention policy. Please try again later.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showToast]);\r\n\r\n  useEffect(() => {\r\n    fetchRetentionPolicy();\r\n  }, [fetchRetentionPolicy]);\r\n\r\n  // Update the retention policy\r\n  const handleSaveRetention = async () => {\r\n    if (isNaN(retentionDays) || retentionDays < 0) {\r\n      showToast('warning', 'Please enter a valid number for retention days.', 'Warning');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await api.put('/retention/', {\r\n        retention_days: parseInt(retentionDays, 10),\r\n      });\r\n      showToast('success', 'Retention policy updated successfully!', 'Success');\r\n      fetchRetentionPolicy(); // Refresh the policy\r\n      setShowModal(false);\r\n    } catch (error) {\r\n      console.error('Error updating retention policy:', error);\r\n      showToast('danger', 'Failed to update retention policy. Please try again.', 'Error');\r\n    }\r\n  };\r\n\r\n  if (loading) return <Spinner animation=\"border\" />;\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px', padding: '20px' }}>\r\n      <h2>Data Retention Policy</h2>\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n      {retentionPolicy && (\r\n        <>\r\n          <p><strong>Retention Days:</strong> {retentionPolicy.retention_days} days</p>\r\n          <Button variant=\"primary\" onClick={() => setShowModal(true)}>\r\n            Update Retention Policy\r\n          </Button>\r\n        </>\r\n      )}\r\n\r\n      {/* Update Retention Policy Modal */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Update Retention Policy</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Retention Days</Form.Label>\r\n              <Form.Control\r\n                type=\"number\"\r\n                value={retentionDays}\r\n                onChange={(e) => setRetentionDays(e.target.value || '')} // Ensure it can be empty\r\n                placeholder=\"Enter retention days\"\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveRetention}>\r\n            Save Changes\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RetentionPolicyPage;\r\n"],"names":["_ref","showToast","retentionPolicy","setRetentionPolicy","useState","loading","setLoading","error","setError","showModal","setShowModal","retentionDays","setRetentionDays","fetchRetentionPolicy","useCallback","async","response","api","get","data","retention_days","console","useEffect","_jsx","Spinner","animation","_jsxs","style","marginTop","padding","children","className","_Fragment","Button","variant","onClick","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","type","value","onChange","e","target","placeholder","Footer","isNaN","put","parseInt"],"sourceRoot":""}