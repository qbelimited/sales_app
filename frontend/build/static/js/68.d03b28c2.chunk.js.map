{"version":3,"file":"static/js/68.d03b28c2.chunk.js","mappings":"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","sources":["pages/ManageRolesPage.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, Spinner, Row, Col, Button, Form, Modal } from 'react-bootstrap';\r\nimport { FaPen, FaTrash } from 'react-icons/fa';\r\nimport api from '../services/api';\r\n\r\nconst ManageRolesPage = ({ showToast }) => {\r\n  const [roles, setRoles] = useState([]);\r\n  const [accessList, setAccessList] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [currentRole, setCurrentRole] = useState(null);\r\n  const [roleName, setRoleName] = useState('');\r\n  const [roleDescription, setRoleDescription] = useState('');\r\n  const [showAccessModal, setShowAccessModal] = useState(false);\r\n  const [currentAccess, setCurrentAccess] = useState({\r\n    role_id: '',\r\n    can_create: false,\r\n    can_update: false,\r\n    can_delete: false,\r\n    can_view_logs: false,\r\n    can_manage_users: false,\r\n    can_view_audit_trail: false,\r\n  });\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [roleToDelete, setRoleToDelete] = useState(null);\r\n\r\n  // Fetch all roles and access\r\n  const fetchRolesAndAccess = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      // Fetch roles\r\n      const rolesResponse = await api.get('/roles/');\r\n      setRoles(rolesResponse.data || []);\r\n\r\n      // Fetch access list\r\n      const accessResponse = await api.get('/access/');\r\n      setAccessList(accessResponse.data || []);\r\n    } catch (error) {\r\n      console.error('Error fetching data:', error);\r\n      setError('Failed to fetch data. Please try again later.');\r\n      showToast('danger', 'Failed to fetch data. Please try again later.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showToast]);\r\n\r\n  useEffect(() => {\r\n    fetchRolesAndAccess();\r\n  }, [fetchRolesAndAccess]);\r\n\r\n  // Handle create/update role\r\n  const handleSaveRole = async () => {\r\n    try {\r\n      if (currentRole) {\r\n        // Update existing role\r\n        await api.put(`/roles/${currentRole.id}`, {\r\n          name: roleName,\r\n          description: roleDescription,\r\n        });\r\n        showToast('success', 'Role updated successfully!', 'Success');\r\n      } else {\r\n        // Create new role\r\n        await api.post('/roles/', {\r\n          name: roleName,\r\n          description: roleDescription,\r\n        });\r\n        showToast('success', 'Role created successfully!', 'Success');\r\n      }\r\n      fetchRolesAndAccess();\r\n      setShowModal(false);\r\n      setRoleName('');\r\n      setRoleDescription('');\r\n      setCurrentRole(null);\r\n    } catch (error) {\r\n      console.error('Error saving role:', error);\r\n      showToast('danger', 'Failed to save role. Please try again.', 'Error');\r\n    }\r\n  };\r\n\r\n  // Handle create/update access\r\n  const handleSaveAccess = async () => {\r\n    try {\r\n      if (currentAccess.role_id) {\r\n        // Update existing access\r\n        const response = await api.put(`/access/${currentAccess.role_id}`, {\r\n          ...currentAccess,\r\n          role_id: parseInt(currentAccess.role_id, 10),\r\n        });\r\n        console.log(response.data);\r\n        showToast('success', 'Access updated successfully!', 'Success');\r\n      } else {\r\n        // Create new access\r\n        const response = await api.post('/access/', {\r\n          ...currentAccess,\r\n          role_id: parseInt(currentAccess.role_id, 10),\r\n        });\r\n        console.log(response.data);\r\n        showToast('success', 'Access created successfully!', 'Success');\r\n      }\r\n      fetchRolesAndAccess();\r\n      setShowAccessModal(false);\r\n      setCurrentAccess({\r\n        role_id: '',\r\n        can_create: false,\r\n        can_update: false,\r\n        can_delete: false,\r\n        can_view_logs: false,\r\n        can_manage_users: false,\r\n        can_view_audit_trail: false,\r\n      });\r\n    } catch (error) {\r\n      console.error('Error saving access:', error.response ? error.response.data : error.message);\r\n\r\n      // Check for specific error status\r\n      if (error.response && error.response.status === 401) {\r\n        showToast('danger', 'Unauthorized. Please log in again.', 'Error');\r\n      } else if (error.response && error.response.status === 403) {\r\n        showToast('danger', 'Forbidden. You do not have permission to update access.', 'Error');\r\n      } else {\r\n        showToast('danger', 'Failed to save access. Please try again.', 'Error');\r\n      }\r\n    }\r\n  };\r\n\r\n  // Handle delete role and its access\r\n  const handleDeleteRole = async () => {\r\n    setShowDeleteModal(false);\r\n    try {\r\n      // Check if role has access\r\n      const access = accessList.find((access) => access.role_id === roleToDelete.id);\r\n\r\n      // Delete role\r\n      await api.delete(`/roles/${roleToDelete.id}`);\r\n\r\n      // Delete associated access if it exists\r\n      if (access) {\r\n        await api.delete('/access/', { data: { role_id: roleToDelete.id } });\r\n      }\r\n\r\n      showToast('success', 'Role and associated access deleted successfully!', 'Success');\r\n      fetchRolesAndAccess();\r\n    } catch (error) {\r\n      console.error('Error deleting role or access:', error);\r\n      showToast('danger', 'Failed to delete role and access. Please try again.', 'Error');\r\n    }\r\n  };\r\n\r\n  // Handle edit role\r\n  const handleEditRole = (role) => {\r\n    setCurrentRole(role);\r\n    setRoleName(role.name);\r\n    setRoleDescription(role.description);\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Handle show delete access modal\r\n  const handleShowDeleteRoleModal = (role) => {\r\n    setRoleToDelete(role);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  // Handle edit access\r\n  const handleEditAccess = (access) => {\r\n    setCurrentAccess(access);\r\n    setShowAccessModal(true);\r\n  };\r\n\r\n  if (loading) return <Spinner animation=\"border\" />;\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px', padding: '20px' }}>\r\n      <Row className=\"mb-3\">\r\n        <Col>\r\n          <h2>Manage Roles</h2>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button onClick={() => setShowModal(true)}>Create New Role</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      {error && <p className=\"text-center text-danger\">{error}</p>}\r\n\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Role Name</th>\r\n            <th>Description</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {roles.length > 0 ? (\r\n            roles.map((role, index) => (\r\n              <tr key={role.id}>\r\n                <td>{index + 1}</td>\r\n                <td>{role.name}</td>\r\n                <td>{role.description}</td>\r\n                <td>\r\n                  <Button variant=\"link\" size=\"sm\" onClick={() => handleEditRole(role)}>\r\n                    <FaPen />\r\n                  </Button>\r\n                  <Button variant=\"link\" size=\"sm\" onClick={() => handleShowDeleteRoleModal(role)}>\r\n                    <FaTrash />\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"4\" className=\"text-center\">No roles found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Access Management Section */}\r\n      <Row className=\"mt-5 mb-3\">\r\n        <Col>\r\n          <h2>Access Management</h2>\r\n        </Col>\r\n        <Col className=\"text-right\">\r\n          <Button onClick={() => setShowAccessModal(true)}>Create New Access</Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Table striped bordered hover responsive>\r\n        <thead>\r\n          <tr>\r\n            <th>Role Name</th>\r\n            <th>Can Create</th>\r\n            <th>Can Update</th>\r\n            <th>Can Delete</th>\r\n            <th>Can View Logs</th>\r\n            <th>Can Manage Users</th>\r\n            <th>Can View Audit Trail</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {accessList.length > 0 ? (\r\n            accessList.map((access) => {\r\n              const role = roles.find(r => r.id === access.role_id);\r\n              return (\r\n                <tr key={access.role_id}>\r\n                  <td>{role ? role.name : 'Role Not Found'}</td>\r\n                  <td>{access.can_create ? 'Yes' : 'No'}</td>\r\n                  <td>{access.can_update ? 'Yes' : 'No'}</td>\r\n                  <td>{access.can_delete ? 'Yes' : 'No'}</td>\r\n                  <td>{access.can_view_logs ? 'Yes' : 'No'}</td>\r\n                  <td>{access.can_manage_users ? 'Yes' : 'No'}</td>\r\n                  <td>{access.can_view_audit_trail ? 'Yes' : 'No'}</td>\r\n                  <td>\r\n                    <Button variant=\"link\" size=\"sm\" onClick={() => handleEditAccess(access)}>\r\n                      <FaPen />\r\n                    </Button>\r\n                    <Button variant=\"link\" size=\"sm\" onClick={() => handleShowDeleteRoleModal(role)}>\r\n                      <FaTrash />\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              );\r\n            })\r\n          ) : (\r\n            <tr>\r\n              <td colSpan=\"8\" className=\"text-center\">No access records found</td>\r\n            </tr>\r\n          )}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Create/Edit Role Modal */}\r\n      <Modal show={showModal} onHide={() => setShowModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{currentRole ? 'Edit Role' : 'Create Role'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Role Name</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter role name\"\r\n                value={roleName}\r\n                onChange={(e) => setRoleName(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Label>Description</Form.Label>\r\n              <Form.Control\r\n                type=\"text\"\r\n                placeholder=\"Enter description\"\r\n                value={roleDescription}\r\n                onChange={(e) => setRoleDescription(e.target.value)}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveRole}>\r\n            {currentRole ? 'Update Role' : 'Create Role'}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Create/Edit Access Modal */}\r\n      <Modal show={showAccessModal} onHide={() => setShowAccessModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{currentAccess.role_id ? 'Edit Access' : 'Create Access'}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Label>Role</Form.Label>\r\n              <Form.Control\r\n                as=\"select\"\r\n                value={currentAccess.role_id}\r\n                onChange={(e) => setCurrentAccess({ ...currentAccess, role_id: parseInt(e.target.value, 10) })}\r\n                disabled={!!currentAccess.role_id} // Disable if editing\r\n              >\r\n                <option value=\"\">Select a Role</option>\r\n                {roles.map(role => (\r\n                  <option key={role.id} value={role.id}>{role.name}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group>\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Can Create\"\r\n                checked={currentAccess.can_create}\r\n                onChange={(e) => setCurrentAccess({ ...currentAccess, can_create: e.target.checked })}\r\n              />\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Can Update\"\r\n                checked={currentAccess.can_update}\r\n                onChange={(e) => setCurrentAccess({ ...currentAccess, can_update: e.target.checked })}\r\n              />\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Can Delete\"\r\n                checked={currentAccess.can_delete}\r\n                onChange={(e) => setCurrentAccess({ ...currentAccess, can_delete: e.target.checked })}\r\n              />\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Can View Logs\"\r\n                checked={currentAccess.can_view_logs}\r\n                onChange={(e) => setCurrentAccess({ ...currentAccess, can_view_logs: e.target.checked })}\r\n              />\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Can Manage Users\"\r\n                checked={currentAccess.can_manage_users}\r\n                onChange={(e) => setCurrentAccess({ ...currentAccess, can_manage_users: e.target.checked })}\r\n              />\r\n              <Form.Check\r\n                type=\"checkbox\"\r\n                label=\"Can View Audit Trail\"\r\n                checked={currentAccess.can_view_audit_trail}\r\n                onChange={(e) => setCurrentAccess({ ...currentAccess, can_view_audit_trail: e.target.checked })}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowAccessModal(false)}>\r\n            Close\r\n          </Button>\r\n          <Button variant=\"primary\" onClick={handleSaveAccess}>\r\n            {currentAccess.role_id ? 'Update Access' : 'Create Access'}\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Delete Access/Role Modal */}\r\n      <Modal show={showDeleteModal} onHide={() => setShowDeleteModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          Are you sure you want to delete this role? Any associated access will also be deleted.\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={() => setShowDeleteModal(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button variant=\"danger\" onClick={handleDeleteRole}>\r\n            Confirm Delete\r\n          </Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ManageRolesPage;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["_ref","showToast","roles","setRoles","useState","accessList","setAccessList","loading","setLoading","error","setError","showModal","setShowModal","currentRole","setCurrentRole","roleName","setRoleName","roleDescription","setRoleDescription","showAccessModal","setShowAccessModal","currentAccess","setCurrentAccess","role_id","can_create","can_update","can_delete","can_view_logs","can_manage_users","can_view_audit_trail","showDeleteModal","setShowDeleteModal","roleToDelete","setRoleToDelete","fetchRolesAndAccess","useCallback","async","rolesResponse","api","get","data","accessResponse","console","useEffect","handleShowDeleteRoleModal","role","_jsx","Spinner","animation","_jsxs","style","marginTop","padding","children","Row","className","Col","Button","onClick","Table","striped","bordered","hover","responsive","length","map","index","name","description","variant","size","handleEditRole","FaPen","FaTrash","id","colSpan","access","find","r","handleEditAccess","Modal","show","onHide","Header","closeButton","Title","Body","Form","Group","Label","Control","type","placeholder","value","onChange","e","target","Footer","put","post","as","parseInt","disabled","Check","label","checked","response","log","message","status","delete","React","ref","bsPrefix","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName","borderless","table","responsiveClass"],"sourceRoot":""}