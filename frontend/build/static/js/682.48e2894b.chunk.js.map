{"version":3,"file":"static/js/682.48e2894b.chunk.js","mappings":"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","sources":["pages/SalesPerformancePage.js","../node_modules/react-bootstrap/esm/Row.js","../node_modules/react-bootstrap/esm/Table.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Modal, Button, Table, Spinner, Form, Row, Col } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faEdit, faTrashAlt, faPlus, faInfoCircle } from '@fortawesome/free-solid-svg-icons';\r\nimport api from '../services/api';\r\n\r\nconst SalesPerformancePage = ({ showToast }) => {\r\n  const [performanceData, setPerformanceData] = useState([]);\r\n  const [salesManagers, setSalesManagers] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [currentPerformance, setCurrentPerformance] = useState(null);\r\n  const [showAddModal, setShowAddModal] = useState(false);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [showDeleteModal, setShowDeleteModal] = useState(false);\r\n  const [showTargetDetailsModal, setShowTargetDetailsModal] = useState(false);\r\n  const [targetDetails, setTargetDetails] = useState(null); // State to hold target details\r\n\r\n  // Pagination state\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [itemsPerPage] = useState(10);\r\n\r\n  // Filter state\r\n  const [criteriaType, setCriteriaType] = useState('');\r\n  const [criteriaValue, setCriteriaValue] = useState('');\r\n  const [targetId, setTargetId] = useState('');\r\n\r\n  const fetchSalesManagers = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'users_with_roles', role_id: 4 }, // Fetch users with role_id 4 (sales managers)\r\n      });\r\n      setSalesManagers(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch sales managers:', error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchPerformanceData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const response = await api.get('/sales_performance/', {\r\n        params: {\r\n          per_page: itemsPerPage,\r\n          page: currentPage,\r\n          criteria_type: criteriaType,\r\n          criteria_value: criteriaValue,\r\n          target_id: targetId,\r\n        },\r\n      });\r\n      const performances = response.data.sales_performances;\r\n\r\n      // Fetch target details for each unique target_id in performances\r\n      const uniqueTargetIds = [...new Set(performances.map(performance => performance.target_id))];\r\n      const targetDetailsPromises = uniqueTargetIds.map(async (id) => {\r\n        try {\r\n          const response = await api.get(`/sales_target/${id}`); // Fetch target details\r\n          return response.data; // Return target details\r\n        } catch (error) {\r\n          console.error('Failed to fetch target details:', error);\r\n          showToast('danger', 'Failed to fetch target details.', 'Error');\r\n          return null; // Return null if error occurs\r\n        }\r\n      });\r\n      const targetDetailsArray = await Promise.all(targetDetailsPromises);\r\n\r\n      // Map target details to target IDs\r\n      const targetDetailsMap = targetDetailsArray.reduce((acc, target) => {\r\n        if (target) {\r\n          acc[target.id] = target;\r\n        }\r\n        return acc;\r\n      }, {});\r\n\r\n      setPerformanceData(performances);\r\n      setTotalPages(Math.ceil(response.data.total / itemsPerPage));\r\n      return targetDetailsMap; // Return target details map for later use\r\n    } catch (err) {\r\n      console.error('Error fetching sales performance:', err);\r\n      const errorMessage = err.response?.data?.message || 'Failed to load sales performance data.';\r\n      setError(errorMessage);\r\n      showToast('danger', errorMessage, 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [showToast, currentPage, itemsPerPage, criteriaType, criteriaValue, targetId]);\r\n\r\n  useEffect(() => {\r\n    fetchSalesManagers();\r\n    const loadData = async () => {\r\n      const targetDetailsMap = await fetchPerformanceData();\r\n      setTargetDetails(targetDetailsMap);\r\n    };\r\n    loadData();\r\n  }, [fetchSalesManagers, fetchPerformanceData]);\r\n\r\n  const handleShowAddModal = () => {\r\n    setCurrentPerformance(null);\r\n    setShowAddModal(true);\r\n  };\r\n\r\n  const handleCloseAddModal = () => {\r\n    setShowAddModal(false);\r\n  };\r\n\r\n  const handleShowEditModal = (performance) => {\r\n    setCurrentPerformance(performance);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleCloseEditModal = () => {\r\n    setCurrentPerformance(null);\r\n    setShowEditModal(false);\r\n  };\r\n\r\n  const handleShowDeleteModal = (performance) => {\r\n    setCurrentPerformance(performance);\r\n    setShowDeleteModal(true);\r\n  };\r\n\r\n  const handleCloseDeleteModal = () => {\r\n    setCurrentPerformance(null);\r\n    setShowDeleteModal(false);\r\n  };\r\n\r\n  const handleShowTargetDetailsModal = (targetId) => {\r\n    const target = targetDetails?.[targetId]; // Get specific target details\r\n    if (target) {\r\n      setTargetDetails(target); // Set target details for the modal\r\n      setShowTargetDetailsModal(true);\r\n    } else {\r\n      console.error('Target not found for ID:', targetId);\r\n      showToast('danger', 'Target details not found.', 'Error');\r\n    }\r\n  };\r\n\r\n  const handleCloseTargetDetailsModal = () => {\r\n    setShowTargetDetailsModal(false);\r\n    setTargetDetails(null); // Clear target details when closing\r\n  };\r\n\r\n  const addPerformance = async (data) => {\r\n    try {\r\n      await api.post('/sales_performance/', data);\r\n      showToast('success', 'Performance created successfully.', 'Success');\r\n      fetchPerformanceData();\r\n      handleCloseAddModal();\r\n    } catch (err) {\r\n      console.error('Error adding performance:', err);\r\n      showToast('danger', 'Failed to save performance.', 'Error');\r\n    }\r\n  };\r\n\r\n  const editPerformance = async (data) => {\r\n    try {\r\n      await api.put(`/sales_performance/${currentPerformance.id}`, data);\r\n      showToast('success', 'Performance updated successfully.', 'Success');\r\n      fetchPerformanceData();\r\n      handleCloseEditModal();\r\n    } catch (err) {\r\n      console.error('Error updating performance:', err);\r\n      showToast('danger', 'Failed to update performance.', 'Error');\r\n    }\r\n  };\r\n\r\n  const deletePerformance = async () => {\r\n    try {\r\n      await api.delete(`/sales_performance/${currentPerformance.id}`);\r\n      showToast('success', 'Performance deleted successfully.', 'Success');\r\n      fetchPerformanceData();\r\n      handleCloseDeleteModal();\r\n    } catch (err) {\r\n      console.error('Error deleting performance:', err);\r\n      showToast('danger', 'Failed to delete performance.', 'Error');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData = new FormData(e.target);\r\n    const data = {\r\n      sales_manager_id: formData.get('sales_manager_id'),\r\n      actual_sales_count: 0, // Adjust this value accordingly\r\n      actual_premium_amount: 0, // Adjust this value accordingly\r\n      target_id: formData.get('target_id'),\r\n      criteria_type: formData.get('criteria_type'),\r\n      criteria_value: formData.get('criteria_value'),\r\n      criteria_met_count: 0, // Adjust this value accordingly\r\n      performance_date: formData.get('performance_date'),\r\n    };\r\n\r\n    if (currentPerformance) {\r\n      editPerformance(data);\r\n    } else {\r\n      addPerformance(data);\r\n    }\r\n  };\r\n\r\n  const generatePerformanceRecords = async () => {\r\n    try {\r\n      await api.post('/sales_performance/auto-generate');\r\n      showToast('success', 'Performance records generated successfully.', 'Success');\r\n      fetchPerformanceData();\r\n    } catch (err) {\r\n      console.error('Error generating performance records:', err);\r\n      showToast('danger', 'Failed to generate performance records.', 'Error');\r\n    }\r\n  };\r\n\r\n  const updatePerformanceRecords = async () => {\r\n    try {\r\n      await api.post('/sales_performance/auto-update');\r\n      showToast('success', 'Performance records updated successfully.', 'Success');\r\n      fetchPerformanceData();\r\n    } catch (err) {\r\n      console.error('Error updating performance records:', err);\r\n      showToast('danger', 'Failed to update performance records.', 'Error');\r\n    }\r\n  };\r\n\r\n  // Calculate the number of working days between two dates\r\n  const calculateWorkingDays = (startDate, endDate) => {\r\n    const start = new Date(startDate);\r\n    const end = new Date(endDate);\r\n    let count = 0;\r\n\r\n    while (start <= end) {\r\n      const day = start.getDay();\r\n      if (day !== 0 && day !== 6) { // Exclude Sundays (0) and Saturdays (6)\r\n        count++;\r\n      }\r\n      start.setDate(start.getDate() + 1);\r\n    }\r\n\r\n    return count;\r\n  };\r\n\r\n  const enhancedPerformanceData = performanceData.map(performance => {\r\n    const target = targetDetails?.[performance.target_id]; // Get target details for calculations\r\n    const targetSalesCount = target?.target_sales_count || 1; // Avoid division by zero\r\n    const targetPremiumAmount = target?.target_premium_amount || 1; // Avoid division by zero\r\n    const workingDays = target ? calculateWorkingDays(target.period_start, target.period_end) : 1; // Avoid division by zero\r\n\r\n    return {\r\n      ...performance,\r\n      salesCountPercentage: ((performance.actual_sales_count / targetSalesCount) * 100).toFixed(2),\r\n      premiumAmountPercentage: ((performance.actual_premium_amount / targetPremiumAmount) * 100).toFixed(2),\r\n      criteriaMetCountPercentage: ((performance.criteria_met_count / workingDays) * 100).toFixed(2),\r\n    };\r\n  });\r\n\r\n  // Pagination handlers\r\n  const handleNextPage = () => {\r\n    if (currentPage < totalPages) {\r\n      setCurrentPage(prevPage => prevPage + 1);\r\n    }\r\n  };\r\n\r\n  const handlePreviousPage = () => {\r\n    if (currentPage > 1) {\r\n      setCurrentPage(prevPage => prevPage - 1);\r\n    }\r\n  };\r\n\r\n  const handleFilter = (e) => {\r\n    e.preventDefault();\r\n    setCurrentPage(1); // Reset to first page on filter\r\n    fetchPerformanceData(); // Fetch data with current filters\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-5\">\r\n      <h1 className=\"text-center mb-4\">Sales Performance</h1>\r\n      {loading && <Spinner animation=\"border\" variant=\"primary\" />}\r\n      {error && <p className=\"text-danger\">{error}</p>}\r\n\r\n      <Row className=\"mb-3\">\r\n        <Col xs={12} md={3}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Criteria Type\"\r\n            value={criteriaType}\r\n            onChange={(e) => setCriteriaType(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={3}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Criteria Value\"\r\n            value={criteriaValue}\r\n            onChange={(e) => setCriteriaValue(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={3}>\r\n          <Form.Control\r\n            type=\"text\"\r\n            placeholder=\"Target ID\"\r\n            value={targetId}\r\n            onChange={(e) => setTargetId(e.target.value)}\r\n          />\r\n        </Col>\r\n        <Col xs={12} md={3}>\r\n          <Button variant=\"primary\" onClick={handleFilter}>\r\n            Filter\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n\r\n      <Button variant=\"primary\" onClick={handleShowAddModal} className=\"mb-3\">\r\n        <FontAwesomeIcon icon={faPlus} /> Add Performance\r\n      </Button>\r\n      <Button variant=\"success\" onClick={generatePerformanceRecords} className=\"mb-3 ml-2\">\r\n        Generate Past Performances\r\n      </Button>\r\n      <Button variant=\"info\" onClick={updatePerformanceRecords} className=\"mb-3 ml-2\">\r\n        Update Performances\r\n      </Button>\r\n\r\n      <Table striped bordered hover responsive className=\"mt-3\">\r\n        <thead>\r\n          <tr>\r\n            <th>ID</th>\r\n            <th>Sales Manager</th>\r\n            <th>Actual Sales Count</th>\r\n            <th>% Sales Count</th>\r\n            <th>Actual Premium Amount</th>\r\n            <th>% Premium Amount</th>\r\n            <th>Target</th>\r\n            <th>Criteria Type</th>\r\n            <th>Criteria Value</th>\r\n            <th>Criteria Met Count</th>\r\n            <th>% Criteria Met Count</th>\r\n            <th>Performance Date</th>\r\n            <th>Actions</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {enhancedPerformanceData.map(performance => (\r\n            <tr key={performance.id}>\r\n              <td>{performance.id}</td>\r\n              <td>{salesManagers.find(manager => manager.id === performance.sales_manager_id)?.name}</td>\r\n              <td>{performance.actual_sales_count}</td>\r\n              <td>{performance.salesCountPercentage}%</td>\r\n              <td>{performance.actual_premium_amount}</td>\r\n              <td>{performance.premiumAmountPercentage}%</td>\r\n              <td>\r\n                <Button variant=\"link\" onClick={() => handleShowTargetDetailsModal(performance.target_id)}>\r\n                  {performance.target_id} <FontAwesomeIcon icon={faInfoCircle} />\r\n                </Button>\r\n              </td>\r\n              <td>{performance.criteria_type}</td>\r\n              <td>{performance.criteria_value}</td>\r\n              <td>{performance.criteria_met_count}</td>\r\n              <td>{performance.criteriaMetCountPercentage}%</td>\r\n              <td>{new Date(performance.performance_date).toLocaleDateString()}</td>\r\n              <td>\r\n                <Button variant=\"warning\" onClick={() => handleShowEditModal(performance)}>\r\n                  <FontAwesomeIcon icon={faEdit} /> Edit\r\n                </Button>\r\n                <Button variant=\"danger\" onClick={() => handleShowDeleteModal(performance)}>\r\n                  <FontAwesomeIcon icon={faTrashAlt} /> Delete\r\n                </Button>\r\n              </td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </Table>\r\n\r\n      {/* Pagination Controls */}\r\n      <div className=\"d-flex justify-content-center mt-4\">\r\n        <Button variant=\"secondary\" onClick={handlePreviousPage} disabled={currentPage === 1}>\r\n          Previous\r\n        </Button>\r\n        <span className=\"mx-2\">{`Page ${currentPage} of ${totalPages}`}</span>\r\n        <Button variant=\"secondary\" onClick={handleNextPage} disabled={currentPage === totalPages}>\r\n          Next\r\n        </Button>\r\n      </div>\r\n\r\n      {/* Add Performance Modal */}\r\n      <Modal show={showAddModal} onHide={handleCloseAddModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Add Performance</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form onSubmit={handleSubmit}>\r\n            <Form.Group controlId=\"formSalesManager\">\r\n              <Form.Label>Sales Manager</Form.Label>\r\n              <Form.Control as=\"select\" name=\"sales_manager_id\" required>\r\n                <option value=\"\">Select Sales Manager</option>\r\n                {salesManagers.map(manager => (\r\n                  <option key={manager.id} value={manager.id}>{manager.name}</option>\r\n                ))}\r\n              </Form.Control>\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formTargetId\">\r\n              <Form.Label>Target ID</Form.Label>\r\n              <Form.Control type=\"text\" name=\"target_id\" required />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formCriteriaType\">\r\n              <Form.Label>Criteria Type</Form.Label>\r\n              <Form.Control type=\"text\" name=\"criteria_type\" required />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formCriteriaValue\">\r\n              <Form.Label>Criteria Value</Form.Label>\r\n              <Form.Control type=\"text\" name=\"criteria_value\" required />\r\n            </Form.Group>\r\n            <Form.Group controlId=\"formPerformanceDate\">\r\n              <Form.Label>Performance Date</Form.Label>\r\n              <Form.Control type=\"datetime-local\" name=\"performance_date\" required />\r\n            </Form.Group>\r\n            <Button variant=\"primary\" type=\"submit\">Create</Button>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Edit Performance Modal */}\r\n      <Modal show={showEditModal} onHide={handleCloseEditModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Performance</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {currentPerformance && (\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"formSalesManager\">\r\n                <Form.Label>Sales Manager</Form.Label>\r\n                <Form.Control as=\"select\" name=\"sales_manager_id\" defaultValue={currentPerformance.sales_manager_id} required>\r\n                  <option value=\"\">Select Sales Manager</option>\r\n                  {salesManagers.map(manager => (\r\n                    <option key={manager.id} value={manager.id}>{manager.name}</option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formTargetId\">\r\n                <Form.Label>Target ID</Form.Label>\r\n                <Form.Control type=\"text\" name=\"target_id\" defaultValue={currentPerformance.target_id} required />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formCriteriaType\">\r\n                <Form.Label>Criteria Type</Form.Label>\r\n                <Form.Control type=\"text\" name=\"criteria_type\" defaultValue={currentPerformance.criteria_type} required />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formCriteriaValue\">\r\n                <Form.Label>Criteria Value</Form.Label>\r\n                <Form.Control type=\"text\" name=\"criteria_value\" defaultValue={currentPerformance.criteria_value} required />\r\n              </Form.Group>\r\n              <Form.Group controlId=\"formPerformanceDate\">\r\n                <Form.Label>Performance Date</Form.Label>\r\n                <Form.Control type=\"datetime-local\" name=\"performance_date\" defaultValue={currentPerformance.performance_date.slice(0, 16)} required />\r\n              </Form.Group>\r\n              <Button variant=\"primary\" type=\"submit\">Update</Button>\r\n            </Form>\r\n          )}\r\n        </Modal.Body>\r\n      </Modal>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal show={showDeleteModal} onHide={handleCloseDeleteModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Confirm Deletion</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <p>Are you sure you want to delete this performance record? This action cannot be undone.</p>\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseDeleteModal}>Cancel</Button>\r\n          <Button variant=\"danger\" onClick={deletePerformance}>Delete</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n\r\n      {/* Target Details Modal */}\r\n      <Modal show={showTargetDetailsModal} onHide={handleCloseTargetDetailsModal}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Target Details</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          {targetDetails && (\r\n            <div>\r\n              <p><strong>ID:</strong> {targetDetails.id}</p>\r\n              <p><strong>Target Sales Count:</strong> {targetDetails.target_sales_count}</p>\r\n              <p><strong>Target Premium Amount:</strong> {targetDetails.target_premium_amount}</p>\r\n              <p><strong>Criteria Type:</strong> {targetDetails.target_criteria_type}</p>\r\n              <p><strong>Criteria Value:</strong> {targetDetails.target_criteria_value}</p>\r\n              <p><strong>Period Start:</strong> {new Date(targetDetails.period_start).toLocaleDateString()}</p>\r\n              <p><strong>Period End:</strong> {new Date(targetDetails.period_end).toLocaleDateString()}</p>\r\n            </div>\r\n          )}\r\n        </Modal.Body>\r\n        <Modal.Footer>\r\n          <Button variant=\"secondary\" onClick={handleCloseTargetDetailsModal}>Close</Button>\r\n        </Modal.Footer>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SalesPerformancePage;\r\n","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix, useBootstrapBreakpoints, useBootstrapMinBreakpoint } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Row = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  // Need to define the default \"as\" during prop destructuring to be compatible with styled-components github.com/react-bootstrap/react-bootstrap/issues/3595\n  as: Component = 'div',\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'row');\n  const breakpoints = useBootstrapBreakpoints();\n  const minBreakpoint = useBootstrapMinBreakpoint();\n  const sizePrefix = `${decoratedBsPrefix}-cols`;\n  const classes = [];\n  breakpoints.forEach(brkPoint => {\n    const propValue = props[brkPoint];\n    delete props[brkPoint];\n    let cols;\n    if (propValue != null && typeof propValue === 'object') {\n      ({\n        cols\n      } = propValue);\n    } else {\n      cols = propValue;\n    }\n    const infix = brkPoint !== minBreakpoint ? `-${brkPoint}` : '';\n    if (cols != null) classes.push(`${sizePrefix}${infix}-${cols}`);\n  });\n  return /*#__PURE__*/_jsx(Component, {\n    ref: ref,\n    ...props,\n    className: classNames(className, decoratedBsPrefix, ...classes)\n  });\n});\nRow.displayName = 'Row';\nexport default Row;","\"use client\";\n\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { useBootstrapPrefix } from './ThemeProvider';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst Table = /*#__PURE__*/React.forwardRef(({\n  bsPrefix,\n  className,\n  striped,\n  bordered,\n  borderless,\n  hover,\n  size,\n  variant,\n  responsive,\n  ...props\n}, ref) => {\n  const decoratedBsPrefix = useBootstrapPrefix(bsPrefix, 'table');\n  const classes = classNames(className, decoratedBsPrefix, variant && `${decoratedBsPrefix}-${variant}`, size && `${decoratedBsPrefix}-${size}`, striped && `${decoratedBsPrefix}-${typeof striped === 'string' ? `striped-${striped}` : 'striped'}`, bordered && `${decoratedBsPrefix}-bordered`, borderless && `${decoratedBsPrefix}-borderless`, hover && `${decoratedBsPrefix}-hover`);\n  const table = /*#__PURE__*/_jsx(\"table\", {\n    ...props,\n    className: classes,\n    ref: ref\n  });\n  if (responsive) {\n    let responsiveClass = `${decoratedBsPrefix}-responsive`;\n    if (typeof responsive === 'string') {\n      responsiveClass = `${responsiveClass}-${responsive}`;\n    }\n    return /*#__PURE__*/_jsx(\"div\", {\n      className: responsiveClass,\n      children: table\n    });\n  }\n  return table;\n});\nexport default Table;"],"names":["_ref","showToast","performanceData","setPerformanceData","useState","salesManagers","setSalesManagers","loading","setLoading","error","setError","currentPerformance","setCurrentPerformance","showAddModal","setShowAddModal","showEditModal","setShowEditModal","showDeleteModal","setShowDeleteModal","showTargetDetailsModal","setShowTargetDetailsModal","targetDetails","setTargetDetails","currentPage","setCurrentPage","totalPages","setTotalPages","itemsPerPage","criteriaType","setCriteriaType","criteriaValue","setCriteriaValue","targetId","setTargetId","fetchSalesManagers","useCallback","async","response","api","get","params","type","role_id","data","console","fetchPerformanceData","per_page","page","criteria_type","criteria_value","target_id","performances","sales_performances","targetDetailsPromises","Set","map","performance","id","targetDetailsMap","Promise","all","reduce","acc","target","Math","ceil","total","err","_err$response","_err$response$data","errorMessage","message","useEffect","loadData","handleCloseAddModal","handleCloseEditModal","handleCloseDeleteModal","handleCloseTargetDetailsModal","handleSubmit","e","preventDefault","formData","FormData","sales_manager_id","actual_sales_count","actual_premium_amount","criteria_met_count","performance_date","put","editPerformance","post","addPerformance","enhancedPerformanceData","targetSalesCount","target_sales_count","targetPremiumAmount","target_premium_amount","workingDays","calculateWorkingDays","startDate","endDate","start","Date","end","count","day","getDay","setDate","getDate","period_start","period_end","salesCountPercentage","toFixed","premiumAmountPercentage","criteriaMetCountPercentage","_jsxs","className","children","_jsx","Spinner","animation","variant","Row","Col","xs","md","Form","Control","placeholder","value","onChange","Button","onClick","handleShowAddModal","FontAwesomeIcon","icon","faPlus","Table","striped","bordered","hover","responsive","_salesManagers$find","find","manager","name","handleShowTargetDetailsModal","faInfoCircle","toLocaleDateString","handleShowEditModal","faEdit","handleShowDeleteModal","faTrashAlt","handlePreviousPage","prevPage","disabled","handleNextPage","Modal","show","onHide","Header","closeButton","Title","Body","onSubmit","Group","controlId","Label","as","required","defaultValue","slice","Footer","delete","target_criteria_type","target_criteria_value","React","ref","bsPrefix","Component","props","decoratedBsPrefix","useBootstrapPrefix","breakpoints","useBootstrapBreakpoints","minBreakpoint","useBootstrapMinBreakpoint","sizePrefix","classes","forEach","brkPoint","propValue","cols","infix","push","classNames","displayName","borderless","size","table","responsiveClass"],"sourceRoot":""}