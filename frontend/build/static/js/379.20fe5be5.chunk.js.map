{"version":3,"file":"static/js/379.20fe5be5.chunk.js","mappings":"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","sources":["pages/LogsPage.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\r\nimport { Table, Spinner, Row, Col, Button, Form } from 'react-bootstrap';\r\nimport DatePicker from 'react-datepicker';\r\nimport 'react-datepicker/dist/react-datepicker.css';\r\nimport api from '../services/api';\r\nimport { FaSearch, FaArrowLeft, FaArrowRight, FaAngleDoubleLeft, FaAngleDoubleRight, FaUndo } from 'react-icons/fa';\r\n\r\nconst LogsPage = ({ showToast }) => {\r\n  const [logs, setLogs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  const [filter, setFilter] = useState({\r\n    type: '',\r\n    level: '',\r\n    startDate: null,\r\n    endDate: null,\r\n  });\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [itemsPerPage] = useState(50); // Default items per page\r\n  const [totalPages, setTotalPages] = useState(1);\r\n\r\n  // Fetch logs with filters\r\n  const fetchLogs = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const params = {\r\n        page: currentPage,\r\n        per_page: itemsPerPage,\r\n        ...(filter.type && { type: filter.type }),\r\n        ...(filter.level && { level: filter.level }),\r\n        ...(filter.startDate && { start_date: filter.startDate.toISOString().split('T')[0] }),\r\n        ...(filter.endDate && { end_date: filter.endDate.toISOString().split('T')[0] }),\r\n      };\r\n\r\n      const response = await api.get('/logs/', { params });\r\n      setLogs(response.data.logs || []);\r\n      setTotalPages(response.data.total_pages || 1);\r\n    } catch (error) {\r\n      console.error('Error fetching logs:', error);\r\n      setError('Failed to fetch logs. Please try again later.');\r\n      showToast('danger', 'Failed to fetch logs. Please try again later.', 'Error');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, [currentPage, itemsPerPage, filter, showToast]);\r\n\r\n  useEffect(() => {\r\n    fetchLogs();\r\n  }, [fetchLogs]);\r\n\r\n  // Handle filter submission\r\n  const handleFilter = () => {\r\n    setCurrentPage(1); // Reset to the first page when filtering\r\n    fetchLogs();\r\n  };\r\n\r\n  // Handle reset filters\r\n  const handleResetFilters = () => {\r\n    setFilter({\r\n      type: '',\r\n      level: '',\r\n      startDate: null,\r\n      endDate: null,\r\n    });\r\n    setCurrentPage(1);\r\n    fetchLogs();\r\n  };\r\n\r\n  // Handle page change\r\n  const handlePageChange = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Calculate pagination range\r\n  const maxPageNumbers = 5;\r\n  const startPage = Math.max(1, currentPage - Math.floor(maxPageNumbers / 2));\r\n  const endPage = Math.min(totalPages, startPage + maxPageNumbers - 1);\r\n\r\n  return (\r\n    <div style={{ marginTop: '20px', padding: '20px' }}>\r\n      <Row className=\"mb-4\">\r\n        <Col>\r\n          <h2>Logs</h2>\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Filter Section */}\r\n      <Form className=\"mb-4\">\r\n        <Row className=\"align-items-end\">\r\n          <Col md={2}>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={filter.type}\r\n              onChange={(e) => setFilter({ ...filter, type: e.target.value })}\r\n            >\r\n              <option value=\"\">Log Type</option>\r\n              <option value=\"general\">General</option>\r\n              <option value=\"error\">Error</option>\r\n              <option value=\"success\">Success</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Col md={2}>\r\n            <Form.Control\r\n              as=\"select\"\r\n              value={filter.level}\r\n              onChange={(e) => setFilter({ ...filter, level: e.target.value })}\r\n            >\r\n              <option value=\"\">Log Level</option>\r\n              <option value=\"INFO\">INFO</option>\r\n              <option value=\"WARNING\">WARNING</option>\r\n              <option value=\"ERROR\">ERROR</option>\r\n            </Form.Control>\r\n          </Col>\r\n          <Col md={2}>\r\n            <DatePicker\r\n              selected={filter.startDate}\r\n              onChange={(date) => setFilter({ ...filter, startDate: date })}\r\n              placeholderText=\"Start Date\"\r\n              className=\"form-control\"\r\n            />\r\n          </Col>\r\n          <Col md={2}>\r\n            <DatePicker\r\n              selected={filter.endDate}\r\n              onChange={(date) => setFilter({ ...filter, endDate: date })}\r\n              placeholderText=\"End Date\"\r\n              className=\"form-control\"\r\n            />\r\n          </Col>\r\n          <Col md={2}>\r\n            <Button variant=\"primary\" onClick={handleFilter}>\r\n              <FaSearch /> Filter\r\n            </Button>\r\n            <Button variant=\"secondary\" onClick={handleResetFilters} className=\"ms-2\">\r\n              <FaUndo /> Reset\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n\r\n      {error && <p className=\"text-center text-danger\">{error}</p>}\r\n\r\n      {/* Loading Spinner */}\r\n      {loading && <div className=\"text-center my-3\"><Spinner animation=\"border\" /></div>}\r\n\r\n      {/* Logs Table */}\r\n      {!loading && (\r\n        <Table striped bordered hover responsive>\r\n          <thead>\r\n            <tr>\r\n              <th>#</th>\r\n              <th>Timestamp</th>\r\n              <th>Type</th>\r\n              <th>Level</th>\r\n              <th>Message</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {logs.length > 0 ? (\r\n              logs.map((log, index) => (\r\n                <tr key={log.id || index}>\r\n                  <td>{(currentPage - 1) * itemsPerPage + index + 1}</td>\r\n                  <td>{new Date(log.timestamp).toLocaleString()}</td>\r\n                  <td>{log.type}</td>\r\n                  <td>{log.level}</td>\r\n                  <td>{log.message}</td>\r\n                </tr>\r\n              ))\r\n            ) : (\r\n              <tr>\r\n                <td colSpan=\"5\" className=\"text-center\">No logs found</td>\r\n              </tr>\r\n            )}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n\r\n      {/* Pagination Controls */}\r\n      {!loading && totalPages > 1 && (\r\n        <Row className=\"mt-3\">\r\n          <Col className=\"text-center\">\r\n            {currentPage > 1 && (\r\n              <>\r\n                <Button variant=\"secondary\" onClick={() => handlePageChange(1)} className=\"mx-1\">\r\n                  <FaAngleDoubleLeft />\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={() => handlePageChange(currentPage - 1)} className=\"mx-1\">\r\n                  <FaArrowLeft />\r\n                </Button>\r\n              </>\r\n            )}\r\n            {[...Array(endPage - startPage + 1).keys()].map((number) => (\r\n              <Button\r\n                key={startPage + number}\r\n                variant={currentPage === startPage + number ? 'primary' : 'secondary'}\r\n                onClick={() => handlePageChange(startPage + number)}\r\n                className=\"mx-1\"\r\n              >\r\n                {startPage + number}\r\n              </Button>\r\n            ))}\r\n            {currentPage < totalPages && (\r\n              <>\r\n                <Button variant=\"secondary\" onClick={() => handlePageChange(currentPage + 1)} className=\"mx-1\">\r\n                  <FaArrowRight />\r\n                </Button>\r\n                <Button variant=\"secondary\" onClick={() => handlePageChange(totalPages)} className=\"mx-1\">\r\n                  <FaAngleDoubleRight />\r\n                </Button>\r\n              </>\r\n            )}\r\n          </Col>\r\n        </Row>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogsPage;\r\n"],"names":["_ref","showToast","logs","setLogs","useState","loading","setLoading","error","setError","filter","setFilter","type","level","startDate","endDate","currentPage","setCurrentPage","itemsPerPage","totalPages","setTotalPages","fetchLogs","useCallback","async","params","page","per_page","start_date","toISOString","split","end_date","response","api","get","data","total_pages","console","useEffect","handlePageChange","pageNumber","startPage","Math","max","floor","maxPageNumbers","endPage","min","_jsxs","style","marginTop","padding","children","_jsx","Row","className","Col","Form","md","Control","as","value","onChange","e","target","DatePicker","selected","date","placeholderText","Button","variant","onClick","handleFilter","FaSearch","handleResetFilters","FaUndo","Spinner","animation","Table","striped","bordered","hover","responsive","length","map","log","index","Date","timestamp","toLocaleString","message","id","colSpan","_Fragment","FaAngleDoubleLeft","FaArrowLeft","Array","keys","number","FaArrowRight","FaAngleDoubleRight"],"sourceRoot":""}