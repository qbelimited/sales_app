{"version":3,"file":"static/js/199.32196449.chunk.js","mappings":"sQASA,SAAeA,EAAAA,EAAAA,IAA4BC,EAAAA,EAAAA,KAAK,OAAQ,CACtDC,EAAG,oLACD,U,kFCTG,SAASC,EAAoBC,GAClC,OAAOC,EAAAA,EAAAA,IAAqB,UAAWD,EACzC,CACA,MACA,GADoBE,EAAAA,EAAAA,GAAuB,UAAW,CAAC,OAAQ,YAAa,aAAc,eAAgB,aAAc,YAAa,eAAgB,iBAAkB,eAAgB,eAAgB,WAAY,YAAa,wBAAyB,0BAA2B,YAAa,wBAAyB,0BAA2B,WAAY,SAAU,kBAAmB,oBAAqB,gBAAiB,kBAAmB,SAAU,cAAe,eAAgB,qBAAsB,uBAAwB,OAAQ,YAAa,aAAc,mBAAoB,qBAAsB,QAAS,aAAc,cAAe,aAAc,kBAAmB,mBAAoB,yBAA0B,2BAA4B,iCAAkC,mCAAoC,+BAAgC,iCAAkC,iBCgC92BC,GAAWC,EAAAA,EAAAA,IAAO,MAAO,CAC7BC,KAAM,UACNL,KAAM,OACNM,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,GACE,MACJG,EAAK,UACLC,EAAS,UACTC,EAAS,SACTC,EAAQ,KACRC,EAAI,QACJC,GACEN,EACJ,MAAO,CAAC,CACN,CAAC,MAAMO,EAAYC,UAAWT,EAAOS,QACpC,CACD,CAAC,MAAMD,EAAYC,UAAWT,EAAO,UAASU,EAAAA,EAAAA,GAAWJ,OACxD,CACD,CAAC,MAAME,EAAYC,UAAWT,EAAO,eAAcU,EAAAA,EAAAA,GAAWR,OAC7D,CACD,CAAC,MAAMM,EAAYG,QAASX,EAAOW,MAClC,CACD,CAAC,MAAMH,EAAYG,QAASX,EAAO,QAAOU,EAAAA,EAAAA,GAAWJ,OACpD,CACD,CAAC,MAAME,EAAYG,QAASX,EAAO,aAAYU,EAAAA,EAAAA,GAAWP,OACzD,CACD,CAAC,MAAMK,EAAYI,cAAeZ,EAAOY,YACxC,CACD,CAAC,MAAMJ,EAAYI,cAAeZ,EAAO,cAAaU,EAAAA,EAAAA,GAAWJ,OAChE,CACD,CAAC,MAAME,EAAYI,cAAeZ,EAAO,mBAAkBU,EAAAA,EAAAA,GAAWR,OACrE,CACD,CAAC,MAAMM,EAAYI,cAAeZ,EAAO,cAAaU,EAAAA,EAAAA,GAAWH,WAAgBG,EAAAA,EAAAA,GAAWR,OAC3FF,EAAOa,KAAMb,EAAO,QAAOU,EAAAA,EAAAA,GAAWJ,MAAUN,EAAO,SAAQU,EAAAA,EAAAA,GAAWR,MAAWE,GAAaJ,EAAOI,UAAWA,GAAuB,YAAVF,GAAuBF,EAAO,kBAAiBU,EAAAA,EAAAA,GAAWR,OAAYG,GAAYL,EAAOc,UAAWT,GAAsB,YAAVH,GAAuBF,EAAO,kBAAiBU,EAAAA,EAAAA,GAAWR,MAAWF,EAAOO,GAAUP,EAAO,GAAGO,KAAUG,EAAAA,EAAAA,GAAWR,MAAU,GAnCtWN,EAqCdmB,EAAAA,EAAAA,IAAUC,IAEP,IAFQ,MACZC,GACDD,EACC,MAAME,EAAmC,UAAvBD,EAAME,QAAQC,KAAmBH,EAAME,QAAQE,KAAK,KAAOJ,EAAME,QAAQE,KAAK,KAChG,MAAO,CACLC,SAAU,OACVC,WAAYN,EAAMO,WAAWD,WAC7BE,SAAUR,EAAMO,WAAWE,QAAQ,IACnCC,QAAS,cACTC,WAAY,SACZC,eAAgB,SAChBC,OAAQ,GACR5B,OAAQe,EAAMc,MAAQd,GAAOE,QAAQa,KAAKC,QAC1CC,iBAAkBjB,EAAMc,MAAQd,GAAOE,QAAQgB,OAAOC,SACtDC,aAAc,GACdC,WAAY,SACZC,WAAYtB,EAAMuB,YAAYC,OAAO,CAAC,mBAAoB,eAE1DC,OAAQ,QAERC,QAAS,EACTC,eAAgB,OAChBC,OAAQ,EAERC,QAAS,EAETC,cAAe,SACfC,UAAW,aACX,CAAC,KAAKxC,EAAYyC,YAAa,CAC7BC,SAAUjC,EAAMc,MAAQd,GAAOE,QAAQgB,OAAOgB,gBAC9CC,cAAe,QAEjB,CAAC,MAAM5C,EAAYC,UAAW,CAC5B4C,WAAY,EACZC,aAAc,EACdC,MAAO,GACPzB,OAAQ,GACR5B,MAAOe,EAAMc,KAAOd,EAAMc,KAAKZ,QAAQqC,KAAKC,mBAAqBvC,EACjEO,SAAUR,EAAMO,WAAWE,QAAQ,KAErC,CAAC,MAAMlB,EAAYkD,sBAAuB,CACxCxD,OAAQe,EAAMc,MAAQd,GAAOE,QAAQc,QAAQ0B,aAC7CzB,iBAAkBjB,EAAMc,MAAQd,GAAOE,QAAQc,QAAQ2B,MAEzD,CAAC,MAAMpD,EAAYqD,wBAAyB,CAC1C3D,OAAQe,EAAMc,MAAQd,GAAOE,QAAQ2C,UAAUH,aAC/CzB,iBAAkBjB,EAAMc,MAAQd,GAAOE,QAAQ2C,UAAUF,MAE3D,CAAC,MAAMpD,EAAYuD,eAAgB,CACjCV,WAAY,EACZC,aAAc,EACdC,MAAO,GACPzB,OAAQ,GACRL,SAAUR,EAAMO,WAAWE,QAAQ,KAErC,CAAC,MAAMlB,EAAYG,QAAS,CAC1B0C,WAAY,EACZC,aAAc,GAEhB,CAAC,MAAM9C,EAAYI,cAAe,CAChCoD,wBAAyB,cACzB9D,MAAOe,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQa,KAAKiC,0BAA2BC,EAAAA,EAAAA,IAAMjD,EAAME,QAAQa,KAAKC,QAAS,KACjHR,SAAU,GACViB,OAAQ,UACRyB,OAAQ,eACR,UAAW,CACTjE,MAAOe,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQa,KAAKiC,yBAA0BC,EAAAA,EAAAA,IAAMjD,EAAME,QAAQa,KAAKC,QAAS,MAGpHmC,SAAU,CAAC,CACTrE,MAAO,CACLO,KAAM,SAER+D,MAAO,CACLvC,OAAQ,GACR,CAAC,MAAMtB,EAAYG,QAAS,CAC1Bc,SAAU,GACV4B,WAAY,EACZC,aAAc,GAEhB,CAAC,MAAM9C,EAAYI,cAAe,CAChCa,SAAU,GACV6B,YAAa,EACbD,YAAa,QAGbiB,OAAOC,QAAQtD,EAAME,SAASqD,QAAOC,IAAA,IAAE,CAAEC,GAAMD,EAAA,OAAKC,GAASA,EAAMC,MAAQD,EAAMf,YAAY,IAAEiB,KAAIC,IAAa,IAAX3E,GAAM2E,EAC/G,MAAO,CACL9E,MAAO,CACLG,SAEFmE,MAAO,CACLnC,iBAAkBjB,EAAMc,MAAQd,GAAOE,QAAQjB,GAAOyE,KACtDzE,OAAQe,EAAMc,MAAQd,GAAOE,QAAQjB,GAAOyD,aAC5C,CAAC,MAAMnD,EAAYI,cAAe,CAChCV,MAAOe,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQjB,GAAO4E,8BAA+BZ,EAAAA,EAAAA,IAAMjD,EAAME,QAAQjB,GAAOyD,aAAc,IAC9H,oBAAqB,CACnBzD,OAAQe,EAAMc,MAAQd,GAAOE,QAAQjB,GAAOyD,gBAInD,IACC,CACF5D,MAAOA,GAASA,EAAMI,YAAcJ,EAAMG,MAC1CmE,MAAO,CACL,CAAC,MAAM7D,EAAYG,QAAS,CAC1BT,MAAOe,EAAMc,KAAOd,EAAMc,KAAKZ,QAAQqC,KAAKuB,iBAAmB7D,KAGlE,CACDnB,MAAOA,GAASA,EAAMI,YAAcJ,EAAMG,OAAyB,YAAhBH,EAAMG,MACzDmE,MAAO,CACL,CAAC,MAAM7D,EAAYG,QAAS,CAC1BT,MAAO,aAGV,CACDH,MAAO,CACLM,UAAU,GAEZgE,MAAO,CACL,CAAC,KAAK7D,EAAYwE,gBAAiB,CACjC9C,gBAAiBjB,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQgB,OAAO8C,0BAA0BhE,EAAMc,KAAKZ,QAAQgB,OAAO+C,qBAAqBjE,EAAMc,KAAKZ,QAAQgB,OAAOgD,kBAAmBjB,EAAAA,EAAAA,IAAMjD,EAAME,QAAQgB,OAAOC,SAAUnB,EAAME,QAAQgB,OAAO+C,gBAAkBjE,EAAME,QAAQgB,OAAOgD,oBAGvRb,OAAOC,QAAQtD,EAAME,SAASqD,QAAOY,IAAA,IAAE,CAAEV,GAAMU,EAAA,OAAKV,GAASA,EAAMd,IAAI,IAAEgB,KAAIS,IAAa,IAAXnF,GAAMmF,EACzF,MAAO,CACLtF,MAAO,CACLG,QACAG,UAAU,GAEZgE,MAAO,CACL,CAAC,KAAK7D,EAAYwE,gBAAiB,CACjCM,YAAarE,EAAMc,MAAQd,GAAOE,QAAQjB,GAAO0D,OAGtD,IACC,CACF7D,MAAO,CACLK,WAAW,GAEbiE,MAAO,CACLkB,WAAY,OACZvB,wBAAyB,cACzBtB,OAAQ,UACR,UAAW,CACTR,gBAAiBjB,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQgB,OAAO8C,0BAA0BhE,EAAMc,KAAKZ,QAAQgB,OAAO+C,qBAAqBjE,EAAMc,KAAKZ,QAAQgB,OAAOqD,kBAAmBtB,EAAAA,EAAAA,IAAMjD,EAAME,QAAQgB,OAAOC,SAAUnB,EAAME,QAAQgB,OAAO+C,gBAAkBjE,EAAME,QAAQgB,OAAOqD,eAEzR,CAAC,KAAKhF,EAAYwE,gBAAiB,CACjC9C,gBAAiBjB,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQgB,OAAO8C,0BAA0BhE,EAAMc,KAAKZ,QAAQgB,OAAO+C,qBAAqBjE,EAAMc,KAAKZ,QAAQgB,OAAOgD,kBAAmBjB,EAAAA,EAAAA,IAAMjD,EAAME,QAAQgB,OAAOC,SAAUnB,EAAME,QAAQgB,OAAO+C,gBAAkBjE,EAAME,QAAQgB,OAAOgD,eAEzR,WAAY,CACVM,WAAYxE,EAAMc,MAAQd,GAAOyE,QAAQ,SAGzCpB,OAAOC,QAAQtD,EAAME,SAASqD,QAAOmB,IAAA,IAAE,CAAEjB,GAAMiB,EAAA,OAAKjB,GAASA,EAAMd,IAAI,IAAEgB,KAAIgB,IAAA,IAAE1F,GAAM0F,EAAA,MAAM,CAC/F7F,MAAO,CACLG,QACAE,WAAW,GAEbiE,MAAO,CACL,CAAC,cAAc7D,EAAYwE,gBAAiB,CAC1C9C,iBAAkBjB,EAAMc,MAAQd,GAAOE,QAAQjB,GAAO0D,OAG3D,IAAI,CACH7D,MAAO,CACLQ,QAAS,YAEX8D,MAAO,CACLnC,gBAAiB,cACjBW,OAAQ5B,EAAMc,KAAO,aAAad,EAAMc,KAAKZ,QAAQqC,KAAKqC,gBAAkB,aAAoC,UAAvB5E,EAAME,QAAQC,KAAmBH,EAAME,QAAQE,KAAK,KAAOJ,EAAME,QAAQE,KAAK,OACvK,CAAC,KAAKb,EAAYJ,mBAAoB,CACpC8B,iBAAkBjB,EAAMc,MAAQd,GAAOE,QAAQgB,OAAO2D,OAExD,CAAC,KAAKtF,EAAYwE,gBAAiB,CACjC9C,iBAAkBjB,EAAMc,MAAQd,GAAOE,QAAQgB,OAAO4D,OAExD,CAAC,MAAMvF,EAAYC,UAAW,CAC5B4C,WAAY,GAEd,CAAC,MAAM7C,EAAYuD,eAAgB,CACjCV,WAAY,GAEd,CAAC,MAAM7C,EAAYG,QAAS,CAC1B0C,WAAY,GAEd,CAAC,MAAM7C,EAAYwF,aAAc,CAC/B3C,WAAY,GAEd,CAAC,MAAM7C,EAAYI,cAAe,CAChC0C,YAAa,GAEf,CAAC,MAAM9C,EAAYyF,mBAAoB,CACrC3C,YAAa,QAGbgB,OAAOC,QAAQtD,EAAME,SAASqD,QAAO0B,IAAA,IAAE,CAAExB,GAAMwB,EAAA,OAAKxB,GAASA,EAAMC,IAAI,IAC5EC,KAAIuB,IAAA,IAAEjG,GAAMiG,EAAA,MAAM,CACjBpG,MAAO,CACLQ,QAAS,WACTL,SAEFmE,MAAO,CACLnE,OAAQe,EAAMc,MAAQd,GAAOE,QAAQjB,GAAOyE,KAC5C9B,OAAQ,aAAa5B,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQjB,GAAOkG,sBAAuBlC,EAAAA,EAAAA,IAAMjD,EAAME,QAAQjB,GAAOyE,KAAM,MAC5H,CAAC,KAAKnE,EAAYJ,mBAAoB,CACpC8B,gBAAiBjB,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQjB,GAAOkG,iBAAiBnF,EAAMc,KAAKZ,QAAQgB,OAAOqD,iBAAkBtB,EAAAA,EAAAA,IAAMjD,EAAME,QAAQjB,GAAOyE,KAAM1D,EAAME,QAAQgB,OAAOqD,eAErL,CAAC,KAAKhF,EAAYwE,gBAAiB,CACjC9C,gBAAiBjB,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQjB,GAAOkG,iBAAiBnF,EAAMc,KAAKZ,QAAQgB,OAAOgD,iBAAkBjB,EAAAA,EAAAA,IAAMjD,EAAME,QAAQjB,GAAOyE,KAAM1D,EAAME,QAAQgB,OAAOgD,eAErL,CAAC,MAAM3E,EAAYI,cAAe,CAChCV,MAAOe,EAAMc,KAAO,QAAQd,EAAMc,KAAKZ,QAAQjB,GAAOkG,sBAAuBlC,EAAAA,EAAAA,IAAMjD,EAAME,QAAQjB,GAAOyE,KAAM,IAC9G,oBAAqB,CACnBzE,OAAQe,EAAMc,MAAQd,GAAOE,QAAQjB,GAAOyE,QAInD,KACF,KAEG0B,GAAYzG,EAAAA,EAAAA,IAAO,OAAQ,CAC/BC,KAAM,UACNL,KAAM,QACNM,kBAAmBA,CAACC,EAAOC,KACzB,MAAM,WACJC,GACEF,GACE,KACJO,GACEL,EACJ,MAAO,CAACD,EAAOsG,MAAOtG,EAAO,SAAQU,EAAAA,EAAAA,GAAWJ,MAAS,GAV3CV,CAYf,CACD2G,SAAU,SACVC,aAAc,WACdC,YAAa,GACbC,aAAc,GACdpE,WAAY,SACZ8B,SAAU,CAAC,CACTrE,MAAO,CACLQ,QAAS,YAEX8D,MAAO,CACLoC,YAAa,GACbC,aAAc,KAEf,CACD3G,MAAO,CACLO,KAAM,SAER+D,MAAO,CACLoC,YAAa,EACbC,aAAc,IAEf,CACD3G,MAAO,CACLO,KAAM,QACNC,QAAS,YAEX8D,MAAO,CACLoC,YAAa,EACbC,aAAc,OAIpB,SAASC,EAAsBC,GAC7B,MAA6B,cAAtBA,EAAcC,KAA6C,WAAtBD,EAAcC,GAC5D,CAKA,MAkOA,EAlO0BC,EAAAA,YAAiB,SAAcC,EAASC,GAChE,MAAMjH,GAAQkH,EAAAA,EAAAA,GAAgB,CAC5BlH,MAAOgH,EACPlH,KAAM,aAGNY,OAAQyG,EAAU,UAClBC,EACA/G,UAAWgH,EAAa,MACxBlH,EAAQ,UACRmH,UAAWC,EACX1G,WAAY2G,EAAc,SAC1BtE,GAAW,EACXtC,KAAM6G,EAAQ,MACdlB,EAAK,QACLmB,EAAO,SACPpH,EAAQ,UACRqH,EAAS,QACTC,EAAO,KACPrH,EAAO,SAAQ,QACfC,EAAU,SAAQ,SAClBqH,EAAQ,sBACRC,GAAwB,KAErBC,GACD/H,EACEgI,EAAUjB,EAAAA,OAAa,MACvBkB,GAAYC,EAAAA,EAAAA,GAAWF,EAASf,GAChCkB,EAAwBC,IAE5BA,EAAMC,kBACF/H,GACFA,EAAS8H,EACX,EAwBI/H,KAA8B,IAAlBgH,IAA2BK,IAAiBL,EACxDC,EAAYjH,GAAaC,EAAWgI,EAAAA,EAAaf,GAAiB,MAClErH,EAAa,IACdF,EACHsH,YACApE,WACA3C,OACAJ,QACAC,UAAwB2G,EAAAA,eAAqBU,IAAYA,EAASzH,MAAMG,OAAiBA,EACzFG,WAAYA,EACZD,YACAG,WAEI+H,EAjZkBrI,KACxB,MAAM,QACJqI,EAAO,SACPrF,EAAQ,KACR3C,EAAI,MACJJ,EAAK,UACLC,EAAS,SACTE,EAAQ,UACRD,EAAS,QACTG,GACEN,EACEsI,EAAQ,CACZ1H,KAAM,CAAC,OAAQN,EAAS0C,GAAY,WAAY,QAAOvC,EAAAA,EAAAA,GAAWJ,KAAS,SAAQI,EAAAA,EAAAA,GAAWR,KAAUE,GAAa,YAAaA,GAAa,kBAAiBM,EAAAA,EAAAA,GAAWR,KAAUG,GAAY,YAAaA,GAAY,kBAAiBK,EAAAA,EAAAA,GAAWR,KAAU,GAAGK,KAAUG,EAAAA,EAAAA,GAAWR,MACxRoG,MAAO,CAAC,QAAS,SAAQ5F,EAAAA,EAAAA,GAAWJ,MACpCG,OAAQ,CAAC,SAAU,UAASC,EAAAA,EAAAA,GAAWJ,KAAS,eAAcI,EAAAA,EAAAA,GAAWR,MACzES,KAAM,CAAC,OAAQ,QAAOD,EAAAA,EAAAA,GAAWJ,KAAS,aAAYI,EAAAA,EAAAA,GAAWP,MACjES,WAAY,CAAC,aAAc,cAAaF,EAAAA,EAAAA,GAAWJ,KAAS,mBAAkBI,EAAAA,EAAAA,GAAWR,KAAU,cAAaQ,EAAAA,EAAAA,GAAWH,WAAgBG,EAAAA,EAAAA,GAAWR,OAExJ,OAAOsI,EAAAA,EAAAA,GAAeD,EAAOhJ,EAAqB+I,EAAQ,EA+X1CG,CAAkBxI,GAC5ByI,EAAYrB,IAAcgB,EAAAA,EAAa,CAC3ChB,UAAWC,GAAiB,MAC5BqB,sBAAuBL,EAAQtD,gBAC3B3E,GAAY,CACduI,eAAe,IAEf,CAAC,EACL,IAAIhI,EAAa,KACbP,IACFO,EAAa2G,GAA+BT,EAAAA,eAAqBS,GAAiCT,EAAAA,aAAmBS,EAAgB,CACnIJ,WAAW0B,EAAAA,EAAAA,GAAKtB,EAAexH,MAAMoH,UAAWmB,EAAQ1H,YACxD6G,QAASS,KACQ7I,EAAAA,EAAAA,KAAKyJ,EAAY,CAClC3B,WAAW0B,EAAAA,EAAAA,GAAKP,EAAQ1H,YACxB6G,QAASS,KAGb,IAAIzH,EAAS,KACTyG,GAA2BJ,EAAAA,eAAqBI,KAClDzG,EAAsBqG,EAAAA,aAAmBI,EAAY,CACnDC,WAAW0B,EAAAA,EAAAA,GAAKP,EAAQ7H,OAAQyG,EAAWnH,MAAMoH,cAGrD,IAAIxG,EAAO,KAWX,OAVI6G,GAAyBV,EAAAA,eAAqBU,KAChD7G,EAAoBmG,EAAAA,aAAmBU,EAAU,CAC/CL,WAAW0B,EAAAA,EAAAA,GAAKP,EAAQ3H,KAAM6G,EAASzH,MAAMoH,eAQ7B4B,EAAAA,EAAAA,MAAMpJ,EAAU,CAClCqJ,GAAI3B,EACJF,WAAW0B,EAAAA,EAAAA,GAAKP,EAAQzH,KAAMsG,GAC9BlE,YAAU7C,IAAa6C,SAAkBgG,EACzCxB,QAASA,EACTC,UA3EoBS,IAEhBA,EAAMe,gBAAkBf,EAAMgB,QAAUxC,EAAsBwB,IAGhEA,EAAMiB,iBAEJ1B,GACFA,EAAUS,EACZ,EAmEAR,QAjEkBQ,IAEdA,EAAMe,gBAAkBf,EAAMgB,QAC5B9I,GAAYsG,EAAsBwB,IACpC9H,EAAS8H,GAGTR,GACFA,EAAQQ,EACV,EAyDAnB,IAAKgB,EACLJ,SAAUC,GAAyB5E,GAAY,EAAI2E,EACnD3H,WAAYA,KACTyI,KACAZ,EACHuB,SAAU,CAAC5I,GAAUE,GAAmBtB,EAAAA,EAAAA,KAAKgH,EAAW,CACtDc,WAAW0B,EAAAA,EAAAA,GAAKP,EAAQhC,OACxBrG,WAAYA,EACZoJ,SAAU/C,IACR1F,IAER,I,wGChdA,MA2cA,EA3ckCI,IAAoB,IAADsI,EAAAC,EAAA,IAAlB,UAAEC,GAAWxI,EAC9C,MAAOyI,EAAiBC,IAAsBC,EAAAA,EAAAA,UAAS,KAChDC,EAASC,IAAcF,EAAAA,EAAAA,WAAS,IAChCG,EAAoBC,IAAyBJ,EAAAA,EAAAA,WAAS,IACtDK,EAAwBC,IAA6BN,EAAAA,EAAAA,WAAS,IAC9DO,EAAmBC,IAAwBR,EAAAA,EAAAA,UAAS,OACpDS,EAAWC,IAAgBV,EAAAA,EAAAA,UAAS,QACpCW,EAAeC,IAAoBZ,EAAAA,EAAAA,UAAS,CAAE9J,KAAM,GAAI2K,KAAM,GAAIC,aAAc,GAAIC,WAAY,GAAIC,SAAU,MAC9GA,EAAUC,IAAejB,EAAAA,EAAAA,UAAS,KAClCkB,EAAkBC,IAAuBnB,EAAAA,EAAAA,UAAS,KAClDoB,EAAeC,IAAoBrB,EAAAA,EAAAA,UAAS,KAC5CsB,EAAaC,IAAkBvB,EAAAA,EAAAA,UAAS,IACxCwB,EAAYC,IAAiBzB,EAAAA,EAAAA,UAAS,IACtC0B,EAAgBC,IAAqB3B,EAAAA,EAAAA,WAAS,GAE/C4B,EAAaC,KAAKC,MAAMC,aAAaC,QAAQ,SAC7CC,EAAUC,SAAmB,OAAVN,QAAU,IAAVA,OAAU,EAAVA,EAAYK,WAAsB,OAAVL,QAAU,IAAVA,GAAgB,QAANjC,EAAViC,EAAYO,YAAI,IAAAxC,OAAN,EAAVA,EAAkByC,KAInEC,EAAAA,EAAAA,YAAU,KACqBC,WAC3BpC,GAAW,GACX,IACE,MACMqC,SADiBC,EAAAA,EAAIC,IAAI,gEACAC,KAAKC,iBAG9BC,EAAqBL,EAAc1H,QAAOgI,GAAaA,EAAU9B,aAAea,EAAWQ,KAE7FQ,EAAmBE,OAAS,GAE9B/C,EAAmB6C,GACnBnB,EAAc,GACdE,GAAkB,KAGlB5B,EAAmBwC,EAAcQ,MAvBf,IAuBsBzB,EAAc,GAvBpC,GAuB4DA,IAC9EG,EAAcuB,KAAKC,KAAKV,EAAcO,OAxBpB,KAyBlBnB,GAAkB,GAEtB,CAAE,MAAOuB,GACPC,QAAQD,MAAM,mCAAoCA,GAClDrD,EAAU,QAAS,4DAA6D,QAClF,CAAC,QACCK,GAAW,EACb,GAEFkD,EAAsB,GACrB,CAACvD,EAAWyB,EAAaM,EAAWQ,KAGvC,MAAMiB,GAAgBC,EAAAA,EAAAA,cAAYhB,UAChC,IACE,MAAMiB,QAAuBf,EAAAA,EAAIC,IAAI,sDACrCxB,EAAYsC,EAAeb,KAAK1B,UAAY,GAC9C,CAAE,MAAOkC,GACPC,QAAQD,MAAM,2BAA4BA,EAC5C,IACC,IAEGM,GAAqBF,EAAAA,EAAAA,cAAYhB,UACrC,IACE,MAAMmB,QAAiBjB,EAAAA,EAAIC,IAAI,aAAc,CAC3CiB,OAAQ,CAAEC,KAAM,mBAAoB1B,QAAS,KAE/CZ,EAAiBoC,EAASf,KAC5B,CAAE,MAAOQ,GACPC,QAAQD,MAAM,iCAChB,IACC,KAEHb,EAAAA,EAAAA,YAAU,KACRgB,IACAG,GAAoB,GACnB,CAACH,EAAeG,IAGnB,MAAMI,EAAYC,GAAetC,EAAesC,GAG1CC,EAA2B,SAACrM,GAA4B,IAAtBoL,EAASkB,UAAAjB,OAAA,QAAAxD,IAAAyE,UAAA,GAAAA,UAAA,GAAG,KAClDrD,EAAajJ,GACToL,GACFrC,EAAqBqC,GACrBjC,EAAiB,CACf1K,KAAM2M,EAAU3M,KAChB2K,KAAMgC,EAAUhC,KAChBC,aAAc+B,EAAU/B,aACxBC,WAAY8B,EAAU9B,WACtBC,SAAU6B,EAAU7B,UAAY,KAElCG,EAAoB0B,EAAU7B,SAAS/F,KAAI+I,GAAUA,EAAO5B,QAE5DxB,EAAiB,CAAE1K,KAAM,GAAI2K,KAAM,GAAIC,aAAc,GAAIC,WAAY,GAAIC,SAAU,KACnFG,EAAoB,KAEtBf,GAAsB,EACxB,EAEM6D,GAA4BA,KAChC7D,GAAsB,GACtBI,EAAqB,KAAK,EA6CtB0D,GAAsBC,IAC1BhD,GAAqBiD,GACnBA,EAAaC,SAASF,GAClBC,EAAavJ,QAAQuH,GAAOA,IAAO+B,IACnC,IAAIC,EAAcD,IACvB,EAIGG,GAAiBzB,IACrBzD,EAAAA,EAAAA,MAAAmF,EAAAA,SAAA,CAAA7E,SAAA,EACEhK,EAAAA,EAAAA,KAAC8O,EAAAA,EAAM,CACL5N,QAAQ,UACRD,KAAK,KACL6G,UAAU,OACVM,QAASA,IAAMgG,EAAyB,OAAQjB,GAAWnD,UAE3DhK,EAAAA,EAAAA,KAAC+O,EAAAA,EAAe,CAACzN,KAAM0N,EAAAA,QAEZ,IAAZzC,GAA6B,IAAZA,GAChB7C,EAAAA,EAAAA,MAAAmF,EAAAA,SAAA,CAAA7E,SAAA,EACEhK,EAAAA,EAAAA,KAAC8O,EAAAA,EAAM,CACL5N,QAAQ,UACRD,KAAK,KACL6G,UAAU,OACVM,QAASA,IAAMgG,EAAyB,OAAQjB,GAAWnD,UAE3DhK,EAAAA,EAAAA,KAAC+O,EAAAA,EAAe,CAACzN,KAAM2N,EAAAA,SAEzBjP,EAAAA,EAAAA,KAAC8O,EAAAA,EAAM,CACL5N,QAAQ,SACRD,KAAK,KACLmH,QAASA,KACP0C,EAAqBqC,GACrBvC,GAA0B,EAAK,EAC/BZ,UAEFhK,EAAAA,EAAAA,KAAC+O,EAAAA,EAAe,CAACzN,KAAM4N,EAAAA,WAGzB,QAoCR,OAAI3E,GAAgBvK,EAAAA,EAAAA,KAACmP,EAAAA,EAAO,CAACC,UAAU,YAGrC1F,EAAAA,EAAAA,MAAC2F,EAAAA,EAAS,CAACvH,UAAU,OAAMkC,SAAA,EACzBhK,EAAAA,EAAAA,KAACsP,EAAAA,EAAG,CAAAtF,UACFhK,EAAAA,EAAAA,KAACuP,EAAAA,EAAG,CAACC,GAAI,GAAGxF,UACVhK,EAAAA,EAAAA,KAACyP,EAAAA,EAAU,CAACvO,QAAQ,KAAKwO,cAAY,EAAA1F,SAAC,mCAK7B,IAAZuC,GAA6B,IAAZA,GAChBvM,EAAAA,EAAAA,KAACsP,EAAAA,EAAG,CAAAtF,UACFhK,EAAAA,EAAAA,KAACuP,EAAAA,EAAG,CAACC,GAAI,GAAGxF,UACVN,EAAAA,EAAAA,MAACoF,EAAAA,EAAM,CACL5N,QAAQ,YACRL,MAAM,UACNuH,QAASA,IAAMgG,EAAyB,OAAOpE,SAAA,EAE/ChK,EAAAA,EAAAA,KAAC+O,EAAAA,EAAe,CAACzN,KAAMqO,EAAAA,MAAU,kCAIrC,MAEJ3P,EAAAA,EAAAA,KAACsP,EAAAA,EAAG,CAACxH,UAAU,OAAMkC,UACnBN,EAAAA,EAAAA,MAAC6F,EAAAA,EAAG,CAACC,GAAI,GAAGxF,SAAA,EACVN,EAAAA,EAAAA,MAACkG,EAAAA,EAAK,CAACC,SAAO,EAACC,UAAQ,EAACrJ,OAAK,EAAAuD,SAAA,EAC3BhK,EAAAA,EAAAA,KAAA,SAAAgK,UACEN,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEhK,EAAAA,EAAAA,KAAA,MAAAgK,SAAI,UACJhK,EAAAA,EAAAA,KAAA,MAAAgK,SAAI,UACJhK,EAAAA,EAAAA,KAAA,MAAAgK,SAAI,kBACJhK,EAAAA,EAAAA,KAAA,MAAAgK,SAAI,aACJhK,EAAAA,EAAAA,KAAA,MAAAgK,SAAI,kBAGRhK,EAAAA,EAAAA,KAAA,SAAAgK,SACGI,EAAgB7E,KAAK4H,IACpB,MAAM4C,EAAUrE,EAAcsE,MAAMC,GAAOA,EAAGvD,KAAOS,EAAU9B,aAC/D,OACE3B,EAAAA,EAAAA,MAAA,MAAAM,SAAA,EACEhK,EAAAA,EAAAA,KAAA,MAAAgK,SAAKmD,EAAU3M,QACfR,EAAAA,EAAAA,KAAA,MAAAgK,SAAKmD,EAAUhC,QACfnL,EAAAA,EAAAA,KAAA,MAAAgK,SAAKmD,EAAU/B,gBACfpL,EAAAA,EAAAA,KAAA,MAAAgK,SAAK+F,EAAUA,EAAQvP,KAAO,gBAC9BR,EAAAA,EAAAA,KAAA,MAAAgK,SAAK4E,GAAczB,OALZA,EAAUT,GAMd,SAOZV,GAAkBF,EAAa,IAC9BpC,EAAAA,EAAAA,MAAAmF,EAAAA,SAAA,CAAA7E,SAAA,EACEN,EAAAA,EAAAA,MAACwG,EAAAA,EAAU,CAACpI,UAAU,yBAAwBkC,SAAA,EAC5ChK,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWC,MAAK,CAAC/H,QAASA,IAAM8F,EAAS,GAAItK,SAA0B,IAAhBgI,KACxD5L,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWE,KAAI,CACdhI,QAASA,IAAM8F,EAASZ,KAAK+C,IAAI,EAAGzE,EAAc,IAClDhI,SAA0B,IAAhBgI,IA3FM0E,MAC9B,MAAMC,EAAQ,GACd,IAAIC,EAAQlD,KAAK+C,IAAI,EAAGzE,EAAc0B,KAAKmD,MAAMC,MAC7CC,EAAMrD,KAAKsD,IAAIJ,EAlLQ,EAkLuB,EAAG1E,GAEjD6E,EAAMH,EAAQ,EApLS,IAqLzBA,EAAQlD,KAAK+C,IAAI,EAAGM,EArLK,EAqLwB,IAGnD,IAAK,IAAIE,EAASL,EAAOK,GAAUF,EAAKE,IACtCN,EAAMO,MACJ9Q,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWa,KAAI,CAAcC,OAAQH,IAAWjF,EAAaxD,QAASA,IAAM8F,EAAS2C,GAAQ7G,SAC3F6G,GADmBA,IAM1B,OAAON,CAAK,EA4ECD,IACDtQ,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWe,KAAI,CACd7I,QAASA,IAAM8F,EAASZ,KAAKsD,IAAI9E,EAAYF,EAAc,IAC3DhI,SAAUgI,IAAgBE,KAE5B9L,EAAAA,EAAAA,KAACkQ,EAAAA,EAAWgB,KAAI,CAAC9I,QAASA,IAAM8F,EAASpC,GAAalI,SAAUgI,IAAgBE,OA5ErFA,EAAa,GAClB9L,EAAAA,EAAAA,KAAA,OAAK8H,UAAU,mBAAkBkC,UAC/BN,EAAAA,EAAAA,MAAC+F,EAAAA,EAAU,CAACvO,QAAQ,QAAO8I,SAAA,CAAC,QACpB4B,EAAY,OAAKE,OAGzB,cA+EF9L,EAAAA,EAAAA,KAACmR,EAAAA,EAAK,CACJC,KAAM3G,EACN4G,QAAS9C,GACTvJ,MAAO,CAAEkC,SAAU,QAAS8C,UAE5BN,EAAAA,EAAAA,MAAC4H,EAAAA,EAAI,CAACtM,MAAO,CAAEd,MAAO,MAAOY,OAAQ,UAAWrB,QAAS,OAAQ8N,UAAW,OAAQC,UAAW,QAASxH,SAAA,EACtGhK,EAAAA,EAAAA,KAACyP,EAAAA,EAAU,CAACvO,QAAQ,KAAKwO,cAAY,EAAA1F,SACpB,QAAde,EAAsB,0BAA0C,SAAdA,EAAuB,uBAAyB,yBAItF,SAAdA,GACCrB,EAAAA,EAAAA,MAAAmF,EAAAA,SAAA,CAAA7E,SAAA,EACEN,EAAAA,EAAAA,MAAC+F,EAAAA,EAAU,CAACvO,QAAQ,QAAQwO,cAAY,EAAA1F,SAAA,EAAChK,EAAAA,EAAAA,KAAA,UAAAgK,SAAQ,UAAc,IAAEiB,EAAczK,SAC/EkJ,EAAAA,EAAAA,MAAC+F,EAAAA,EAAU,CAACvO,QAAQ,QAAQwO,cAAY,EAAA1F,SAAA,EAAChK,EAAAA,EAAAA,KAAA,UAAAgK,SAAQ,UAAc,IAAEiB,EAAcE,SAC/EzB,EAAAA,EAAAA,MAAC+F,EAAAA,EAAU,CAACvO,QAAQ,QAAQwO,cAAY,EAAA1F,SAAA,EAAChK,EAAAA,EAAAA,KAAA,UAAAgK,SAAQ,kBAAsB,IAAEiB,EAAcG,iBACvF1B,EAAAA,EAAAA,MAAC+F,EAAAA,EAAU,CAACvO,QAAQ,QAAQwO,cAAY,EAAA1F,SAAA,EACtChK,EAAAA,EAAAA,KAAA,UAAAgK,SAAQ,aAAiB,KAA8D,QAA5DE,EAAAwB,EAAcsE,MAAMyB,GAAMA,EAAE/E,KAAOzB,EAAcI,oBAAW,IAAAnB,OAAA,EAA5DA,EAA8D1J,OAAQ,iBAGnGkJ,EAAAA,EAAAA,MAAC4H,EAAAA,EAAI,CAACtM,MAAO,CAAE0M,UAAW,OAAQjO,QAAS,QAASuG,SAAA,EAClDhK,EAAAA,EAAAA,KAACyP,EAAAA,EAAU,CAACvO,QAAQ,QAAQwO,cAAY,EAAA1F,UAAChK,EAAAA,EAAAA,KAAA,UAAAgK,SAAQ,yBAChDiB,EAAcK,SAAS8B,OAAS,EAC/BnC,EAAcK,SAAS/F,KAAI+I,IACzBtO,EAAAA,EAAAA,KAACyP,EAAAA,EAAU,CAAiBvO,QAAQ,QAAO8I,SACxCsE,EAAO9N,MADO8N,EAAO5B,OAK1B1M,EAAAA,EAAAA,KAACyP,EAAAA,EAAU,CAACvO,QAAQ,QAAO8I,SAAC,gCAKlCN,EAAAA,EAAAA,MAAAmF,EAAAA,SAAA,CAAA7E,SAAA,EAEEhK,EAAAA,EAAAA,KAAC2R,EAAAA,EAAS,CACRC,WAAS,EACT3K,MAAM,iBACN5B,MAAO4F,EAAczK,KACrBqR,SAAWC,GAAM5G,EAAiB,IAAKD,EAAezK,KAAMsR,EAAEhI,OAAOzE,QACrEP,OAAO,SACPlB,SAAwB,SAAdmH,KAEZ/K,EAAAA,EAAAA,KAAC2R,EAAAA,EAAS,CACRC,WAAS,EACT3K,MAAM,OACN5B,MAAO4F,EAAcE,KACrB0G,SAAWC,GAAM5G,EAAiB,IAAKD,EAAeE,KAAM2G,EAAEhI,OAAOzE,QACrEP,OAAO,SACPlB,SAAwB,SAAdmH,KAEZ/K,EAAAA,EAAAA,KAAC2R,EAAAA,EAAS,CACRC,WAAS,EACT3K,MAAM,eACN5B,MAAO4F,EAAcG,aACrByG,SAAWC,GAAM5G,EAAiB,IAAKD,EAAeG,aAAc0G,EAAEhI,OAAOzE,QAC7EP,OAAO,SACPlB,SAAwB,SAAdmH,KAGZrB,EAAAA,EAAAA,MAACqI,EAAAA,EAAKC,MAAK,CAAClK,UAAU,OAAMkC,SAAA,EAC1BhK,EAAAA,EAAAA,KAAC+R,EAAAA,EAAKE,MAAK,CAAAjI,SAAC,kBACZN,EAAAA,EAAAA,MAACqI,EAAAA,EAAKG,QAAO,CACXvI,GAAG,SACHtE,MAAO4F,EAAcI,WACrBwG,SAAWC,GAAM5G,EAAiB,IAAKD,EAAeI,WAAYmB,SAASsF,EAAEhI,OAAOzE,MAAO,MAC3FzB,SAAwB,SAAdmH,EAAqBf,SAAA,EAE/BhK,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAGzB,UAAQ,EAAAoG,SAAC,yBACzB0B,EAAcnG,KAAKwK,IAClB/P,EAAAA,EAAAA,KAAA,UAAyBqF,MAAO0K,EAAQrD,GAAG1C,SACxC+F,EAAQvP,MADEuP,EAAQrD,aAO3BhD,EAAAA,EAAAA,MAACqI,EAAAA,EAAKC,MAAK,CAAClK,UAAU,OAAMkC,SAAA,EAC1BhK,EAAAA,EAAAA,KAAC+R,EAAAA,EAAKE,MAAK,CAAAjI,SAAC,cACZN,EAAAA,EAAAA,MAACqI,EAAAA,EAAKG,QAAO,CACXvI,GAAG,SACHkI,SAAWC,GAAMtD,GAAmBhC,SAASsF,EAAEhI,OAAOzE,MAAO,KAC7DA,MAAM,GACNzB,SAAwB,SAAdmH,EAAqBf,SAAA,EAE/BhK,EAAAA,EAAAA,KAAA,UAAQqF,MAAM,GAAGzB,UAAQ,EAAAoG,SAAC,yBACzBsB,EACEnG,QAAOmJ,IAAW9C,EAAiBmD,SAASL,EAAO5B,MACnDnH,KAAK+I,IACJtO,EAAAA,EAAAA,KAAA,UAAwBqF,MAAOiJ,EAAO5B,GAAG1C,SACtCsE,EAAO9N,MADG8N,EAAO5B,UAM1B1M,EAAAA,EAAAA,KAAA,OAAK8H,UAAU,OAAMkC,SAClBwB,EAAiBjG,KAAIkJ,IACpB,MAAMH,EAAShD,EAAS0E,MAAKmC,GAAKA,EAAEzF,KAAO+B,IAC3C,OACEzO,EAAAA,EAAAA,KAACmE,EAAI,CAEH8C,MAAOqH,EAASA,EAAO9N,KAAOiO,EAC9BzN,SAAwB,SAAd+J,EAAuB,IAAMyD,GAAmBC,QAAY7E,EACtE/I,MAAM,UACNiH,UAAU,QAJL2G,EAKL,SAOK,SAAd1D,IACCrB,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACxH,UAAU,OAAMkC,SAAA,EACnBhK,EAAAA,EAAAA,KAACuP,EAAAA,EAAG,CAACC,GAAI,EAAExF,UACThK,EAAAA,EAAAA,KAAC8O,EAAAA,EAAM,CAAC5N,QAAQ,YAAYL,MAAM,UAAUuH,QArThCwE,UAC5B,IACE,MAAMwF,EAAU,IAAKnH,EAAeoH,WAAY7G,GAChD,GAAkB,QAAdT,EAAqB,CACvB,MAAMgD,QAAiBjB,EAAAA,EAAIwF,KAAK,qBAAsBF,GACtD/H,GAAoBkI,GAAmB,IAAIA,EAAgBxE,EAASf,QACpE7C,EAAU,UAAW,sCAAuC,UAC9D,MAAO,GAAkB,SAAdY,GAAwBF,EAAmB,CACpD,MAAMkD,QAAiBjB,EAAAA,EAAI0F,IAAI,qBAAqB3H,EAAkB6B,KAAM0F,GAC5E/H,GAAoBkI,GAClBA,EAAehN,KAAK4H,GAAeA,EAAUT,KAAO7B,EAAkB6B,GAAKqB,EAASf,KAAOG,MAE7FhD,EAAU,UAAW,wCAAyC,UAChE,CACAoE,IACF,CAAE,MAAOf,GACPC,QAAQD,MAAM,gCAAiCA,GAC/CrD,EAAU,QAAS,0DAA2D,QAChF,GAmS2FH,SAAC,YAI9EhK,EAAAA,EAAAA,KAACuP,EAAAA,EAAG,CAACC,GAAI,EAAExF,UACThK,EAAAA,EAAAA,KAAC8O,EAAAA,EAAM,CAAC5N,QAAQ,WAAWL,MAAM,YAAYuH,QAASmG,GAA0BvE,SAAC,yBAY/FhK,EAAAA,EAAAA,KAACmR,EAAAA,EAAK,CACJC,KAAMzG,EACN0G,QAASA,IAAMzG,GAA0B,GACzC5F,MAAO,CAAE1C,QAAS,OAAQC,WAAY,SAAUC,eAAgB,UAAWwH,UAE3EN,EAAAA,EAAAA,MAAC4H,EAAAA,EAAI,CAACtM,MAAO,CAAEvB,QAAS,QAASuG,SAAA,EAC/BhK,EAAAA,EAAAA,KAACyP,EAAAA,EAAU,CAACvO,QAAQ,KAAKwO,cAAY,EAAA1F,SAAC,2DAGtCN,EAAAA,EAAAA,MAAC4F,EAAAA,EAAG,CAACxH,UAAU,OAAMkC,SAAA,EACnBhK,EAAAA,EAAAA,KAACuP,EAAAA,EAAG,CAACC,GAAI,EAAExF,UACThK,EAAAA,EAAAA,KAAC8O,EAAAA,EAAM,CAAC5N,QAAQ,YAAYL,MAAM,QAAQuH,QA3TxBwE,UAC5B,GAAK/B,EAKL,UACQiC,EAAAA,EAAI2F,OAAO,qBAAqB5H,EAAkB6B,MACxDrC,GAAoBkI,GAAmBA,EAAepN,QAAQgI,GAAcA,EAAUT,KAAO7B,EAAkB6B,OAC/GvC,EAAU,UAAW,wCAAyC,WAC9DS,GAA0B,GAC1BE,EAAqB,KACvB,CAAE,MAAO0C,GACPC,QAAQD,MAAM,kCAAmCA,GACjDrD,EAAU,QAAS,4DAA6D,QAClF,MAbEA,EAAU,QAAS,4CAA6C,QAalE,EA4SmFH,SAAC,cAI5EhK,EAAAA,EAAAA,KAACuP,EAAAA,EAAG,CAACC,GAAI,EAAExF,UACThK,EAAAA,EAAAA,KAAC8O,EAAAA,EAAM,CAAC5N,QAAQ,WAAWL,MAAM,YAAYuH,QAASA,IAAMwC,GAA0B,GAAOZ,SAAC,uBAO5F,C","sources":["../node_modules/@mui/material/internal/svg-icons/Cancel.js","../node_modules/@mui/material/Chip/chipClasses.js","../node_modules/@mui/material/Chip/Chip.js","pages/ManageSalesExec.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport createSvgIcon from \"../../utils/createSvgIcon.js\";\n\n/**\n * @ignore - internal component.\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M12 2C6.47 2 2 6.47 2 12s4.47 10 10 10 10-4.47 10-10S17.53 2 12 2zm5 13.59L15.59 17 12 13.41 8.41 17 7 15.59 10.59 12 7 8.41 8.41 7 12 10.59 15.59 7 17 8.41 13.41 12 17 15.59z\"\n}), 'Cancel');","import generateUtilityClasses from '@mui/utils/generateUtilityClasses';\nimport generateUtilityClass from '@mui/utils/generateUtilityClass';\nexport function getChipUtilityClass(slot) {\n  return generateUtilityClass('MuiChip', slot);\n}\nconst chipClasses = generateUtilityClasses('MuiChip', ['root', 'sizeSmall', 'sizeMedium', 'colorDefault', 'colorError', 'colorInfo', 'colorPrimary', 'colorSecondary', 'colorSuccess', 'colorWarning', 'disabled', 'clickable', 'clickableColorPrimary', 'clickableColorSecondary', 'deletable', 'deletableColorPrimary', 'deletableColorSecondary', 'outlined', 'filled', 'outlinedPrimary', 'outlinedSecondary', 'filledPrimary', 'filledSecondary', 'avatar', 'avatarSmall', 'avatarMedium', 'avatarColorPrimary', 'avatarColorSecondary', 'icon', 'iconSmall', 'iconMedium', 'iconColorPrimary', 'iconColorSecondary', 'label', 'labelSmall', 'labelMedium', 'deleteIcon', 'deleteIconSmall', 'deleteIconMedium', 'deleteIconColorPrimary', 'deleteIconColorSecondary', 'deleteIconOutlinedColorPrimary', 'deleteIconOutlinedColorSecondary', 'deleteIconFilledColorPrimary', 'deleteIconFilledColorSecondary', 'focusVisible']);\nexport default chipClasses;","'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport composeClasses from '@mui/utils/composeClasses';\nimport { alpha } from '@mui/system/colorManipulator';\nimport CancelIcon from \"../internal/svg-icons/Cancel.js\";\nimport useForkRef from \"../utils/useForkRef.js\";\nimport unsupportedProp from \"../utils/unsupportedProp.js\";\nimport capitalize from \"../utils/capitalize.js\";\nimport ButtonBase from \"../ButtonBase/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport chipClasses, { getChipUtilityClass } from \"./chipClasses.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    disabled,\n    size,\n    color,\n    iconColor,\n    onDelete,\n    clickable,\n    variant\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, disabled && 'disabled', `size${capitalize(size)}`, `color${capitalize(color)}`, clickable && 'clickable', clickable && `clickableColor${capitalize(color)}`, onDelete && 'deletable', onDelete && `deletableColor${capitalize(color)}`, `${variant}${capitalize(color)}`],\n    label: ['label', `label${capitalize(size)}`],\n    avatar: ['avatar', `avatar${capitalize(size)}`, `avatarColor${capitalize(color)}`],\n    icon: ['icon', `icon${capitalize(size)}`, `iconColor${capitalize(iconColor)}`],\n    deleteIcon: ['deleteIcon', `deleteIcon${capitalize(size)}`, `deleteIconColor${capitalize(color)}`, `deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n  };\n  return composeClasses(slots, getChipUtilityClass, classes);\n};\nconst ChipRoot = styled('div', {\n  name: 'MuiChip',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      color,\n      iconColor,\n      clickable,\n      onDelete,\n      size,\n      variant\n    } = ownerState;\n    return [{\n      [`& .${chipClasses.avatar}`]: styles.avatar\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatar${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.avatar}`]: styles[`avatarColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles.icon\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`icon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.icon}`]: styles[`iconColor${capitalize(iconColor)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles.deleteIcon\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(size)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIconColor${capitalize(color)}`]\n    }, {\n      [`& .${chipClasses.deleteIcon}`]: styles[`deleteIcon${capitalize(variant)}Color${capitalize(color)}`]\n    }, styles.root, styles[`size${capitalize(size)}`], styles[`color${capitalize(color)}`], clickable && styles.clickable, clickable && color !== 'default' && styles[`clickableColor${capitalize(color)})`], onDelete && styles.deletable, onDelete && color !== 'default' && styles[`deletableColor${capitalize(color)}`], styles[variant], styles[`${variant}${capitalize(color)}`]];\n  }\n})(memoTheme(({\n  theme\n}) => {\n  const textColor = theme.palette.mode === 'light' ? theme.palette.grey[700] : theme.palette.grey[300];\n  return {\n    maxWidth: '100%',\n    fontFamily: theme.typography.fontFamily,\n    fontSize: theme.typography.pxToRem(13),\n    display: 'inline-flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    height: 32,\n    color: (theme.vars || theme).palette.text.primary,\n    backgroundColor: (theme.vars || theme).palette.action.selected,\n    borderRadius: 32 / 2,\n    whiteSpace: 'nowrap',\n    transition: theme.transitions.create(['background-color', 'box-shadow']),\n    // reset cursor explicitly in case ButtonBase is used\n    cursor: 'unset',\n    // We disable the focus ring for mouse, touch and keyboard users.\n    outline: 0,\n    textDecoration: 'none',\n    border: 0,\n    // Remove `button` border\n    padding: 0,\n    // Remove `button` padding\n    verticalAlign: 'middle',\n    boxSizing: 'border-box',\n    [`&.${chipClasses.disabled}`]: {\n      opacity: (theme.vars || theme).palette.action.disabledOpacity,\n      pointerEvents: 'none'\n    },\n    [`& .${chipClasses.avatar}`]: {\n      marginLeft: 5,\n      marginRight: -6,\n      width: 24,\n      height: 24,\n      color: theme.vars ? theme.vars.palette.Chip.defaultAvatarColor : textColor,\n      fontSize: theme.typography.pxToRem(12)\n    },\n    [`& .${chipClasses.avatarColorPrimary}`]: {\n      color: (theme.vars || theme).palette.primary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.primary.dark\n    },\n    [`& .${chipClasses.avatarColorSecondary}`]: {\n      color: (theme.vars || theme).palette.secondary.contrastText,\n      backgroundColor: (theme.vars || theme).palette.secondary.dark\n    },\n    [`& .${chipClasses.avatarSmall}`]: {\n      marginLeft: 4,\n      marginRight: -4,\n      width: 18,\n      height: 18,\n      fontSize: theme.typography.pxToRem(10)\n    },\n    [`& .${chipClasses.icon}`]: {\n      marginLeft: 5,\n      marginRight: -6\n    },\n    [`& .${chipClasses.deleteIcon}`]: {\n      WebkitTapHighlightColor: 'transparent',\n      color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.26)` : alpha(theme.palette.text.primary, 0.26),\n      fontSize: 22,\n      cursor: 'pointer',\n      margin: '0 5px 0 -6px',\n      '&:hover': {\n        color: theme.vars ? `rgba(${theme.vars.palette.text.primaryChannel} / 0.4)` : alpha(theme.palette.text.primary, 0.4)\n      }\n    },\n    variants: [{\n      props: {\n        size: 'small'\n      },\n      style: {\n        height: 24,\n        [`& .${chipClasses.icon}`]: {\n          fontSize: 18,\n          marginLeft: 4,\n          marginRight: -4\n        },\n        [`& .${chipClasses.deleteIcon}`]: {\n          fontSize: 16,\n          marginRight: 4,\n          marginLeft: -4\n        }\n      }\n    }, ...Object.entries(theme.palette).filter(([, value]) => value && value.main && value.contrastText).map(([color]) => {\n      return {\n        props: {\n          color\n        },\n        style: {\n          backgroundColor: (theme.vars || theme).palette[color].main,\n          color: (theme.vars || theme).palette[color].contrastText,\n          [`& .${chipClasses.deleteIcon}`]: {\n            color: theme.vars ? `rgba(${theme.vars.palette[color].contrastTextChannel} / 0.7)` : alpha(theme.palette[color].contrastText, 0.7),\n            '&:hover, &:active': {\n              color: (theme.vars || theme).palette[color].contrastText\n            }\n          }\n        }\n      };\n    }), {\n      props: props => props.iconColor === props.color,\n      style: {\n        [`& .${chipClasses.icon}`]: {\n          color: theme.vars ? theme.vars.palette.Chip.defaultIconColor : textColor\n        }\n      }\n    }, {\n      props: props => props.iconColor === props.color && props.color !== 'default',\n      style: {\n        [`& .${chipClasses.icon}`]: {\n          color: 'inherit'\n        }\n      }\n    }, {\n      props: {\n        onDelete: true\n      },\n      style: {\n        [`&.${chipClasses.focusVisible}`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n        }\n      }\n    }, ...Object.entries(theme.palette).filter(([, value]) => value && value.dark).map(([color]) => {\n      return {\n        props: {\n          color,\n          onDelete: true\n        },\n        style: {\n          [`&.${chipClasses.focusVisible}`]: {\n            background: (theme.vars || theme).palette[color].dark\n          }\n        }\n      };\n    }), {\n      props: {\n        clickable: true\n      },\n      style: {\n        userSelect: 'none',\n        WebkitTapHighlightColor: 'transparent',\n        cursor: 'pointer',\n        '&:hover': {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.hoverOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.hoverOpacity)\n        },\n        [`&.${chipClasses.focusVisible}`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette.action.selectedChannel} / calc(${theme.vars.palette.action.selectedOpacity} + ${theme.vars.palette.action.focusOpacity}))` : alpha(theme.palette.action.selected, theme.palette.action.selectedOpacity + theme.palette.action.focusOpacity)\n        },\n        '&:active': {\n          boxShadow: (theme.vars || theme).shadows[1]\n        }\n      }\n    }, ...Object.entries(theme.palette).filter(([, value]) => value && value.dark).map(([color]) => ({\n      props: {\n        color,\n        clickable: true\n      },\n      style: {\n        [`&:hover, &.${chipClasses.focusVisible}`]: {\n          backgroundColor: (theme.vars || theme).palette[color].dark\n        }\n      }\n    })), {\n      props: {\n        variant: 'outlined'\n      },\n      style: {\n        backgroundColor: 'transparent',\n        border: theme.vars ? `1px solid ${theme.vars.palette.Chip.defaultBorder}` : `1px solid ${theme.palette.mode === 'light' ? theme.palette.grey[400] : theme.palette.grey[700]}`,\n        [`&.${chipClasses.clickable}:hover`]: {\n          backgroundColor: (theme.vars || theme).palette.action.hover\n        },\n        [`&.${chipClasses.focusVisible}`]: {\n          backgroundColor: (theme.vars || theme).palette.action.focus\n        },\n        [`& .${chipClasses.avatar}`]: {\n          marginLeft: 4\n        },\n        [`& .${chipClasses.avatarSmall}`]: {\n          marginLeft: 2\n        },\n        [`& .${chipClasses.icon}`]: {\n          marginLeft: 4\n        },\n        [`& .${chipClasses.iconSmall}`]: {\n          marginLeft: 2\n        },\n        [`& .${chipClasses.deleteIcon}`]: {\n          marginRight: 5\n        },\n        [`& .${chipClasses.deleteIconSmall}`]: {\n          marginRight: 3\n        }\n      }\n    }, ...Object.entries(theme.palette).filter(([, value]) => value && value.main) // no need to check for mainChannel as it's calculated from main\n    .map(([color]) => ({\n      props: {\n        variant: 'outlined',\n        color\n      },\n      style: {\n        color: (theme.vars || theme).palette[color].main,\n        border: `1px solid ${theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / 0.7)` : alpha(theme.palette[color].main, 0.7)}`,\n        [`&.${chipClasses.clickable}:hover`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.hoverOpacity})` : alpha(theme.palette[color].main, theme.palette.action.hoverOpacity)\n        },\n        [`&.${chipClasses.focusVisible}`]: {\n          backgroundColor: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / ${theme.vars.palette.action.focusOpacity})` : alpha(theme.palette[color].main, theme.palette.action.focusOpacity)\n        },\n        [`& .${chipClasses.deleteIcon}`]: {\n          color: theme.vars ? `rgba(${theme.vars.palette[color].mainChannel} / 0.7)` : alpha(theme.palette[color].main, 0.7),\n          '&:hover, &:active': {\n            color: (theme.vars || theme).palette[color].main\n          }\n        }\n      }\n    }))]\n  };\n}));\nconst ChipLabel = styled('span', {\n  name: 'MuiChip',\n  slot: 'Label',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      size\n    } = ownerState;\n    return [styles.label, styles[`label${capitalize(size)}`]];\n  }\n})({\n  overflow: 'hidden',\n  textOverflow: 'ellipsis',\n  paddingLeft: 12,\n  paddingRight: 12,\n  whiteSpace: 'nowrap',\n  variants: [{\n    props: {\n      variant: 'outlined'\n    },\n    style: {\n      paddingLeft: 11,\n      paddingRight: 11\n    }\n  }, {\n    props: {\n      size: 'small'\n    },\n    style: {\n      paddingLeft: 8,\n      paddingRight: 8\n    }\n  }, {\n    props: {\n      size: 'small',\n      variant: 'outlined'\n    },\n    style: {\n      paddingLeft: 7,\n      paddingRight: 7\n    }\n  }]\n});\nfunction isDeleteKeyboardEvent(keyboardEvent) {\n  return keyboardEvent.key === 'Backspace' || keyboardEvent.key === 'Delete';\n}\n\n/**\n * Chips represent complex entities in small blocks, such as a contact.\n */\nconst Chip = /*#__PURE__*/React.forwardRef(function Chip(inProps, ref) {\n  const props = useDefaultProps({\n    props: inProps,\n    name: 'MuiChip'\n  });\n  const {\n    avatar: avatarProp,\n    className,\n    clickable: clickableProp,\n    color = 'default',\n    component: ComponentProp,\n    deleteIcon: deleteIconProp,\n    disabled = false,\n    icon: iconProp,\n    label,\n    onClick,\n    onDelete,\n    onKeyDown,\n    onKeyUp,\n    size = 'medium',\n    variant = 'filled',\n    tabIndex,\n    skipFocusWhenDisabled = false,\n    // TODO v6: Rename to `focusableWhenDisabled`.\n    ...other\n  } = props;\n  const chipRef = React.useRef(null);\n  const handleRef = useForkRef(chipRef, ref);\n  const handleDeleteIconClick = event => {\n    // Stop the event from bubbling up to the `Chip`\n    event.stopPropagation();\n    if (onDelete) {\n      onDelete(event);\n    }\n  };\n  const handleKeyDown = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target && isDeleteKeyboardEvent(event)) {\n      // Will be handled in keyUp, otherwise some browsers\n      // might init navigation\n      event.preventDefault();\n    }\n    if (onKeyDown) {\n      onKeyDown(event);\n    }\n  };\n  const handleKeyUp = event => {\n    // Ignore events from children of `Chip`.\n    if (event.currentTarget === event.target) {\n      if (onDelete && isDeleteKeyboardEvent(event)) {\n        onDelete(event);\n      }\n    }\n    if (onKeyUp) {\n      onKeyUp(event);\n    }\n  };\n  const clickable = clickableProp !== false && onClick ? true : clickableProp;\n  const component = clickable || onDelete ? ButtonBase : ComponentProp || 'div';\n  const ownerState = {\n    ...props,\n    component,\n    disabled,\n    size,\n    color,\n    iconColor: /*#__PURE__*/React.isValidElement(iconProp) ? iconProp.props.color || color : color,\n    onDelete: !!onDelete,\n    clickable,\n    variant\n  };\n  const classes = useUtilityClasses(ownerState);\n  const moreProps = component === ButtonBase ? {\n    component: ComponentProp || 'div',\n    focusVisibleClassName: classes.focusVisible,\n    ...(onDelete && {\n      disableRipple: true\n    })\n  } : {};\n  let deleteIcon = null;\n  if (onDelete) {\n    deleteIcon = deleteIconProp && /*#__PURE__*/React.isValidElement(deleteIconProp) ? ( /*#__PURE__*/React.cloneElement(deleteIconProp, {\n      className: clsx(deleteIconProp.props.className, classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    })) : /*#__PURE__*/_jsx(CancelIcon, {\n      className: clsx(classes.deleteIcon),\n      onClick: handleDeleteIconClick\n    });\n  }\n  let avatar = null;\n  if (avatarProp && /*#__PURE__*/React.isValidElement(avatarProp)) {\n    avatar = /*#__PURE__*/React.cloneElement(avatarProp, {\n      className: clsx(classes.avatar, avatarProp.props.className)\n    });\n  }\n  let icon = null;\n  if (iconProp && /*#__PURE__*/React.isValidElement(iconProp)) {\n    icon = /*#__PURE__*/React.cloneElement(iconProp, {\n      className: clsx(classes.icon, iconProp.props.className)\n    });\n  }\n  if (process.env.NODE_ENV !== 'production') {\n    if (avatar && icon) {\n      console.error('MUI: The Chip component can not handle the avatar ' + 'and the icon prop at the same time. Pick one.');\n    }\n  }\n  return /*#__PURE__*/_jsxs(ChipRoot, {\n    as: component,\n    className: clsx(classes.root, className),\n    disabled: clickable && disabled ? true : undefined,\n    onClick: onClick,\n    onKeyDown: handleKeyDown,\n    onKeyUp: handleKeyUp,\n    ref: handleRef,\n    tabIndex: skipFocusWhenDisabled && disabled ? -1 : tabIndex,\n    ownerState: ownerState,\n    ...moreProps,\n    ...other,\n    children: [avatar || icon, /*#__PURE__*/_jsx(ChipLabel, {\n      className: clsx(classes.label),\n      ownerState: ownerState,\n      children: label\n    }), deleteIcon]\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Chip.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * The Avatar element to display.\n   */\n  avatar: PropTypes.element,\n  /**\n   * This prop isn't supported.\n   * Use the `component` prop if you need to change the children structure.\n   */\n  children: unsupportedProp,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * If `true`, the chip will appear clickable, and will raise when pressed,\n   * even if the onClick prop is not defined.\n   * If `false`, the chip will not appear clickable, even if onClick prop is defined.\n   * This can be used, for example,\n   * along with the component prop to indicate an anchor Chip is clickable.\n   * Note: this controls the UI and does not affect the onClick event.\n   */\n  clickable: PropTypes.bool,\n  /**\n   * The color of the component.\n   * It supports both default and custom theme colors, which can be added as shown in the\n   * [palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).\n   * @default 'default'\n   */\n  color: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['default', 'primary', 'secondary', 'error', 'info', 'success', 'warning']), PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Override the default delete icon element. Shown only if `onDelete` is set.\n   */\n  deleteIcon: PropTypes.element,\n  /**\n   * If `true`, the component is disabled.\n   * @default false\n   */\n  disabled: PropTypes.bool,\n  /**\n   * Icon element.\n   */\n  icon: PropTypes.element,\n  /**\n   * The content of the component.\n   */\n  label: PropTypes.node,\n  /**\n   * @ignore\n   */\n  onClick: PropTypes.func,\n  /**\n   * Callback fired when the delete icon is clicked.\n   * If set, the delete icon will be shown.\n   */\n  onDelete: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyDown: PropTypes.func,\n  /**\n   * @ignore\n   */\n  onKeyUp: PropTypes.func,\n  /**\n   * The size of the component.\n   * @default 'medium'\n   */\n  size: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['medium', 'small']), PropTypes.string]),\n  /**\n   * If `true`, allows the disabled chip to escape focus.\n   * If `false`, allows the disabled chip to receive focus.\n   * @default false\n   */\n  skipFocusWhenDisabled: PropTypes.bool,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * @ignore\n   */\n  tabIndex: PropTypes.number,\n  /**\n   * The variant to use.\n   * @default 'filled'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['filled', 'outlined']), PropTypes.string])\n} : void 0;\nexport default Chip;","import React, { useEffect, useState, useCallback } from 'react';\r\nimport { Card, Typography, Button, Modal, Chip, TextField } from '@mui/material';\r\nimport { Container, Row, Col, Table, Spinner, Pagination, Form } from 'react-bootstrap';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faEdit, faTrash, faEye } from '@fortawesome/free-solid-svg-icons';\r\nimport api from '../services/api'; // Axios instance\r\n\r\nconst ManageSalesExecutivesPage = ({ showToast }) => {\r\n  const [salesExecutives, setSalesExecutives] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [showExecutiveModal, setShowExecutiveModal] = useState(false);\r\n  const [showDeleteConfirmation, setShowDeleteConfirmation] = useState(false);\r\n  const [selectedExecutive, setSelectedExecutive] = useState(null);\r\n  const [modalMode, setModalMode] = useState('add'); // 'add', 'edit', or 'view'\r\n  const [executiveData, setExecutiveData] = useState({ name: '', code: '', phone_number: '', manager_id: '', branches: [] });\r\n  const [branches, setBranches] = useState([]);\r\n  const [selectedBranches, setSelectedBranches] = useState([]);\r\n  const [salesManagers, setSalesManagers] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [totalPages, setTotalPages] = useState(1);\r\n  const [showPagination, setShowPagination] = useState(true); // Default state for showing pagination\r\n  const executivesPerPage = 10;\r\n  const local_user = JSON.parse(localStorage.getItem('user')); // Fetch current logged-in user\r\n  const role_id = parseInt(local_user?.role_id) || local_user?.role?.id;\r\n  const maxPaginationButtons = 5; // Maximum pagination buttons to display\r\n\r\n  // Fetch sales executives, filtering based on manager_id\r\n  useEffect(() => {\r\n    const fetchSalesExecutives = async () => {\r\n      setLoading(true);\r\n      try {\r\n        const response = await api.get(`/sales_executives/?sort_by=created_at&per_page=10000&page=1`);\r\n        const allExecutives = response.data.sales_executives;\r\n\r\n        // Filter sales executives based on logged-in user id (manager)\r\n        const filteredExecutives = allExecutives.filter(executive => executive.manager_id === local_user.id);\r\n\r\n        if (filteredExecutives.length > 0) {\r\n          // If a match is found for local_user.id, show all filtered results and remove pagination\r\n          setSalesExecutives(filteredExecutives);\r\n          setTotalPages(1); // Set total pages to 1 to display all filtered executives on one page\r\n          setShowPagination(false); // Hide pagination when a match is found\r\n        } else {\r\n          // If no match is found, show all executives with pagination\r\n          setSalesExecutives(allExecutives.slice((currentPage - 1) * executivesPerPage, currentPage * executivesPerPage));\r\n          setTotalPages(Math.ceil(allExecutives.length / executivesPerPage));\r\n          setShowPagination(true); // Show pagination when no match is found\r\n        }\r\n      } catch (error) {\r\n        console.error('Error fetching sales executives:', error);\r\n        showToast('error', 'Failed to fetch sales executives. Please try again later.', 'Error');\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    fetchSalesExecutives();\r\n  }, [showToast, currentPage, local_user.id]);\r\n\r\n  // Fetch branches and sales managers\r\n  const fetchBranches = useCallback(async () => {\r\n    try {\r\n      const branchResponse = await api.get('/branches/?sort_by=created_at&per_page=1000&page=1');\r\n      setBranches(branchResponse.data.branches || []);\r\n    } catch (error) {\r\n      console.error('Error fetching branches:', error);\r\n    }\r\n  }, []);\r\n\r\n  const fetchSalesManagers = useCallback(async () => {\r\n    try {\r\n      const response = await api.get('/dropdown/', {\r\n        params: { type: 'users_with_roles', role_id: 4 }, // Fetch users with role_id 4 (sales managers)\r\n      });\r\n      setSalesManagers(response.data);\r\n    } catch (error) {\r\n      console.error('Failed to fetch sales managers');\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchBranches();\r\n    fetchSalesManagers();\r\n  }, [fetchBranches, fetchSalesManagers]);\r\n\r\n  // Handle pagination\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  // Handle opening and closing modals\r\n  const handleOpenExecutiveModal = (mode, executive = null) => {\r\n    setModalMode(mode);\r\n    if (executive) {\r\n      setSelectedExecutive(executive);\r\n      setExecutiveData({\r\n        name: executive.name,\r\n        code: executive.code,\r\n        phone_number: executive.phone_number,\r\n        manager_id: executive.manager_id,\r\n        branches: executive.branches || [],\r\n      });\r\n      setSelectedBranches(executive.branches.map(branch => branch.id)); // Preselect branches based on the executive's branches\r\n    } else {\r\n      setExecutiveData({ name: '', code: '', phone_number: '', manager_id: '', branches: [] });\r\n      setSelectedBranches([]);\r\n    }\r\n    setShowExecutiveModal(true);\r\n  };\r\n\r\n  const handleCloseExecutiveModal = () => {\r\n    setShowExecutiveModal(false);\r\n    setSelectedExecutive(null);\r\n  };\r\n\r\n  // Handle form submission for adding or editing an executive\r\n  const handleSubmitExecutive = async () => {\r\n    try {\r\n      const payload = { ...executiveData, branch_ids: selectedBranches }; // Prepare payload for API request\r\n      if (modalMode === 'add') {\r\n        const response = await api.post('/sales_executives/', payload); // Add new executive\r\n        setSalesExecutives((prevExecutives) => [...prevExecutives, response.data]);\r\n        showToast('success', 'Sales executive added successfully.', 'Success');\r\n      } else if (modalMode === 'edit' && selectedExecutive) {\r\n        const response = await api.put(`/sales_executives/${selectedExecutive.id}`, payload); // Edit executive\r\n        setSalesExecutives((prevExecutives) =>\r\n          prevExecutives.map((executive) => (executive.id === selectedExecutive.id ? response.data : executive))\r\n        );\r\n        showToast('success', 'Sales executive updated successfully.', 'Success');\r\n      }\r\n      handleCloseExecutiveModal();\r\n    } catch (error) {\r\n      console.error('Error saving sales executive:', error);\r\n      showToast('error', 'Failed to save sales executive. Please try again later.', 'Error');\r\n    }\r\n  };\r\n\r\n  // Handle deleting an executive with confirmation modal\r\n  const handleDeleteExecutive = async () => {\r\n    if (!selectedExecutive) {\r\n      showToast('error', 'No sales executive selected for deletion.', 'Error');\r\n      return;\r\n    }\r\n\r\n    try {\r\n      await api.delete(`/sales_executives/${selectedExecutive.id}`); // Delete executive\r\n      setSalesExecutives((prevExecutives) => prevExecutives.filter((executive) => executive.id !== selectedExecutive.id));\r\n      showToast('success', 'Sales executive deleted successfully.', 'Success');\r\n      setShowDeleteConfirmation(false);\r\n      setSelectedExecutive(null);\r\n    } catch (error) {\r\n      console.error('Error deleting sales executive:', error);\r\n      showToast('error', 'Failed to delete sales executive. Please try again later.', 'Error');\r\n    }\r\n  };\r\n\r\n  // Handle branch selection/deselection for editing\r\n  const handleBranchChange = (branchId) => {\r\n    setSelectedBranches((prevSelected) =>\r\n      prevSelected.includes(branchId)\r\n        ? prevSelected.filter((id) => id !== branchId)\r\n        : [...prevSelected, branchId]\r\n    );\r\n  };\r\n\r\n  // Render action buttons based on role\r\n  const renderActions = (executive) => (\r\n    <>\r\n      <Button\r\n        variant=\"primary\"\r\n        size=\"sm\"\r\n        className=\"me-2\"\r\n        onClick={() => handleOpenExecutiveModal('view', executive)}\r\n      >\r\n        <FontAwesomeIcon icon={faEye} />\r\n      </Button>\r\n      {role_id === 3 || role_id === 2 ? (\r\n        <>\r\n          <Button\r\n            variant=\"warning\"\r\n            size=\"sm\"\r\n            className=\"me-2\"\r\n            onClick={() => handleOpenExecutiveModal('edit', executive)}\r\n          >\r\n            <FontAwesomeIcon icon={faEdit} />\r\n          </Button>\r\n          <Button\r\n            variant=\"danger\"\r\n            size=\"sm\"\r\n            onClick={() => {\r\n              setSelectedExecutive(executive);\r\n              setShowDeleteConfirmation(true);\r\n            }}\r\n          >\r\n            <FontAwesomeIcon icon={faTrash} />\r\n          </Button>\r\n        </>\r\n      ) : null}\r\n    </>\r\n  );\r\n\r\n  // Generate pagination items\r\n  const generatePaginationItems = () => {\r\n    const items = [];\r\n    let start = Math.max(1, currentPage - Math.floor(maxPaginationButtons / 2));\r\n    let end = Math.min(start + maxPaginationButtons - 1, totalPages);\r\n\r\n    if (end - start + 1 < maxPaginationButtons) {\r\n      start = Math.max(1, end - maxPaginationButtons + 1);\r\n    }\r\n\r\n    for (let number = start; number <= end; number++) {\r\n      items.push(\r\n        <Pagination.Item key={number} active={number === currentPage} onClick={() => paginate(number)}>\r\n          {number}\r\n        </Pagination.Item>\r\n      );\r\n    }\r\n\r\n    return items;\r\n  };\r\n\r\n  // Display page X of Y for unfiltered results\r\n  const renderPageInfo = () => {\r\n    return totalPages > 1 ? (\r\n      <div className=\"mt-3 text-center\">\r\n        <Typography variant=\"body2\">\r\n          Page {currentPage} of {totalPages}\r\n        </Typography>\r\n      </div>\r\n    ) : null;\r\n  };\r\n\r\n  if (loading) return <Spinner animation=\"border\" />;\r\n\r\n  return (\r\n    <Container className=\"mt-4\">\r\n      <Row>\r\n        <Col md={12}>\r\n          <Typography variant=\"h4\" gutterBottom>\r\n            Sales Executive Management\r\n          </Typography>\r\n        </Col>\r\n      </Row>\r\n      {role_id === 2 || role_id === 3 ? (\r\n        <Row>\r\n          <Col md={12}>\r\n            <Button\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={() => handleOpenExecutiveModal('add')}\r\n            >\r\n              <FontAwesomeIcon icon={faPlus} /> Add New Sales Executive\r\n            </Button>\r\n          </Col>\r\n        </Row>\r\n      ) : null}\r\n\r\n      <Row className=\"mt-4\">\r\n        <Col md={12}>\r\n          <Table striped bordered hover>\r\n            <thead>\r\n              <tr>\r\n                <th>Name</th>\r\n                <th>Code</th>\r\n                <th>Phone Number</th>\r\n                <th>Manager</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {salesExecutives.map((executive) => {\r\n                const manager = salesManagers.find((sm) => sm.id === executive.manager_id);\r\n                return (\r\n                  <tr key={executive.id}>\r\n                    <td>{executive.name}</td>\r\n                    <td>{executive.code}</td>\r\n                    <td>{executive.phone_number}</td>\r\n                    <td>{manager ? manager.name : 'Unassigned'}</td>\r\n                    <td>{renderActions(executive)}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </Table>\r\n\r\n          {/* Pagination and Page Info */}\r\n          {showPagination && totalPages > 1 && (\r\n            <>\r\n              <Pagination className=\"justify-content-center\">\r\n                <Pagination.First onClick={() => paginate(1)} disabled={currentPage === 1} />\r\n                <Pagination.Prev\r\n                  onClick={() => paginate(Math.max(1, currentPage - 1))}\r\n                  disabled={currentPage === 1}\r\n                />\r\n                {generatePaginationItems()}\r\n                <Pagination.Next\r\n                  onClick={() => paginate(Math.min(totalPages, currentPage + 1))}\r\n                  disabled={currentPage === totalPages}\r\n                />\r\n                <Pagination.Last onClick={() => paginate(totalPages)} disabled={currentPage === totalPages} />\r\n              </Pagination>\r\n              {renderPageInfo()}\r\n            </>\r\n          )}\r\n        </Col>\r\n      </Row>\r\n\r\n      {/* Modal for Add/Edit/View Sales Executive */}\r\n      <Modal\r\n        open={showExecutiveModal}\r\n        onClose={handleCloseExecutiveModal}\r\n        style={{ overflow: 'auto' }}\r\n      >\r\n        <Card style={{ width: '50%', margin: '5% auto', padding: '20px', maxHeight: '80vh', overflowY: 'auto' }}>\r\n          <Typography variant=\"h5\" gutterBottom>\r\n            {modalMode === 'add' ? 'Add New Sales Executive' : modalMode === 'edit' ? 'Edit Sales Executive' : 'View Sales Executive'}\r\n          </Typography>\r\n\r\n          {/* View Mode: Show details in a card */}\r\n          {modalMode === 'view' ? (\r\n            <>\r\n              <Typography variant=\"body1\" gutterBottom><strong>Name:</strong> {executiveData.name}</Typography>\r\n              <Typography variant=\"body1\" gutterBottom><strong>Code:</strong> {executiveData.code}</Typography>\r\n              <Typography variant=\"body1\" gutterBottom><strong>Phone Number:</strong> {executiveData.phone_number}</Typography>\r\n              <Typography variant=\"body1\" gutterBottom>\r\n                <strong>Manager:</strong> {salesManagers.find((m) => m.id === executiveData.manager_id)?.name || 'Unassigned'}\r\n              </Typography>\r\n\r\n              <Card style={{ marginTop: '20px', padding: '15px' }}>\r\n                <Typography variant=\"body1\" gutterBottom><strong>Assigned Branches:</strong></Typography>\r\n                {executiveData.branches.length > 0 ? (\r\n                  executiveData.branches.map(branch => (\r\n                    <Typography key={branch.id} variant=\"body2\">\r\n                      {branch.name}\r\n                    </Typography>\r\n                  ))\r\n                ) : (\r\n                  <Typography variant=\"body2\">No branches assigned</Typography>\r\n                )}\r\n              </Card>\r\n            </>\r\n          ) : (\r\n            <>\r\n              {/* Add/Edit Mode: Show editable fields */}\r\n              <TextField\r\n                fullWidth\r\n                label=\"Executive Name\"\r\n                value={executiveData.name}\r\n                onChange={(e) => setExecutiveData({ ...executiveData, name: e.target.value })}\r\n                margin=\"normal\"\r\n                disabled={modalMode === 'view'} // Disable fields if in view mode\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Code\"\r\n                value={executiveData.code}\r\n                onChange={(e) => setExecutiveData({ ...executiveData, code: e.target.value })}\r\n                margin=\"normal\"\r\n                disabled={modalMode === 'view'} // Disable fields if in view mode\r\n              />\r\n              <TextField\r\n                fullWidth\r\n                label=\"Phone Number\"\r\n                value={executiveData.phone_number}\r\n                onChange={(e) => setExecutiveData({ ...executiveData, phone_number: e.target.value })}\r\n                margin=\"normal\"\r\n                disabled={modalMode === 'view'} // Disable fields if in view mode\r\n              />\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Sale Manager</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  value={executiveData.manager_id}\r\n                  onChange={(e) => setExecutiveData({ ...executiveData, manager_id: parseInt(e.target.value, 10) })}\r\n                  disabled={modalMode === 'view'}\r\n                >\r\n                  <option value=\"\" disabled>Select Sales Manager</option>\r\n                  {salesManagers.map((manager) => (\r\n                    <option key={manager.id} value={manager.id}>\r\n                      {manager.name}\r\n                    </option>\r\n                  ))}\r\n                </Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group className=\"mb-3\">\r\n                <Form.Label>Branches</Form.Label>\r\n                <Form.Control\r\n                  as=\"select\"\r\n                  onChange={(e) => handleBranchChange(parseInt(e.target.value, 10))}\r\n                  value=\"\"\r\n                  disabled={modalMode === 'view'}\r\n                >\r\n                  <option value=\"\" disabled>Select Branch to Add</option>\r\n                  {branches\r\n                    .filter(branch => !selectedBranches.includes(branch.id))\r\n                    .map((branch) => (\r\n                      <option key={branch.id} value={branch.id}>\r\n                        {branch.name}\r\n                      </option>\r\n                    ))}\r\n                </Form.Control>\r\n\r\n                <div className=\"mt-2\">\r\n                  {selectedBranches.map(branchId => {\r\n                    const branch = branches.find(b => b.id === branchId);\r\n                    return (\r\n                      <Chip\r\n                        key={branchId}\r\n                        label={branch ? branch.name : branchId}\r\n                        onDelete={modalMode !== 'view' ? () => handleBranchChange(branchId) : undefined}\r\n                        color=\"primary\"\r\n                        className=\"mr-2\"\r\n                      />\r\n                    );\r\n                  })}\r\n                </div>\r\n              </Form.Group>\r\n\r\n              {/* Buttons */}\r\n              {modalMode !== 'view' && (\r\n                <Row className=\"mt-3\">\r\n                  <Col md={6}>\r\n                    <Button variant=\"contained\" color=\"primary\" onClick={handleSubmitExecutive}>\r\n                      Save\r\n                    </Button>\r\n                  </Col>\r\n                  <Col md={6}>\r\n                    <Button variant=\"outlined\" color=\"secondary\" onClick={handleCloseExecutiveModal}>\r\n                      Cancel\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n              )}\r\n            </>\r\n          )}\r\n        </Card>\r\n      </Modal>\r\n\r\n      {/* Delete Confirmation Modal */}\r\n      <Modal\r\n        open={showDeleteConfirmation}\r\n        onClose={() => setShowDeleteConfirmation(false)}\r\n        style={{ display: 'flex', alignItems: 'center', justifyContent: 'center' }}\r\n      >\r\n        <Card style={{ padding: '20px' }}>\r\n          <Typography variant=\"h6\" gutterBottom>\r\n            Are you sure you want to delete this sales executive?\r\n          </Typography>\r\n          <Row className=\"mt-3\">\r\n            <Col md={6}>\r\n              <Button variant=\"contained\" color=\"error\" onClick={handleDeleteExecutive}>\r\n                Delete\r\n              </Button>\r\n            </Col>\r\n            <Col md={6}>\r\n              <Button variant=\"outlined\" color=\"secondary\" onClick={() => setShowDeleteConfirmation(false)}>\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Card>\r\n      </Modal>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ManageSalesExecutivesPage;\r\n"],"names":["createSvgIcon","_jsx","d","getChipUtilityClass","slot","generateUtilityClass","generateUtilityClasses","ChipRoot","styled","name","overridesResolver","props","styles","ownerState","color","iconColor","clickable","onDelete","size","variant","chipClasses","avatar","capitalize","icon","deleteIcon","root","deletable","memoTheme","_ref","theme","textColor","palette","mode","grey","maxWidth","fontFamily","typography","fontSize","pxToRem","display","alignItems","justifyContent","height","vars","text","primary","backgroundColor","action","selected","borderRadius","whiteSpace","transition","transitions","create","cursor","outline","textDecoration","border","padding","verticalAlign","boxSizing","disabled","opacity","disabledOpacity","pointerEvents","marginLeft","marginRight","width","Chip","defaultAvatarColor","avatarColorPrimary","contrastText","dark","avatarColorSecondary","secondary","avatarSmall","WebkitTapHighlightColor","primaryChannel","alpha","margin","variants","style","Object","entries","filter","_ref2","value","main","map","_ref3","contrastTextChannel","defaultIconColor","focusVisible","selectedChannel","selectedOpacity","focusOpacity","_ref4","_ref5","background","userSelect","hoverOpacity","boxShadow","shadows","_ref6","_ref7","defaultBorder","hover","focus","iconSmall","deleteIconSmall","_ref8","_ref9","mainChannel","ChipLabel","label","overflow","textOverflow","paddingLeft","paddingRight","isDeleteKeyboardEvent","keyboardEvent","key","React","inProps","ref","useDefaultProps","avatarProp","className","clickableProp","component","ComponentProp","deleteIconProp","iconProp","onClick","onKeyDown","onKeyUp","tabIndex","skipFocusWhenDisabled","other","chipRef","handleRef","useForkRef","handleDeleteIconClick","event","stopPropagation","ButtonBase","classes","slots","composeClasses","useUtilityClasses","moreProps","focusVisibleClassName","disableRipple","clsx","CancelIcon","_jsxs","as","undefined","currentTarget","target","preventDefault","children","_local_user$role","_salesManagers$find","showToast","salesExecutives","setSalesExecutives","useState","loading","setLoading","showExecutiveModal","setShowExecutiveModal","showDeleteConfirmation","setShowDeleteConfirmation","selectedExecutive","setSelectedExecutive","modalMode","setModalMode","executiveData","setExecutiveData","code","phone_number","manager_id","branches","setBranches","selectedBranches","setSelectedBranches","salesManagers","setSalesManagers","currentPage","setCurrentPage","totalPages","setTotalPages","showPagination","setShowPagination","local_user","JSON","parse","localStorage","getItem","role_id","parseInt","role","id","useEffect","async","allExecutives","api","get","data","sales_executives","filteredExecutives","executive","length","slice","Math","ceil","error","console","fetchSalesExecutives","fetchBranches","useCallback","branchResponse","fetchSalesManagers","response","params","type","paginate","pageNumber","handleOpenExecutiveModal","arguments","branch","handleCloseExecutiveModal","handleBranchChange","branchId","prevSelected","includes","renderActions","_Fragment","Button","FontAwesomeIcon","faEye","faEdit","faTrash","Spinner","animation","Container","Row","Col","md","Typography","gutterBottom","faPlus","Table","striped","bordered","manager","find","sm","Pagination","First","Prev","max","generatePaginationItems","items","start","floor","maxPaginationButtons","end","min","number","push","Item","active","Next","Last","Modal","open","onClose","Card","maxHeight","overflowY","m","marginTop","TextField","fullWidth","onChange","e","Form","Group","Label","Control","b","payload","branch_ids","post","prevExecutives","put","delete"],"sourceRoot":""}